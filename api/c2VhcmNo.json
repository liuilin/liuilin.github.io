[{"title":"Hello World","date":"2022-11-16T10:30:28.835Z","date_formatted":{"ll":"2022年11月16日","L":"2022/11/16","MM-DD":"11-16"},"updated":"2022-11-16T02:30:28.835Z","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start\nCreate a new post\n1$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server\n1$ hexo server\nMore info: Server\nGenerate static files\n1$ hexo generate\nMore info: Generating\nDeploy to remote sites\n1$ hexo deploy\nMore info: Deployment\n","plink":"https://blog.liumulin.top/2022/11/16/hello-world/"},{"title":"Ubuntu-开发环境配置","date":"2022-11-16T10:30:28.834Z","date_formatted":{"ll":"2022年11月16日","L":"2022/11/16","MM-DD":"11-16"},"updated":"2022-11-16T02:30:28.834Z","content":"Ubuntu 开发环境配置\nDev on Windows with WSL\nNode.js | Dev on Windows with WSL\n配置 Shell 基础环境\n\n\nShell 环境，更换软件镜像源| Dev on Windows with WSL\n\n\n记录一次 WSL2 的网络代理配置 | jiayaoO3O’s Blog\n\nv2ray 要开启允许局域网连接\n\n\n\n安装 zsh\n1sudo apt install zsh -y\n\necho $0 # 查看当前 shell 类型\n\n\n\ninstall oh-my-zsh\n1sh -c &quot;$(curl -fsSL -x socks5://$(ip route | grep default | awk &#x27;&#123;print $3&#125;&#x27;):10808 https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;\n\n\nTODO 把 GitHub 上的 .zshrc 文件下载下来覆盖\n然后一定要新开窗口，不然配置不生效\n\n\n安装 mackup 备份还原 dotfiles 配置\nlra/mackup: Keep your application settings in sync (OS X/Linux)\n创建用户：sudo adduser xxx\ncurl 设置代理 - 知乎\n\n\nUbuntu-22.04 本身就自带 Python3(3.10.4) 最新版，无需安装\n\n\nInstallation - pip documentation v22.0.4 安装最新版 pip\n采用 get-pip.py 脚本的方式\n12345678# run the following command to download the get-pip.py file，下面 $(ip route | grep default | awk &#x27;&#123;print $3&#125;&#x27;) 获取 WSL 动态 IP，用于 v2ray 代理curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py# To install PIP type in the followingpython3 get-pip.py# WARNING: The script wheel is installed in &#x27;~/.local/bin&#x27; which is not on PATH.# 此时 pip 没有环境变量，所以命令未生效。使用 add alias 来调用alias pip=&#x27;~/.local/bin/pip3&#x27;pip -V\n如果是 zsh 的话（想要一直生效的话），还需要把 alias 配置到 .zshrc 里面\n\nnote: 不要用 Ubuntu 自带的 apt 方式安装，因为 Python3 是最新版而 apt 安装出来的较低版本，会导致与 Python 最新版那边不兼容，从而 pip 安装软件时会报错\npython - ImportError: cannot import name ‘html5lib’ from ‘pip._vendor’ (/usr/lib/python3/dist-packages/pip/_vendor/init.py) - Stack Overflow\nPip is not working for Python 3.10 on Ubuntu - Stack Overflow\nThis is likely caused by a too old system pip version.\nInstall the latest with:\ncurl -sS https://bootstrap.pypa.io/get-pip.py | python3.10\nHow To Install Python 3 and Set Up a Programming Environment on Ubuntu 22.04 | DigitalOcean\n\n\n\ninstall mackup with pip\n123456# Install Mackup with PIPpip install --upgrade mackupalias mackup=&#x27;~/.local/bin/mackup&#x27;# Launch it and back up your filesmackup backup\n\n\n下载 mackup 配置文件并更新\n1234# 代理下载文件到当前目录curl -x socks5://WSL 代理 IP:10808 https://github.com/liuilin/dotfiles/raw/master/.mackup.cfg -OL# 修改配置文件sudo vim .mackup.cfg\n\ngit - Download single files from GitHub - Stack Overflow\nYou can use curl this way:\n1curl -OL https://raw.githubusercontent.com/&lt;username&gt;/&lt;repo-name&gt;/&lt;branch-name&gt;/path/to/file\nO means that curl downloads the content\nL means that curl follows the redirection\n\n\n\n恢复所有备份的配置\nhttps://drive.google.com/drive/folders/1LrGZMV4aQYLIGTwoHodb3eJ1GE3JbqJV\n修改当前用户的全局设置，使 mackup 环境变量生效\n不要恢复 .bash_logout 文件！！！否则会报错\n1234567sudo vim ~/.bashrcexport PATH=/home/daniel/.local/bin/mackup:$PATHsource .bashrcsudo vim .mackup.cfg# 修改存储路径 path = /mnt/c/Users/liuqiang/# TODO 考虑安装完 zsh 再 mackup restore 恢复配置，不然会被覆盖mackup restore\n\n\nGoogle Drive 自动同步文件夹 /mnt/c/Users/Daniel/dotfiles\n\n\ntodo 运行代理加速\n1234# 运行 .zshrc 里面配置的命令来自动配置全局代理proxy# 查看 http.https://github.com.proxy 配置是否生效，q：退出交互界面git config -l\n配置 mackup 环境变量\n12sudo vim ~/.zshrcexport PATH=/home/daniel/.local/bin/mackup:$PATH\n\n\n\nYadm：我是如何同步并管理我的 Dotfiles 的？ - Spencer’s Blog\n\n安装 oh-my-zsh 插件\n\n\n插件 autojump：wting/autojump: A cd command that learns - easily navigate directories from the command line\n1sudo apt install autojump\n\n\n插件 zsh-autosuggestions：zsh-autosuggestions/INSTALL.md at master · zsh-users/zsh-autosuggestions\n1git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions\n\n\n插件 zsh-syntax-highlighting：zsh-syntax-highlighting/INSTALL.md at master · zsh-users/zsh-syntax-highlighting\n1git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting\n\n\n安装主体模板：\n1git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k\n\nWindows 安装 Nerd Font（Sauce Code Pro Nerd Font）字体：解压到 C:\\Windows\\Fonts 路径下\n主体配置：One half dark\n背景不透明度：66\n\n\n字体显示问题（NERD FONT）：romkatv/nerd-fonts: Iconic font aggregator, collection, &amp; patcher. 3,600+ icons, 50+ patched fonts: Hack, Source Code Pro, more. Glyph collections: Font Awesome, Material Design Icons, Octicons, &amp; more\n静默覆盖文件：yes | cp -rf xxx xxx\n\n\n\n重新打开一个会话窗口 Restart zsh (such as by opening a new instance of your terminal emulator).\n\n\n配置 Node 环境\n配置 Java 环境\n\n\n安装 openjdk\n1sudo apt install openjdk-11-jdk\n\n安装 jdk 报错的话\nThe following packages have unmet dependencies:\ndebianutils : Breaks: x11-common (&lt; 1:7.7+23~) but 1:7.7+19ubuntu14 is to be installed\nlibglx-mesa0 : Depends: libx11-xcb1 (&gt;= 2:1.6.9) but it is not installable\nE: Error, pkgProblemResolver::Resolve generated breaks, this may be caused by held packages.\n解决：\n12sudo apt install libx11-xcb1sudo apt install libglx-mesa0\n还是提示\nThe following packages have unmet dependencies:\ndebianutils : Breaks: x11-common (&lt; 1:7.7+23~) but 1:7.7+19ubuntu14 is to be installed\nE: Error, pkgProblemResolver::Resolve generated breaks, this may be caused by held packages.\n使用一个强大的包管理工具\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061$ sudo apt install aptitude# debianutils 版本太新了，根据提示选 n 不保留当前版本，把 debianutils 降级$ sudo aptitude install x11-commonThe following NEW packages will be installed:  x11-common0 packages upgraded, 1 newly installed, 0 to remove and 0 not upgraded.Need to get 22.3 kB of archives. After unpacking 321 kB will be used.The following packages have unmet dependencies: debianutils : Breaks: x11-common (&lt; 1:7.7+23~) but 1:7.7+19ubuntu14 is to be installedThe following actions will resolve these dependencies:     Keep the following packages at their current version:1)     x11-common [Not Installed]Accept this solution? [Y/n/q/?] nThe following actions will resolve these dependencies:     Downgrade the following packages:1)     debianutils [5.5-1ubuntu2 (now) -&gt; 4.9.1 (focal)]Accept this solution? [Y/n/q/?] YThe following packages will be DOWNGRADED:  debianutilsThe following NEW packages will be installed:  x11-common0 packages upgraded, 1 newly installed, 1 downgraded, 0 to remove and 0 not upgraded.Need to get 108 kB of archives. After unpacking 307 kB will be used.Do you want to continue? [Y/n/?] YGet: 1 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal/main amd64 debianutils amd64 4.9.1 [85.8 kB]Get: 2 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal/main amd64 x11-common all 1:7.7+19ubuntu14 [22.3 kB]Fetched 108 kB in 1s (94.5 kB/s)dpkg: warning: downgrading debianutils from 5.5-1ubuntu2 to 4.9.1(Reading database ... 36541 files and directories currently installed.)Preparing to unpack .../debianutils_4.9.1_amd64.deb ...Unpacking debianutils (4.9.1) over (5.5-1ubuntu2) ...Setting up debianutils (4.9.1) ...Selecting previously unselected package x11-common.(Reading database ... 36537 files and directories currently installed.)Preparing to unpack .../x11-common_1%3a7.7+19ubuntu14_all.deb ...dpkg-query: no packages found matching nux-toolsUnpacking x11-common (1:7.7+19ubuntu14) ...Setting up x11-common (1:7.7+19ubuntu14) ...update-rc.d: warning: start and stop actions are no longer supported; falling back to defaultsinvoke-rc.d: could not determine current runlevelProcessing triggers for man-db (2.10.2-1) ...Scanning processes...Scanning processor microcode...Scanning linux images...Failed to retrieve available kernel versions.Failed to check for processor microcode upgrades.No services need to be restarted.No containers need to be restarted.No user sessions are running outdated binaries.No VM guests are running outdated hypervisor (qemu) binaries on this host.\n\n\n\n安装 Maven\n12sudo apt install maven -Ymkdir ~/.m2 &amp;&amp; cp -r /usr/share/maven/conf/settings.xml ~/.m2/settings.xml\n修改 settings 的中央仓库：阿里云云效仓库服务\n\n\nQuestion\n\n\n查看当前 Shell 环境\n1echo $0\n\n\nhistory | grep &quot;git clone&quot;这个命令就能找到近期 clone 了哪些库，省却了写一堆代码的功夫。\n\n\n给 root 用户设置密码\n123sudo passwd rootsu root # 切换到 root 用户usermod -aG sudo xxx # 给 xxx 用户赋予 root 权限\n\n\n获取 WSL 动态 IP\n12# 获取 WSL IP，用于下面临时 v2ray 代理ip route | grep default | awk &#x27;&#123;print $3&#125;&#x27;\n示例：curl -x socks5://$(ip route | grep default | awk ‘{print $3}’):10808 https://bootstrap.pypa.io/get-pip.py -o get-pip.py\n\n\n","plink":"https://blog.liumulin.top/2022/11/16/Ubuntu-开发环境配置/"},{"title":"IDEA 远程一键部署 SpringBoot 到 Docker","date":"2022-05-20T19:16:59.000Z","date_formatted":{"ll":"2022年5月20日","L":"2022/05/20","MM-DD":"05-20"},"updated":"2022-11-16T02:30:28.832Z","content":"IDEA 远程一键部署 SpringBoot 到 Docker\n一、开发准备\n\n\n安装 Docker\n如何在 Ubuntu 20.04 上安装 Docker | Linux化\n\n\n配置开启 docker 远程连接端口\n1234# Centosvim /usr/lib/systemd/system/docker.service# Ubuntuvim /usr/lib/systemd/system/docker.service\n在 ExecStart 最后加上 -H tcp://0.0.0.0:2375\n\n如果是阿里云服务器，就在 云服务器 ECS / 安全组 中添加 TCP 端口 2375\n\n\n\n加载 docker 守护进程\n1systemctl daemon-reload\n\n\n重启 docker\n1systemctl restart docker\n\n\n测试是否开启成功\n1curl http://localhost:2375/version\n\n或者查看端口是否打开\nps aux | grep docker\n\n\n\n远程连接服务器 docker\n填写远程 docker 地址\n\nSettings - Build, Execution, Deployment - Docker：新加 Docker，并配置 TCP socket 的 Engine API URL 为 tcp://服务器 ip:2375\n连接成功后在 IDEA 主界面 services 的 dock 栏有新配置的 Docker 列表，双击连接后会列出远程的 docker 容器和镜像\n\n\n二、建项目\n\n\n改 pom\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;  &lt;parent&gt;    &lt;groupId&gt;com.xkcoding&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-demo&lt;/artifactId&gt;    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;  &lt;/parent&gt;  &lt;groupId&gt;com.liumulin&lt;/groupId&gt;  &lt;artifactId&gt;demo-docker1&lt;/artifactId&gt;  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;  &lt;name&gt;demo-docker1&lt;/name&gt;  &lt;description&gt;demo-docker1&lt;/description&gt;  &lt;properties&gt;    &lt;java.version&gt;1.8&lt;/java.version&gt;  &lt;/properties&gt;  &lt;dependencies&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;      &lt;scope&gt;test&lt;/scope&gt;    &lt;/dependency&gt;  &lt;/dependencies&gt;  &lt;build&gt;    &lt;plugins&gt;      &lt;plugin&gt;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;        &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;      &lt;/plugin&gt;      &lt;plugin&gt;        &lt;groupId&gt;com.spotify&lt;/groupId&gt;        &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;        &lt;version&gt;1.0.0&lt;/version&gt;        &lt;configuration&gt;          &lt;dockerDirectory&gt;src/main/docker&lt;/dockerDirectory&gt;          &lt;resources&gt;            &lt;resource&gt;              &lt;targetPath&gt;/&lt;/targetPath&gt;              &lt;!-- 打包到 target 目录，等于父 pom 文件的 &lt;directory&gt;$&#123;project.basedir&#125;/target&lt;/directory&gt;--&gt;              &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;              &lt;!-- 等于父 pom 文件的 &lt;finalName&gt;$&#123;project.artifactId&#125;-$&#123;project.version&#125;&lt;/finalName&gt;--&gt;              &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;            &lt;/resource&gt;          &lt;/resources&gt;        &lt;/configuration&gt;      &lt;/plugin&gt;      &lt;plugin&gt;        &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;        &lt;executions&gt;          &lt;execution&gt;            &lt;phase&gt;package&lt;/phase&gt;            &lt;configuration&gt;              &lt;tasks&gt;                &lt;copy todir=&quot;src/main/docker&quot;                      file=&quot;target/$&#123;project.artifactId&#125;-$&#123;project.version&#125;.$&#123;project.packaging&#125;&quot;/&gt;              &lt;/tasks&gt;            &lt;/configuration&gt;            &lt;goals&gt;              &lt;goal&gt;run&lt;/goal&gt;            &lt;/goals&gt;          &lt;/execution&gt;        &lt;/executions&gt;      &lt;/plugin&gt;    &lt;/plugins&gt;  &lt;/build&gt;&lt;/project&gt;\n\n\n在 src/main 目录下创建 docker 目录，并创建 Dockerfile 文件\n123FROM openjdk:8-jdk-alpineADD *.jar app.jarENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/app.jar&quot;]\n\n\n建 YAML\n1234server:  port: 9090logging:  path: /docker/logs\n\n\n主启动类\n1234567891011121314package com.liumulin.demodocker1.controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMappingpublic class HelloController &#123;    @GetMapping(&quot;/hello&quot;)    public String hello() &#123;        return &quot;Hello,From Docker!&quot;;    &#125;&#125;\n\n\n新增 Dockerfile 配置\nIDEA - Edit Configurations…\n\n命令解释：\nImage tag：指定镜像名称和 tag，镜像名称为 docker-demo，tag 为 1.1\nBind ports：绑定宿主机端口到容器内部端口。格式为 [宿主机端口]:[容器内部端口]\nBind mounts：将宿主机目录挂到到容器内部目录中。格式为 [宿主机目录]:[容器内部目录]。这个 springboot 项目会将日志打印在容器 /home/developer/app/logs/ 目录下，将宿主机目录挂载到容器内部目录后，那么日志就会持久化容器外部的宿主机目录中。\n\n\nmaven 打 jar 包\nmvn clean install\n\n\n运行 Dockerfile\n会先 pull 基础镜像（比如 openjdk），然后再打包镜像，并将镜像部署到远程 docker 运行\n成功后可以看到镜像名为 docker-demo:1.1，容器名为 docker-server\n\n\n查看日志\nIDEA 的 Docker 容器可以看到 Log 输出到了控制台\n\n\n","plink":"https://blog.liumulin.top/2022/05/20/IDEA-远程一键部署-SpringBoot-到-Docker/"},{"title":"优雅编写博客 - Typora+jsDelivr+Picgo+TinyPNG 实现图片压缩加速上传图床","date":"2022-05-18T15:36:10.000Z","date_formatted":{"ll":"2022年5月18日","L":"2022/05/18","MM-DD":"05-18"},"updated":"2022-11-16T02:30:28.836Z","content":"scoop install node\n登录 tinypng 获取 apikey\n在 PicGo 中下载插件 picgo-plugin-compress，在里面填入 apikey\n","plink":"https://blog.liumulin.top/2022/05/18/优雅编写博客-Typora-jsDelivr-Picgo-TinyPNG-实现图片压缩加速上传图床/"},{"title":"设计模式","date":"2022-05-18T14:55:47.000Z","date_formatted":{"ll":"2022年5月18日","L":"2022/05/18","MM-DD":"05-18"},"updated":"2022-11-16T02:30:28.838Z","content":"设计模式\n\n创建型\n1. 工厂方法\n定义：定义一个创建对象的接口，但让实现这个接口的类来决定实例化哪个类， 工厂方法让类的实例化推迟到子类进行\n\n如果都是未知的方法，就用接口定义\n如果某些行为或属性是已知的（已知的实现），那就要抽象方法\n\n2. 抽象工厂\n定义：1. 抽象工厂模式提供一个创建一系列相关或相互依赖对象的接口。2. 无需指定他们具体的类\n适用场景：\n\n客户端（应用层）不依赖于产品类实例如何被创建，实现等细节\n强调一系列相关的产品对象（属于同一产品族）一起使用创建对象需要大量重复代码\n提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现\n\n优点：\n\n具体产品在应用层代码隔离，无需关心创建细节\n将一个系列的产品族统一到一起创建\n\n缺点：\n\n规定了所有可能被创建的产品集合，产品族中扩展新的产品困难，需要修改抽象工厂的接口\n增加了系统的抽象性和理解难度\n\n\n解决产品族的问题（美的热水器、冰箱、洗衣机为同一产品族）\n\n3.\n结构性\n代理模式：MyBatis 代理\n行为型\n策略模式：模拟营销折扣，包括折扣券\n","plink":"https://blog.liumulin.top/2022/05/18/设计模式/"},{"title":"bad interpreter: /usr/bin/python3:  no such file or directory 错误解决 ","date":"2021-06-10T13:28:30.000Z","date_formatted":{"ll":"2021年6月10日","L":"2021/06/10","MM-DD":"06-10"},"updated":"2022-11-16T02:30:28.835Z","content":"分析\n查阅资料后发现原因是 python 的符号链接 symbolic links 问题。我自己安装 / 卸载 python 后把环境搞出问题了\n解决\n1234567ll /usr/bin/python*sudo unlink /usr/bin/python3sudo ln -s /usr/bin/python3.8（whereis python 安装目录） /usr/bin/python3\n","plink":"https://blog.liumulin.top/2021/06/10/bad-interpreter-usr-bin-python3-no-such-file-or-directory-错误解决/"},{"title":"Ubuntu 安装 chromedriver","date":"2021-06-10T13:25:54.000Z","date_formatted":{"ll":"2021年6月10日","L":"2021/06/10","MM-DD":"06-10"},"updated":"2022-11-16T02:30:28.834Z","content":"Download Chromedriver\nThis should download the latest version of Chromedriver, and extract it to the correct location, with the correct permissions.\n123version&#x3D;$(curl -s &quot;https:&#x2F;&#x2F;chromedriver.storage.googleapis.com&#x2F;LATEST_RELEASE&quot;)wget -qP &#x2F;tmp&#x2F; &quot;https:&#x2F;&#x2F;chromedriver.storage.googleapis.com&#x2F;$&#123;version&#125;&#x2F;chromedriver_linux64.zip&quot;sudo unzip -o &#x2F;tmp&#x2F;chromedriver_linux64.zip -d &#x2F;usr&#x2F;bin\nThe permissions should be 755 by default, but if they aren’t, you can run:\n1sudo chmod 755 &#x2F;usr&#x2F;bin&#x2F;chromedriver\nIf you want a specific version, see the index page, or the website.\nYou can also edit the above commands to use LATEST_RELEASE_80, if you wanted version 80, for example.\n\nUpdate to latest Chrome\nIf you don’t already have the latest version of Google Chrome, you may need to update it with:\n1sudo apt-get --only-upgrade install google-chrome-stable\n参考来源\nHow To Install Chromedriver on Ubuntu 20.04 without snap | TheNerdLife Blog: \ncommand line - How to update Chromedriver on Ubuntu? - Stack Overflow: \n","plink":"https://blog.liumulin.top/2021/06/10/Ubuntu-安装-chromedriver/"},{"title":"CSS","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"updated":"2022-11-16T02:30:28.829Z","content":"CSS 学习资源\n最好的调试方式：加 border\n\n想知道自己 CSS 写的好不好就去 dribble 去找一个来实现\n\n\nGoogle: 关键词 MDN\nCSS Tricks\nGoogle: 阮一峰 css\n张鑫旭的 240 多篇 CSS 博客\nCodrops 炫酷 CSS 效果\nCSS 揭秘\nCSS 2.1 中文 spec\nMagic of CSS 免费在线书\n\n\n建议：中文学习资源只看大 V 的（毕竟他们要维护形象不能瞎写），英文资源看 CSS Tricks、MDN 和 Codrops。书的话作用不大，最权威的书其实是文档。\n\n\n如果你想快速上手，就先写小 demo 再学理论。\n如果你想一鸣惊人，就仔细看 CSS 规范文档。\n\n知识点\n\n\n如何做横向布局（左右 float + clearfix）\n\n\n如何取色、量尺寸、预览字体（Word）\n\n\n如何使用开发者工具查看样式、继承样式\n\n\n四种引入 CSS 的方式：style 属性、style 标签、css link、css import\n\n\n常见 CSS 属性：\n\n\n\nfont-family font-size font-weight\nul、body 的默认 margin 和 padding\ncolor、background-color、margin、padding\nline-height\n\n周边工具\n\nLESS CSS\n一种简化、功能更多的 CSS 语言 中文官网 英文官网\nSASS\n一种简化、功能更多的 CSS 语言（请自行搜索中英文官网）\nPostCSS\n一种 CSS 处理程序\n\n我的建议是，先不要看周边工具，学好最朴素的 CSS，然后升级就很容易了。\n布局与定位\n\nIDE live template：.clearfix 清除浮动\n\n\n\n块级元素高度：由内部 文档流 高度的总和决定的\n\n\n文档流：内联元素从左往右，块级元素从上到下另起一行\n\n\n内联元素高度（基本不可测）：由字体决定，浏览器会读取字体设计的建议行高\n\n内联元素不接受宽高（宽度由元素决定），把它转为块元素（display:inline-block;）\n用 display:inline-block; 转为内联元素后，需要加入 vertical-align：top 来修复尾部 bug\n转为内联元素后居中方式：text-align : center;\n方应杭 css line height\n\n\n\n宽高能不写就不写，容易有 bug\n\nspan 里面用 padding:4px 16px;line-height:22px; 来替换 width:70px; height:29px; line-height:29px; text-align: center;\n\n\n\n绝对定位是脱离文档流的，那它们就不知道容器有多高（所以要给个高度）\n\n\n推荐优先使用 padding，可以配合 border-box\n\n\n字体之类的就看淘宝、京东这类大网站，天天有人看不会出错\n\n\n在线工具\ncss3 linear gradient generator：渐变\ncss animation generator：动画\ncss shadow generator：阴影\n\n出现问题之后看不出来可以去 mdn 找正确的例子，在上面的基础上修改\n\nweb page free psd：设计素材\nTricks\n\n父元素高度有了，子元素高度可写 100%（父变子变）\ncss 层级最好不要超过 5 个，超了就考虑重新起一个名字\n命名：bar-inner，- 只用来做结构（表示内部的 bar），不作为起名字\n写 CSS 要从内到外，从上到下\n\n","plink":"https://blog.liumulin.top/2021/03/20/CSS/"},{"title":"DOM","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"updated":"2022-11-16T02:30:28.830Z","content":"\n\nDOM 是一棵树（tree）\n\n\n树上有 Node\nNode 分为 Document（html）、Element（元素）和 Text（文本），以及其他不重要的。\n\n\nNode 的接口\ni. 属性 childNodes,firstChild,innerText,lastChild,nextSibling,nodeName,nodeType,nodeValue,outerText,ownerDocument,parentElement,parentNode,previousSibling,textContent\n如果记不住就背下以下单词：\n\n\nchild /children/parent\n\n\nnode\n\n\nfirst /last\n\n\nnext /previous\n\n\nsibling /siblings\n\n\ntype\n\n\nvalue /text/content\n\n\ninner /outer\n\n\nelement\n\n\n然后互相组合\nii. 方法（如果一个属性是函数，那么这个属性就也叫做方法；换言之，方法是函数属性）\n\nappendChild ()\ncloneNode ()\ncontains ()\nhasChildNodes ()\ninsertBefore ()\nisEqualNode ()\nisSameNode ()\nremoveChild ()\nreplaceChild ()\nnormalize () // 常规化&gt; 搞清楚英文单词的意思就知道用法\n\n\n如果发现知道英文后依然不明白用法，看 MDN 的例子即可，如 normalize\nDOM APi 无外乎「增删改查」\n\n\n\nDocument 接口\n属性\n\nanchors\nbody\ncharacterSet\nchildElementCount\nchildren\ndoctype\ndocumentElement\ndomain\nfullscreen\nhead\nhidden\nimages\nlinks\nlocation\nonxxxxxxxxx\norigin\nplugins\nreadyState\nreferrer\nscripts\nscrollingElement\nstyleSheets\ntitle\nvisibilityState\n\n方法：\n\n\nclose ()\n\n\ncreateDocumentFragment ()\n\n\ncreateElement ()\n\n\ncreateTextNode ()\n\n\nexecCommand ()\n\n\nexitFullscreen ()\n\n\ngetElementById ()\n\n\ngetElementsByClassName ()\n\n\ngetElementsByName ()\n\n\ngetElementsByTagName ()\n\n\ngetSelection ()\n\n\nhasFocus ()\n\n\nopen ()\n\n\nquerySelector ()\n\n\nquerySelectorAll ()\n\n\nregisterElement ()\n\n\nwrite ()\n\n\nwriteln ()\n\n\n\n\nElement 的接口\n\n\nDOM API 反人类\ni. 获取元素\n以前之后 document.getElementById, document.getElementsByTagName, document.getElementsByClassName太反人类，于是有了 jQuery 后来DOM API 终于抄袭 jQuery 提供了 document.querySelector 和 document.querySelectorAll 但是依然没有 jQuery 好用，因为「不一致」\nii. 获取下一个元素\n获取兄弟们\n\n\n","plink":"https://blog.liumulin.top/2021/03/20/DOM/"},{"title":"GitHub 搭建个人博客","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"updated":"2022-11-16T02:30:28.830Z","content":"GitHub 搭建个人博客\nGitHub+Hexo 搭建个人网站详细教程\n\n配置代理\ngit config --global http.proxy’socks5://127.0.0.1:10808’\ngit config --global https.proxy’socks5://127.0.0.1:10808’\n\n一个最简单的个人博客\n\n新建 GitHub 仓库\n开启 GitHub Pages 功能\n新建 index.html\n购买域名：namesilo.com【namesilo 优惠码】\n用 Hexo 生成复杂的页面\n\n（Ctrl + D 退出）\n删除本地秘钥：\nrm ~/.ssh/id_rsa\nrm ~/.ssh/known_hosts\n配置 Git\ngit config --global user.name GitHub 英文名\ngit config --global user.email GitHub 邮箱\ngit config --global push.default matching\ngit config --global core.quotepath false\ngit config --global core.editor “vim”\n配置 GitHub\n\n\n创建 GitHub 仓库 如：d:\\blog\n\n\n进入 blog 目录，逐行复制命令到 gitbash 运行\necho &quot;# blog&quot; &gt;&gt; README.md\ngit init\ngit add README.md\ngit commit -m &quot;first commit&quot;\ngit remote add origin https://github.com/iMugen/blog.git\ngit push -u origin master\n\n\n\n最后一句会失败：因为缺少 SSH Key\nGoogle：GitHub ssh key 复制命令 ssh-keygen -t rsa -b 4096 -C&quot;your_email@example.com&quot;接着输入cat ~/.ssh/id_rsa.pub 把打印的值添加到 GitHub 的 Personal settings/SSH and GPG keys 的新建中\n然后运行失败的 git push -u origin master\n\n\n新建 index.html，进入 Settings 的 GitHub Pages，将 Source 改为 master branch。保存后再次拉到此处把新出现的网址复制，点击顶部的项目，点击 Edit 输入网址保存。这样就可以点击网址访问首页了\n\n\nGit 命令总结\n\ngit init，初始化本地仓库.git\ngit status-sb，显示当前所有文件的状态\ngit add 文件路径，用来将变动加到暂存区\ngit commit-m“信息 &quot;，用来正式提交变动，提交至.git 仓库\n如果有新的变动，我们只需要依次执行 git add xxx 和 git commit-m’xxx’ 两个命令即可。别看本教程废话那么多，其实就这一句有用！先 add 再 commit，行了，你学会 git 了。\ngit log 查看变更历史\ntree … 查看某目录\n\n其他\n\ngit remote add origin gitegithub.com:xxxxxxx.git 将本地仓库与远程仓库关联\ngit remote set-url origin gitegithub.com:xxxxx.git 上一步手抖了，可以用这个命令来挽回\ngit branch 新建分支\ngit merge 合并分支、\ngit stash 通灵术\ngit stash pop 反转通灵术\ngit revert 后悔了\ngit reset 另一种后悔了\ngit diff 查看详细变化\n\n资源\n\n常用 Git 命令清单\n读懂 diff - 阮一峰\n搭建一个免费的，无限流量的 Blog----github Pages 和 Jeky 入门 Git 菜鸟教程\n廖雪峰的 Git 教程\n\n","plink":"https://blog.liumulin.top/2021/03/20/GitHub 搭建个人博客/"},{"title":"GitHub+Hexo 搭建个人网站","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"updated":"2022-11-16T02:30:28.831Z","content":"GitHub+Hexo 搭建个人网站\n什么是 Hexo？\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n[文档| Hexo]\n\n获得个人网站域名\n阿里云购买一个域名\nGitHub 创建个人仓库\n创建新的仓库，用户名.github.io 这个用户名使用你的GitHub帐号名称代替，比如我的仓库名为：liuilin.github.io\n安装 &amp; 配置 Git\nwsl 的 scoop 安装 Git\n廖雪峰 Git 教程\n12345git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot;git config --global push.default matchinggit config --global core.quotepath falsegit config --global core.editor &quot;vim&quot;\n\n\n在本地创建 GitHub 仓库\n\n\n进入 blog 目录，逐行复制命令到 gitbash 运行\n123456echo &quot;# blog&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin https://github.com/GitHub用户名/blog.gitgit push -u origin master\n\n\n如果上面最后一句出现失败：是因为缺少 SSH Key\nGoogle：GitHub ssh key 复制命令 ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;\n接着输入cat ~/.ssh/id_rsa.pub 把打印的值添加到 GitHub个人 的 Personal settings/SSH and GPG keys 的新建中（或者把 id_rsa.pub 的值复制到 GitHub 新建的 new SSH Key 中），然后运行失败的 git push -u origin master\n\n不用 hexo ，而是使用 GitHub Pages 的情况：\n新建 index.html ，进入 Settings 的 GitHub Pages ，将 Source 改为 master branch 。保存后再次拉到此处把新出现的网址复制，点击顶部的项目，点击Edit输入网址保存。这样就可以点击网址访问首页了\n\n\n\n检测GitHub公钥设置是否成功，命令行中输入 ssh git@github.com\n1234PS C:\\Users\\Daniel\\blog&gt; ssh git@github.comPTY allocation request failed on channel 0Hi liuilin! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.Connection to github.com closed.\n\n如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。\n\n\n\n安装 Node.js\nWindows 用 scoop 安装 node\n检测Node.js是否安装成功，在命令行中输入 node -v\n检测npm是否安装成功，在命令行中输入npm -v\n安装Hexo的环境搭建完成\n安装 Hexo\n创建一个文件夹随意命名，如 Blog ， 以后 Hexo 框架发布的网页都在这个文件夹中\n使用npm命令安装Hexo，输入：\n1npm install -g hexo-cli\n这个安装时间较长耐心等待\n安装完成后，初始化我们的博客，输入：\n1hexo init blog\nwsl 下查看 blog 第一层级：tree -a -L 1\n123456789101112131415.├── .deploy_git├── .git├── .gitignore├── READEME.md├── _config.landscape.yml├── _config.yml├── db.json├── node_modules├── package-lock.json├── package.json├── public├── scaffolds├── source└── themes\n在我们初始化的一个 blog 文件夹中，为了检测我们的网站雏形，分别按顺序输入以下三条命令：\n123hexo new &#39;博客名&#39;hexo ghexo s\n部署后访问 localhost:4000 查看本地\n常用命令\n1234567891011121314151617现在来介绍常用的Hexo 命令npm install hexo -g \t# 安装Hexonpm update hexo -g \t\t# 升级hexo init \t\t\t\t# 初始化博客命令简写hexo n(ew) &#39;新建文章标题&#39;    # 新建文章hexo g(enerate)\t\t\t   # 生成hexo s(erver) \t   \t\t   # 启动服务预览hexo d(eploy) \t   \t\t   # 部署hexo server \t\t\t \t# Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s \t\t\t \t# 静态模式hexo server -p 5000 \t \t# 更改端口hexo server -i x.x.x.x \t\t# 自定义 IPhexo clean \t\t\t\t\t# 清除缓存，若是网页正常情况下可以忽略这条命令刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作\n更换主题\n在 blog 目录中更换主题 next/inside （比较喜爱的两个主题），此目录下打开命令行输入：\n1$blog: git clone https://github.com/ikeq/hexo-theme-inside.git themes/inside\n将主题下载到 blog 目录的 themes 目录下，打开站点的 _config.yml 文件中的配置为 theme: inside（下载的主题名字）\n图床\n创建一个图床仓库 image-bed ，分支名要设 GitHub 能看到的分支\n使用 jsDelivr CDN 对 GitHub 图床进行加速，PicGo 配置自定义域名\n\n在目录 Setting / Developer Settings / Personal access tokens 下获取 GitHub Token ：\n点击 Generate new token\n输入 Note 及勾选 repo，生成后复制 token 进 PicGo 的设定 Token 中\n\n\nGitHub 仓库的容量有 1G 的上限，但对个人博客来说绰绰有余\n\n设置参数说明：\n\n设定仓库名：填入你上面创建的仓库名，格式为：用户名/仓库名；\n设定分支名：一般填写 master 即可；\n设定 Token：将上一步 GitHub 配置中得到的 Token 粘贴进去；\n指定存储路径：图片在 GitHub 仓库中的存储路径，例如：blog/img/\n设定自定义域名：此处直接设置 jsDelivr 加速的访问地址，例如：自定义域名设为 https://cdn.jsdelivr.net/gh/liuilin/image-bed@master 来进行 CDN 加速（https://cdn.jsdelivr.net/gh/ 不能省略，gh 为 GitHub 缩写，后面接 GitHub 名字 + 仓库 + @仓库branch）\n\ngh：固定写上，为 GitHub 缩写，表示来自 GitHub 的仓库\nliuilin/image-bed：仓库的具体位置\nmaster 仓库的分支\n\n\n\nPicGo 配置完成后在 Typora 设置中 PicGo 程序路径，然后将图片粘贴到 Typora 里的 markdown 文件中就会自动上传到 GitHub\n\n使用 jsDelivr 优势\n\n使用 jsDelivr 加速静态文件访问，能够优化博客体验。\n在 GitHub 存储图片，利于博主对于图片的掌控。\n使用 PicGo 的原因是因为能够方便地将上传图片到 GitHub，并直接获取 jsDelivr 的加速后的图片地址。\n\n推送\n推送新写的博客内容到 GitHub\n在 blog 目录下找到 _config.yml 文件，在最后加上如下配置：\n1234deploy:  type: git  repo: https://github.com/liuilin/liuilin.github.io.git  branch: main\nhexo d 进行博客部署，让 hexo 知道把博客 blog 部署在GitHub哪个位置\n最后安装 Git 部署插件，输入命令：npm install hexo-deployer-git --save，有了该插件则可以将 blog/public 的内容推送到 GitHub 上。\n这时，我们分别输入三条命令：\n123hexo cleanhexo ghexo d\n现在输入 用户名.github.io 就可以在浏览器上访问了\n绑定域名\n虽然在 Internet 上可以访问我们的网站，但我想使用自定义域名，这就需要绑定我们自己的域名。我阿里云购买了一个域名 liumulin.top\n添加域名解析\n\n主机记录值为前缀\n@ 代表访问时不用前缀，直接输入 liumulin.top\nwww 代表访问时输入 www.liumulin.top\nblog 代表访问时直接输入 blog.liumulin.top\n以上访问的全是自定义的记录值 用户名.github.io\n包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 http://xxxx.github.io 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.http://github.io 这里千万别弄错了。第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名\n在 用户名.github.io 这个仓库中更改 GitHub Pages 配置的 Custom domain\n\n完成域名配置后，点击save保存。进入 本地博客 文件夹，接着进入 blog/source 目录下，将想要访问的地址放入 CNAME 中（如：echo “bloag.liumulin.top” &gt;&gt; CNAME）。然后在博客文件夹下执行以下命令\n123hexo cleanhexo ghexo d\n这时候打开浏览器在地址栏输入你的 自定义域名 将会直接进入你自己搭建的网站\n个性化设置\n在博客站点配置文件 blog/_config.yml 修改基本的站点信息\n123456789# Site# 网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区title: Daniel&#x27;s Blogsubtitle: heydescription: 我的个人博客author: Daniel Liuavatart: language: zh-Hansyatimezone: Asia/Shanghai\n修改主题配置文件 blog/theme/ 下载的主题 /_config.yml\n123reward: wechatpay: /WeChatPay.png alipay: /Alipay.jpg\n博客打赏的微信、支付宝二维码图片，放在根目录 blog/source 文件夹下\n社交sns\n123456789sns:  # Built-in icons  # `email`, `feed`, `github`, `twitter`, `facebook`, `instagram`, `tumblr`, `dribbble`, `telegram`  # `youtube`, `hangouts`, `linkedin`, `pinterest`, `soundcloud`, `myspace`, `weibo`, `qq  zhihu: https://www.zhihu.com/people/xiao-shi-yilang-82-6  email: liu1142865396@gmail.com  github: https://github.com/liuilin  instagram: https://www.instagram.com/  facebook: https://www.facebook.com/\n自定义搜索 API\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051adapter:  # 搜索结果分页大小，缺省值 `10`  per_page: 10  # LOGO 图，可选  logo: //cdn.worldvectorlogo.com/logos/algolia.svg  # 请求对象：此配置项为构造完整的请求对象  request:    # 接口 URL    # url: https://&#123;APPLICATION_ID&#125;-dsn.algolia.net/1/indexes/&#123;INDEX&#125;/query    url: https://Z9I4Z08O59-dsn.algolia.net/1/indexes/blog/query        # GET 或 POST，不区分大小写，缺省值 `GET`    method: post    # 字符串差值 :query, :per_page, :current    # 请求参数，格式视 Content-Type 而定，支持的字符串插值有：    # 搜索的字符串 `:query`    # 分页大小 `:per_page`    # 当前页 `:current`    body: &#x27;&#123;&quot;query&quot;:&quot;:query&quot;,&quot;hitsPerPage&quot;:&quot;:per_page&quot;,&quot;page&quot;:&quot;:current&quot;&#125;&#x27;    headers:      # X-Algolia-API-Key: &#123;API_KEY&#125;      X-Algolia-API-Key: e259a4cda71e11ebd4de9203ae132994      X-Algolia-Application-Id: Z9I4Z08O59      Content-Type: application/json; charset=UTF-8  # 用于统一数据格式，例如有如下返回结果  # &#123;  #   &quot;hits&quot;: [  #     &#123;  #       &quot;title&quot;: &quot;Inside Theme Showcase&quot;,  #       &quot;date&quot;: &quot;2018-09-05T06:28:24.000Z&quot;,  #       &quot;_snippetResult&quot;: &#123;  #         &quot;title&quot;: &#123; &quot;value&quot;: &quot;&quot; &#125;,  #         &quot;content&quot;: &#123; &quot;value&quot;: &quot;&quot; &#125;  #       &#125;  #     &#125;  #   ],  #   &quot;nbHits&quot;: 10,  #   &quot;page&quot;: 0,  #   &quot;nbPages&quot;: 1,  #   &quot;processingTimeMS&quot;: 5  # &#125;  # 则设置     keys:    data: hits    current: page    total: nbPage    hits: nbHits    time: processingTimeMS\n将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。\nFAQ\n\n\nhexo d 推送不上去\n12345678910fatal: unable to access &#x27;https://gitclone.com/github.com/liuilin/liuilin.github.io.git/&#x27;: The requested URL returned error: 504FATAL &#123;  err: Error: Spawn failed      at ChildProcess.&lt;anonymous&gt; (C:\\Users\\Daniel\\blog\\node_modules\\hexo-util\\lib\\spawn.js:51:21)      at ChildProcess.emit (node:events:376:20)      at ChildProcess.cp.emit (C:\\Users\\Daniel\\blog\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)      at Process.ChildProcess._handle.onexit (node:internal/child_process:284:12) &#123;    code: 128  &#125;&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html\nGit config 配置了以下加速 GitHub 代码下载配置，导致全局走了这个地址，取消掉此配置（将 v2ray 开启全局代理，Git config 配置https.proxy=socks5://127.0.0.1:10808）即可解决\nurl.https://gitclone.com/github.com/.insteadof=https://github.com/\n\n还有一种方案，hexo clean 之后重新 hexo d 部署\n\n\n\nTypora 上传图片失败\n方案：配置Typora+PicGo+gitee过程中个别问题的解决\n\n\n","plink":"https://blog.liumulin.top/2021/03/20/GitHub+Hexo 搭建个人网站详细教程/"},{"title":"HTML","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"updated":"2022-11-16T02:30:28.831Z","content":"HTML\n\ndiv {盒子 $}*10\n\n\n\nGoogle：HTML spec（规范文档 specification）\n\n\n简历模板：https://scardwp.px-lab.com/\n\n\n验证写的 HTML 正确性：https://validator.w3.org/\n\n\nHTML（只规定页面上有什么）常见标签：a、form、input、button、h1、p、ul、ol、small、strong、div、span、kbd、video、audio、svg\n\n\n除了 div 和 span，其他标签都有默认样式（在 Chrome 控制台 style 灰色部分可看到，-webkit）\n\n要给 class（驼峰命名），因为 div 是没有意义的标签，不给 class 就不知道什么意思。不能只用 div 和 span，那样需要加很多 class\nul：un-order list\nli：list item\ndl：description list\ndt：description term\ndd：description definition\n\n\n\nMDN 上有所有标签的文档\n\n\n\n不知道的单词：iciba.com/ 导航 =&gt; navigation =&gt; Google：navigation mdn 找到  标签\n\n\n\n如何查看 MDN 文档（查看是否有此标签）\ne.g. strong mdn\nmain md：\n\n\n查看标签默认属性：如果 style 里面没看到则到 computed 里面搜索\n\n\nCSS 布局要么横向、要么纵向，这样划分 HTML 的块容易写 CSS（等有 Grid 的时候也就不用多加 div 了）\n\n\nnpm i -g http-server：http-server -c-1 不带缓存开启服务\n\n\niframe 标签：嵌套页面\n&lt;iframesrc=“https://www.baidu.com” name=“xxx”&gt;\n\n\na 标签：跳转页面（HTTP GET 请求）\n\nQQ\ni. //qq. com\nii. #xxx?name=qqqq./xxx. html\niii. javascript: alert (1); javascript:;\n\n（target 指跳转到哪）\n\n\n\nform 标签：跳转页面（HTTP POST 请求）\n\n\ninput /button\n\n\ntable\n\n\n\n标签属性 Google mdn\n完成 w3schools 的测试题\n\n","plink":"https://blog.liumulin.top/2021/03/20/HTML/"},{"title":"Linux 命令与 Vim","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"updated":"2022-11-16T02:30:28.832Z","content":"Linux 命令与 Vim\nLinux 命令\nLinux工具快速教程 — Linux Tools Quick Tutorial\n\nGitHub：服务器配置 https://gist.github.com/search?o=desc&amp;q=.bashrc&amp;s=stars\n\n常见的自带命令\n\n\n** 操作 **\n** 命令 **\n\n\n\n\n进入目录\ncd\n\n\n显示当前目录\npwd\n\n\n创建目录\nmkdir 目录名\n\n\n创建目录\nmkdir -p 目录路径\n\n\n我是谁\nwhoami\n\n\n–\n–\n\n\n查看路径\nls 路径\n\n\n查看路径\nls -a 路径\n\n\n查看路径\nls -l 路径\n\n\n查看路径\nls -al 路径\n\n\n–\n–\n\n\n创建文件 / 覆盖原有文件\necho “1” &gt; 文件路径\n\n\n强制创建文件\necho “1” &gt;! 文件路径\n\n\n追加文件内容\necho “1” &gt;&gt; 文件路径\n\n\n创建文件\ntouch 文件名\n\n\n改变文件更新时间\ntouch 文件名\n\n\n–\n–\n\n\n复制文件\ncp 源路径 目标路径\n\n\n复制目录\ncp -r 源路径 目标路径\n\n\n–\n–\n\n\n移动节点\nmv 源路径 目标路径\n\n\n–\n–\n\n\n删除文件\nrm 文件路径\n\n\n强制删除文件\nrm -f 文件路径\n\n\n删除目录\nrm -r 目录路径\n\n\n强制删除目录\nrm -rf 目录路径\n\n\n–\n–\n\n\n查看目录结构\ntree\n\n\n建立软链接\nln -s 真实文件 链接\n\n\n–\n–\n\n\n下载文件\ncurl -L https://www.baidu.com &gt; baidu.html\n\n\n拷贝网页\nwget -p -H -e robots=off https://www.baidu.com (Windows 不支持 wget)\n\n\n磁盘占用\ndf -kh\n\n\n当前目录大小\ndu -sh .\n\n\n各文件大小\ndu -h\n\n\n\nGoogle: Linux 查看文件内容\nLinux 命令：https://explainshell.com/\t只展示精选命令 https://github.com/tldr-pages/tldr\n\n快捷键\n\n\n↑ ↓ 上一命令 / 下一命令\n\n\n! 上一命令占位符\n\n\nTab 自动补全路径\n\n\nAlt+. 上一命令的最后一个参数\n\n\n&amp;&amp; 前面的执行成功了，再执行后面的\n\n\n|| 前面的执行失败了，就执行后面的\n\n\n; 前面执行完了，不管成功失败，就执行后面的\n\n\n&gt; 重定向\n\n\n| 管道\n\n\nVim\n如何学习 vim\n\n\n在命令行输入 vimtutor ，即可查看官方自带的中文教程\n\n\n简明 VIM 练级攻略\n\n\n一个 vim 游戏\n\n\n命令\n技巧：Vim 的纵向编辑模式：https://www.ibm.com/developerworks/cn/linux/l-cn-vimcolumn/index.html\n\n\nVim 分为一个 operation 和一个 motion\n\n\ni 写入模式、i 插入之前、a 插入之后、A 行尾插入、I 行首插入、o 下行插入、O 上行插入 x 删除光标后一个字符，u 是撤销 U、Ctrl+r\nd + ←→删除光标←→字符（d +3←）、dd 删除一行（其实是剪切，p 粘贴）\ny+ ←→复制光标←→字符 （y+3←）\ndb/dw/de/x\n剪切括号等内的内容（进入插入模式）：ci”ci’ci [ci (\n剪切括号等内的内容：dt”、di”、diw\n剪切括号等内的内容：yi”\n剪切到制定字符：c/d/y f% s\nc 删除并进入写入模式、w 光标向下移动一个词、cw 删除一个词并进入写入模式、b 光标到上一个词 、ciw 词中删除一个词并进入写入模式，yi\n\nci&quot; - change inside double quotes\nci) - change inside curved brackets\nci} - change inside curly brackets\n\nf：找当前行的词\n/ 搜索、n 下 N 上\n(n) p/P：粘贴 n 行\n\n\n移到行首：^\n\n\n移到行尾：$\n\n\n多行缩进：/10,100&gt;\n\n\nV 选区 v 反选：之后 y、p、d\n选中直至末尾：v$；并插入\n删除整页：VGd\nv 选区后，Alt+j 选择并替换\n\n\n【y i c d f 】\nesc 回到正常模式\n：w 保存\n：q 退出 vim\n：source $MYVIMRC 刷新 vim\njkhl 上下左右\n：split 上下分屏 、：vsplit 左右分屏 Q 退出\nconfig: ~/.vim/vimrc\nlet mapleader=&quot; &quot; &quot; 将leader键（\\键,类似于Windows键）换成空格（相当于空格键）\nsyntax on &quot; 开启语法高亮\nset number &quot; 显示行号\nset relativenumber &quot; 显示从当前行数的前后行数\nset cursorline &quot; 高亮显示当前行\nset wrap &quot; 自动换行\nset showcmd &quot; 显示指令\nset wildmenu &quot; vim 命令行命令补全\nset hlsearch &quot; 高亮显示搜索\nset incsearch &quot; 动态高亮搜索&quot;\nset smartcase &quot; 智能大小写搜索\nset ignorecase &quot; 忽略大小写\nexec “nohlsearch” &quot; 打开是运行指令 取消上回搜索内容的高亮&quot;noremap a b &quot; 将 a 替换为 b\n&quot;noremap A 5b &quot; 将 A 替换为 5b\n&quot;noremap = nzz &quot; 将 n 替换为 =zz &quot; 用 zz 将该行变成中心点\n&quot;noremap - Nzz &quot; 将 N 替换为 -zz\nnoremap  :nohlearch &quot; 将  替换为 :nohlearch 用于快捷取消搜索高亮\nmap s   &quot; 将 s 的指令设置为空\nmap S :w &quot; 将 S 的指令设置成 :w  “  代表回车\nmap Q :q &quot; 将 Q 的指令设置成 :q\nmap R :source $MYVIMRC &quot; 将 R 的指令设置成 重载vimrc配置\n&quot;:split  &quot; 上下分屏 :q 退出\n&quot;:vsplit &quot; 左右分屏\n&quot; &lt;Operation(操作)&gt; &lt;Motion(动作)&gt;\n&quot; d 剪切操作(剪切可看做删除), y 复制操作, p 粘贴操作， c 剪切后修改操作\n&quot; ← 左动作， → 右动作， 3← 3个左动作， b 选择光标开启到上一个词后的内容， i 指明光标在词中，当前词待操作， w 选择光标开始到下个词前的内容， iw 在当前词之间选择该， y3← 向右复制， f 查找动作\n\n\n插件\n插件管理工具：junegunn/vim-plug: Minimalist Vim Plugin Manager\nexample: add below to .vimrc\n1234call plug#begin(&#x27;~/.vim/plugged&#x27;)Plug &#x27;connorholyday/vim-snazzy&#x27;Plug &#x27;vim-airline/vim-airline&#x27;call plug#end()\n:PlugInstall\nGoogle：best vim/idea/vscode config github 找到\nvim plugin site:github.com\ngithub：\n\nvim-plug\nsnazzy\n\n\n批量插入\nVISUAL 批量选中模式下（gg - V - G），:‘&lt;,’&gt;normal Imy-wallpaper-，就会进入 normal 模式，批量在最前面加上 my-wallpaper-\n此时我突然不想加前缀 my-，先进入可视块 VISUAL BLOCK 模式（Ctrl + v - G），f - - - d，删除成功。\n突然我又看 wallpaper 单词不顺眼，想批量把首字母 w 改为大写，依次输入 Ctrl + v - G - g - U\n\ngu：切换为小写\ngU：切换为大写\ng~：大小写切换\nH    移到屏幕顶部,high\nM    移到屏幕中央,middle\nL    移到屏幕底部,low\n\n:e ~/.vimrc：vim normal 模式下编辑文件\nvim 删除当前屏内容命令\nHVLd\n正则给 markdown 文件批量添加  符号\n多行折叠为一行\nwget\nvim\ntouch\nvim command:\nIn command mode:\n1[range]j[lines]\nFor example: here you want to do the whole buffer:\n1%j\nIf you just wanted to do 10 lines from the current cursor position:\n1j10\nIf you don’t want to replace the new lines with spaces, use ! after j.\n12%j!j!10\nAnd for the uberfancy:\n15j20\nIt would go to line 5, and join the next 20 lines.\nVim Tricks\nAt least one Vim trick you might not know • Hillel Wayne\n&quot; Toggle Spelling Check with sc\n&quot; &lt;z=&gt; 智能修改单词\nmap sc :set spell!\nnoremap  beas\ninoremap  eas\nCtrl+o: back to pre edit place\nCtrl+i: back to last edit place\ngf: go to file\nCtrl+o: back to pre edit place\n:%TOhtml: vim convert file to html\nvar name=‘lin’\nvar name=‘lin’\nvar name=‘lin’\n\ninto vim block mode, 3j :‘&lt;,’&gt;norm cs’&quot;\ninto vim vusual mode, V2j :‘&lt;,’&gt;norm cs’&quot;\n\ngs: toggle code true/false\n:w !wl-copy: copy file enable\n\n\n对齐符号\n\nset mouse=a\nset encoding=utf-8\nset clipboard=unnamed\n:‘&lt;,’&gt;Tabularize /=\nr: 调出执行 python 代码\nsi | :term: split window and open new terminal\n\n录制宏，代码块格式化等号，可以用 map 更改为快捷键\nqaV}:‘&lt;,’&gt;Tabularize /=\nSimpleFold 插件：o\n?tagbar : shift+t\nvim-signature: 书签. ma: mark ‘a’ bookmark.  to next marked place\nsemshi: 高亮当前光标所在的所有单词\ncoc: 重构改变量名: rn\nFar.vim: 搜索代码 f\nFZF: Ctrl+p 跳转文件（文件搜索最强）\nNERDTree: tt 文件目录列表\nvim-table-mode: tm 开启 markdown 自动排版\nvim-startify: 进入最近编辑的文件\nvim-multiple-cursor: 快速选中多行编辑\nwildfire.vim: 类似于 vscode 的 Ctrl+w 选中单词\nthesaurus_query: 近义词插件\nStartify: 进入编辑器显示东西用的\nemmet: 快速写 HTML 插件\nBullets.vim: 文件中列表累加\n:help NERDTree: 查看插件文档\nranger:\nS: go to path\nShift+m: mkdir. create a directory\nShift+v: touch a file\ncw: rename, 可以用 vim 操作，A 在文件末尾修改\n[: folder switch\nv: select all file\ndU: check file/folder size\ndD: 删除文件夹\nw: task manager\ndd: cancel opration\nc: compress\nX: extract here\nct: convert to pdf\nydv: youtube download\nzh: show dotfiles\n\n\n","plink":"https://blog.liumulin.top/2021/03/20/Linux 命令与 Vim/"},{"title":"JS","date":"2021-03-19T08:41:29.000Z","date_formatted":{"ll":"2021年3月19日","L":"2021/03/19","MM-DD":"03-19"},"updated":"2022-11-16T02:30:28.832Z","content":"JS\njs 历史\n\n分类\n\n基本数据类型\n\nnumber\nstring\nboolean：a&amp;&amp;b，两个为真才为 true，a||b，两个为假才是 false\nsymbol (ES6 新增)\nundefined\nnull\n\n\n应用类型\n\nobject\n\n\n\n区别数据类型的 api\n\n\ntypeof: 不能判断 null 和 函数\n\n\ninstanceof\n\n\n使用范围：只能判断引用类型\n\n\n原理：通过原型链\n123456789101112131415161718192021222324252627282930313233343536373839404142434445     a instanceof b     // 那么会这样比较     //a.__proto__ === b.prototype ? 如果正确，返回 true     //a.__proto__.__proto__ === b.prototype ? 返回 true     // 直到 a.__proto__.__proto__ ...  === null 返回 false     ```- Object.prototype.toString.call ([]) =&gt; 返回&quot;[object String]&quot;### 按值传递与按引用传递的区别，进阶版```javascriptvar a = &#123;n:1&#125;var b = aa.x = a = &#123;n: 2&#125;console.log (b)console.log (a)```重点是`a.x = a = &#123;n: 2&#125;` 如何处理？1. 从左向右执行2. 执行 a.x = a，就是让变量 a 指代的对象添加一个 x key, 并且让 x value 指向变量 a3. 执行 a = &#123;n: 2&#125;### Falsy 值1. 02. NaN3. ‘ ’4. undfined5. null&gt; JS 惯例：如果不希望别人该你的东西，就把命名改为大写：Node.ELEMENT_NODE### JS 实践批量删除微博脚本```js&#x27;use strict&#x27;;var s = document.createElement(&#x27;script&#x27;);s.setAttribute(&#x27;src&#x27;, &#x27;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&#x27;)s.onload = function () &#123;    for (var i = 0; i &lt; 3; i++) &#123;        setTimeout(function () &#123;            $(&#x27;a[action-type=&quot;fl_menu&quot;]&#x27;)[0].click();            $(&#x27;a[title=&quot;删除此条微博&quot;]&#x27;)[0].click();            $(&#x27;a[action-type=&quot;ok&quot;]&#x27;)[0].click();        &#125;, 1000 * i)    &#125;&#125;document.head.appendChild(s);\n\n\n\n\n","plink":"https://blog.liumulin.top/2021/03/19/JS/"},{"title":"vim-config","date":"2021-03-19T08:41:29.000Z","date_formatted":{"ll":"2021年3月19日","L":"2021/03/19","MM-DD":"03-19"},"updated":"2022-11-16T02:30:28.835Z","content":"&quot;  __  __        __     _____ __  __ ____   ____\n&quot; |  /  |_   _  \\ \\   / /_ |  /  |  _ \\ / |\n&quot; | |/| | | | |  \\ \\ / / | || |/| | |) | |\n&quot; | |  | | || |   \\ V /  | || |  | |  _ &lt;| |_\n&quot; ||  ||_, |    _/  |||  ||| _\\|\n&quot;         |/\n&quot; Todos\n&quot; - vimwiki\n&quot; - pylint reports error when doing vim ~/Github/vim-calc/build-up/calc.py\n&quot;   instead of doing cd ~/Github/vim-calc/build-up and then do vim calc.py\n&quot; - hotkey to switch between light theme and dark theme (in progress, still\n&quot;   some bugs\n&quot; ===\n&quot; === Auto load for first time uses\n&quot; ===\nif empty(glob(‘~/.vim/autoload/plug.vim’))\nsilent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs\n\\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\nautocmd VimEnter * PlugInstall --sync | source $MYVIMRC\nendif\n&quot; ====================\n&quot; === Editor Setup ===\n&quot; ====================\n&quot; ===\n&quot; === System\n&quot; ===\nset nocompatible\nfiletype on\nfiletype indent on\nfiletype plugin on\nfiletype plugin indent on\nset mouse=a\nset encoding=utf-8\nset clipboard=unnamed\n&quot; Prevent incorrect backgroung rendering\nlet &amp;t_ut=‘’\n&quot; ===\n&quot; === Main code display\n&quot; ===\nset number\nset relativenumber\nset ruler\nset cursorline\nsyntax enable\nsyntax on\n&quot; ===\n&quot; === Editor behavior\n&quot; ===\n&quot; Better tab\nset expandtab\nset tabstop=2\nset shiftwidth=2\nset softtabstop=2\nset list\nset listchars=tab:▸\\ ,trail:▫\nset scrolloff=5 &quot; 页面上下多5行\n&quot; Prevent auto line split\nset wrap\nset tw=0\nset indentexpr=\n&quot; Better backspace\nset backspace=indent,eol,start\nset foldmethod=indent\nset foldlevel=99\n&quot; let &amp;t_si = “&lt;esc&gt;]50;cursorshape=1\\x7”\n&quot; let &amp;t_sr = “&lt;esc&gt;]50;cursorshape=2\\x7”\n&quot; let &amp;t_ei = “&lt;esc&gt;]50;cursorshape=0\\x7”\n&quot; ===\n&quot; === Window behaviors\n&quot; ===\nset splitright\nset splitbelow\n&quot; ===\n&quot; === Status/command bar\n&quot; ===\nset laststatus=2\nset autochdir\nset showcmd\nset formatoptions-=tc\n&quot; Show command autocomplete\nset wildignore=log/,node_modules/,target/,tmp/,*.rbc\nset wildmenu                                                 &quot; show a navigable menu for tab completion\nset wildmode=longest,list,full\n&quot; Searching options\nset hlsearch\nexec “nohlsearch”\nset incsearch\nset ignorecase\nset smartcase\n&quot; ===\n&quot; === Restore Cursor Position\n&quot; ===\nau BufReadPost * if line(“'”“) &gt; 1 &amp;&amp; line(”‘“”) &lt;= line(“$”) | exe &quot;normal! g’“” | endif\n&quot; ===\n&quot; === Basic Mappings\n&quot; ===\n&quot; Set  as \nlet mapleader=&quot; &quot;\n&quot; Column (:) mods\nmap ; :\nmap q; q:\nmap / :!\nmap r :r !\nmap sr :%s/\n&quot; Save &amp; quit\nmap Q :q\nmap S :w\n&quot; Open the vimrc file anytime\nmap rc :e ~/.vim/vimrc\n&quot; Undo operations\n&quot; noremap l u\n&quot; Undo in Insert mode\ninoremap  \n&quot; Insert Key\n&quot; noremap k i\n&quot; noremap K I\n&quot; Copy to system clipboard\nvnoremap Y :w !xclip -i -sel c\n&quot; Search\nmap  :nohlsearch\nnoremap = nzz\nnoremap - Nzz\n&quot; Duplicate words\nmap fd /(&lt;\\w+&gt;)_s*\\1\n&quot; Others\nmap o ou\n&quot; ===\n&quot; === Cursor Movement\n&quot; ===\n&quot;\n&quot; New cursor movement (the default arrow keys are used for resizing windows)\n&quot;     ^\n&quot;     u\n&quot; &lt; n   i &gt;\n&quot;     e\n&quot;     v\n&quot; noremap u k\n&quot; noremap n h\n&quot; noremap e j\n&quot; noremap i l\n&quot; U/E keys for 5 times u/e (faster navigation)\nnoremap U 5k\nnoremap E 5j\n&quot; N key: go to the start of the line\n&quot; noremap N 0\n&quot; I key: go to the end of the line\n&quot; noremap I $\n&quot; Faster in-line navigation\nnoremap W 5w\nnoremap B 5b\n&quot; set h (same as n, cursor left) to ‘end of word’\n&quot; noremap h e\n&quot; Ctrl + U or E will move up/down the view port without moving the cursor\nnoremap  5\nnoremap  5\ninoremap  5a\ninoremap  5a\n&quot; ===\n&quot; === Window management\n&quot; ===\n&quot; Use  + new arrow keys for moving the cursor around windows\nmap w w\nmap u k\nmap e j\nmap n h\nmap i l\n&quot;map r r\n&quot; Disabling the default s key\nnoremap s \n&quot; split the screens to up (horizontal), down (horizontal), left (vertical), right (vertical)\nmap su :set nosplitbelow:split:set splitbelow\nmap se :set splitbelow:split\nmap sn :set nosplitright:vsplit:set splitright\nmap si :set splitright:vsplit\n&quot; Resize splits with arrow keys\nmap  :res +5\nmap  :res -5\nmap  :vertical resize-5\nmap  :vertical resize+5\n&quot; Place the two screens up and down\nnoremap sh tK\n&quot; Place the two screens side by side\nnoremap sv tH\n&quot; Rotate screens\nnoremap srh bK\nnoremap srv bH\n&quot; ===\n&quot; === Tab management\n&quot; ===\n&quot; Create a new tab with tu\nmap tu :tabe\n&quot; Move around tabs with tn and ti\nmap tn :-tabnext\nmap ti :+tabnext\n&quot; Move the tabs with tmn and tmi\nmap tmn :-tabmove\nmap tmi :+tabmove\n&quot; ===\n&quot; === Other useful stuff\n&quot; ===\n&quot; Press space twice to jump to the next ‘&lt;++&gt;’ and edit it\nmap  /&lt;++&gt;:nohlsearchc4i\n&quot; Toggle Spelling Check with sc\n&quot; &lt;z=&gt; 智能修改单词\nmap sc :set spell!\nnoremap  beas\ninoremap  eas\n&quot; Press to change case (instead of ~) map ~\nimap  zza\nnmap  zz\n&quot; Auto change directory to current dir\nautocmd BufEnter * silent! lcd %:p:h\n&quot; Call figlet\nmap tx :r !figlet\n&quot; Compile function\nmap r :call CompileRunGcc()\nfunc! CompileRunGcc()\nexec “w”\nif &amp;filetype == ‘c’\nexec “!g++ % -o %&lt;”\nexec “!time ./%&lt;”\nelseif &amp;filetype == ‘cpp’\nexec “!g++ % -o %&lt;”\nexec “!time ./%&lt;”\nelseif &amp;filetype == ‘java’\nexec “!javac %”\nexec “!time java %&lt;”\nelseif &amp;filetype == ‘sh’\n:!time bash %\nelseif &amp;filetype == ‘python’\nsilent! exec “!clear”\nexec “!time python3 %”\nelseif &amp;filetype == ‘html’\nexec “!firefox % &amp;”\nelseif &amp;filetype == ‘markdown’\nexec “MarkdownPreview”\nelseif &amp;filetype == ‘vimwiki’\nexec “MarkdownPreview”\nendif\nendfunc\nmap R :call CompileBuildrrr()\nfunc! CompileBuildrrr()\nexec “w”\nif &amp;filetype == ‘vim’\nexec “source $MYVIMRC”\nelseif &amp;filetype == ‘markdown’\nexec “echo”\nendif\nendfunc\n&quot; ===\n&quot; === Install Plugins with Vim-Plug\n&quot; ===\ncall plug#begin(‘~/.vim/plugged’)\n&quot; Pretty Dress\nPlug ‘vim-airline/vim-airline’\nPlug ‘vim-airline/vim-airline-themes’\nPlug ‘connorholyday/vim-snazzy’\nPlug ‘NLKNguyen/papercolor-theme’\nPlug ‘ayu-theme/ayu-vim’\nPlug ‘bling/vim-bufferline’\n&quot; File navigation\nPlug ‘scrooloose/nerdtree’, { ‘on’: ‘NERDTreeToggle’ }\nPlug ‘Xuyuanp/nerdtree-git-plugin’\nPlug ‘ctrlpvim/ctrlp.vim’, { ‘on’: ‘CtrlP’ }\n&quot; Taglist\nPlug ‘majutsushi/tagbar’, { ‘on’: ‘TagbarOpenAutoClose’ }\n&quot; Error checking\nPlug ‘w0rp/ale’\n&quot; Auto Complete\n&quot; Plug ‘Valloric/YouCompleteMe’\nPlug ‘neoclide/coc.nvim’, {‘branch’: ‘release’}\n&quot; Plug ‘davidhalter/jedi-vim’\n&quot; Undo Tree\nPlug ‘mbbill/undotree/’\n&quot; Snippits\n&quot; Plug ‘SirVer/ultisnips’  , { ‘for’: [‘vim-plug’, ‘python’] }\n&quot; Plug ‘honza/vim-snippets’, { ‘for’: [‘vim-plug’, ‘python’] }\n&quot; Other visual enhancement\nPlug ‘nathanaelkane/vim-indent-guides’\nPlug ‘itchyny/vim-cursorword’\nPlug ‘tmhedberg/SimpylFold’\n&quot; Git\nPlug ‘rhysd/conflict-marker.vim’\nPlug ‘tpope/vim-fugitive’\nPlug ‘mhinz/vim-signify’\nPlug ‘gisphm/vim-gitignore’, { ‘for’: [‘gitignore’, ‘vim-plug’] }\n&quot; HTML, CSS, JavaScript, PHP, JSON, etc.\nPlug ‘elzr/vim-json’\nPlug ‘hail2u/vim-css3-syntax’\nPlug ‘spf13/PIV’, { ‘for’ :[‘php’, ‘vim-plug’] }\nPlug ‘gko/vim-coloresque’, { ‘for’: [‘vim-plug’, ‘php’, ‘html’, ‘javascript’, ‘css’, ‘less’] }\nPlug ‘pangloss/vim-javascript’, { ‘for’ :[‘javascript’, ‘vim-plug’] }\nPlug ‘mattn/emmet-vim’\n&quot; Python\nPlug ‘vim-scripts/indentpython.vim’\n&quot; Plug ‘vim-python/python-syntax’, { ‘for’ :[‘python’, ‘vim-plug’] }\n&quot; Markdown\nPlug ‘iamcco/markdown-preview.nvim’, { ‘do’: { -&gt; mkdp#util#install_sync() }, ‘for’ :[‘markdown’, ‘vim-plug’] }\nPlug ‘dhruvasagar/vim-table-mode’, { ‘on’: ‘TableModeToggle’ }\nPlug ‘vimwiki/vimwiki’\n&quot; For general writing\nPlug ‘reedes/vim-wordy’\nPlug ‘ron89/thesaurus_query.vim’\n&quot; Bookmarks\nPlug ‘kshenoy/vim-signature’\n&quot; Other useful utilities\nPlug ‘jiangmiao/auto-pairs’\nPlug ‘terryma/vim-multiple-cursors’\nPlug ‘junegunn/goyo.vim’ &quot; distraction free writing mode\nPlug ‘ntpeters/vim-better-whitespace’, { ‘on’: [‘EnableWhitespace’, ‘ToggleWhitespace’] } &quot;displays trailing whitespace (after :EnableWhitespace, vim slows down)\nPlug ‘tpope/vim-surround’ &quot; type ysks’ to wrap the word with ‘’ or type cs’to change 'word' toword`\nPlug ‘godlygeek/tabular’ &quot; type ;Tabularize /= to align the =\nPlug ‘gcmt/wildfire.vim’ &quot; in Visual mode, type i’ to select all text in ‘’, or type i) i] i} ip\nPlug ‘scrooloose/nerdcommenter’ &quot; in cc to comment a line\n&quot; Dependencies\nPlug ‘MarcWeber/vim-addon-mw-utils’\nPlug ‘kana/vim-textobj-user’\nPlug ‘fadein/vim-FIGlet’\ncall plug#end()\n&quot; ===\n&quot; === Create a _machine_specific.vim file to adjust machine specific stuff, like python interpreter location\n&quot; ===\nlet has_machine_specific_file = 1\nif empty(glob(‘~/.vim/_machine_specific.vim’))\nlet has_machine_specific_file = 0\nexec “!cp ~/.vim/default_configs/_machine_specific_default.vim ~/.vim/_machine_specific.vim”\nendif\nsource ~/.vim/_machine_specific.vim\n&quot; ===\n&quot; === Dress up my vim\n&quot; ===\nmap c1 :set background=dark:colorscheme snazzy:AirlineTheme dracula\nmap c2 :set background=light:colorscheme ayu:AirlineTheme ayu_light\nset termguicolors     &quot; enable true colors support\nlet ayucolor=“light”  &quot; for light version of theme\n&quot; let ayucolor=“mirage” &quot; for mirage version of theme\n&quot; let ayucolor=“dark”   &quot; for dark version of theme\ncolorscheme snazzy\nlet g:SnazzyTransparent = 1\nset background=dark\nlet g:airline_theme=‘dracula’\nlet g:lightline = {\n\\     ‘active’: {\n\\         ‘left’: [[‘mode’, ‘paste’ ], [‘readonly’, ‘filename’, ‘modified’]],\n\\         ‘right’: [[‘lineinfo’], [‘percent’], [‘fileformat’, ‘fileencoding’]]\n\\     }\n\\ }\n&quot; set statusline+=%#warningmsg#\n&quot; set statusline+=%{SyntasticStatuslineFlag()}\n&quot; set statusline+=%*\n&quot; ===\n&quot; === NERDTree\n&quot; ===\nmap tt :NERDTreeToggle\nlet NERDTreeMapOpenExpl = “”\nlet NERDTreeMapUpdir = “”\nlet NERDTreeMapUpdirKeepOpen = “l”\nlet NERDTreeMapOpenSplit = “”\nlet NERDTreeOpenVSplit = “”\nlet NERDTreeMapActivateNode = “i”\nlet NERDTreeMapOpenInTab = “o”\nlet NERDTreeMapPreview = “”\nlet NERDTreeMapCloseDir = “n”\nlet NERDTreeMapChangeRoot = “y”\n&quot; ===\n&quot; === You Complete ME\n&quot; ===\nnnoremap gd :YcmCompleter GoToDefinitionElseDeclaration\nnnoremap g/ :YcmCompleter GetDoc\nnnoremap gt :YcmCompleter GetType\nnnoremap gr :YcmCompleter GoToReferences\nlet g:ycm_autoclose_preview_window_after_completion=0\nlet g:ycm_autoclose_preview_window_after_insertion=1\nlet g:ycm_use_clangd = 0\nlet g:ycm_python_binary_path = g:ycm_python_interpreter_path\n&quot;let g:ycm_python_interpreter_path = system(‘which python3’)\n&quot;let g:ycm_python_binary_path = system(‘which python3’)\n&quot;let g:ycm_key_list_select_completion   = [‘’, ‘’, ‘’]\n&quot;let g:ycm_key_list_previous_completion = [‘’, ‘’, ‘’]\n&quot; ===\n&quot; === vim-indent-guide\n&quot; ===\nlet g:indent_guides_guide_size = 1\nlet g:indent_guides_start_level = 2\nlet g:indent_guides_enable_on_vim_startup = 1\nlet g:indent_guides_color_change_percent = 1\nsilent! unmap ig\nautocmd WinEnter * silent! unmap ig\n&quot; ===\n&quot; === ale\n&quot; ===\nlet b:ale_linters = [] &quot;[‘pylint’]\n&quot; let b:ale_fixers = [‘autopep8’, ‘yapf’]\nlet g:ale_python_pylint_options = “–extension-pkg-whitelist=pygame”\n&quot; ===\n&quot; === MarkdownPreview\n&quot; ===\nlet g:mkdp_auto_start = 0\nlet g:mkdp_auto_close = 1\nlet g:mkdp_refresh_slow = 0\nlet g:mkdp_command_for_global = 0\nlet g:mkdp_open_to_the_world = 0\nlet g:mkdp_open_ip = ‘’\nlet g:mkdp_browser = ‘chromium’\nlet g:mkdp_echo_preview_url = 0\nlet g:mkdp_browserfunc = ‘’\nlet g:mkdp_preview_options = {\n\\ ‘mkit’: {},\n\\ ‘katex’: {},\n\\ ‘uml’: {},\n\\ ‘maid’: {},\n\\ ‘disable_sync_scroll’: 0,\n\\ ‘sync_scroll_type’: ‘middle’,\n\\ ‘hide_yaml_meta’: 1\n\\ }\nlet g:mkdp_markdown_css = ‘’\nlet g:mkdp_highlight_css = ‘’\nlet g:mkdp_port = ‘’\nlet g:mkdp_page_title = ‘「${name}」’\n&quot; ===\n&quot; === Python-syntax\n&quot; ===\nlet g:python_highlight_all = 1\n&quot; let g:python_slow_sync = 0\n&quot; ===\n&quot; === Taglist\n&quot; ===\nmap  T :TagbarOpenAutoClose\n&quot; ===\n&quot; === vim-table-mode\n&quot; ===\nmap tm :TableModeToggle\n&quot; ===\n&quot; === CtrlP\n&quot; ===\nmap  :CtrlP\n&quot; ===\n&quot; === vim-better-whitespace\n&quot; ===\nlet g:better_whitespace_enabled=0\n&quot; ===\n&quot; === Goyo\n&quot; ===\nmap gy :Goyo\n&quot; ===\n&quot; === CtrlP\n&quot; ===\nlet g:ctrlp_prompt_mappings = {\n\\ ‘PrtSelectMove(“j”)’:   [‘’, ‘’],\n\\ ‘PrtSelectMove(“k”)’:   [‘’, ‘’],\n\\ }\n&quot; ===\n&quot; === vim-signiture\n&quot; ===\nlet g:SignatureMap = {\n\\ ‘Leader’             :  “m”,\n\\ ‘PlaceNextMark’      :  “m,”,\n\\ ‘ToggleMarkAtLine’   :  “m.”,\n\\ ‘PurgeMarksAtLine’   :  “dm-”,\n\\ ‘DeleteMark’         :  “dm”,\n\\ ‘PurgeMarks’         :  “dm/”,\n\\ ‘PurgeMarkers’       :  “dm?”,\n\\ ‘GotoNextLineAlpha’  :  “m”,\n\\ ‘GotoPrevLineAlpha’  :  “”,\n\\ ‘GotoNextSpotAlpha’  :  “m”,\n\\ ‘GotoPrevSpotAlpha’  :  “”,\n\\ ‘GotoNextLineByPos’  :  “”,\n\\ ‘GotoPrevLineByPos’  :  “”,\n\\ ‘GotoNextSpotByPos’  :  “mn”,\n\\ ‘GotoPrevSpotByPos’  :  “mp”,\n\\ ‘GotoNextMarker’     :  “”,\n\\ ‘GotoPrevMarker’     :  “”,\n\\ ‘GotoNextMarkerAny’  :  “”,\n\\ ‘GotoPrevMarkerAny’  :  “”,\n\\ ‘ListLocalMarks’     :  “m/”,\n\\ ‘ListLocalMarkers’   :  “m?”\n\\ }\n&quot; ===\n&quot; === Undotree\n&quot; ===\nlet g:undotree_DiffAutoOpen = 0\nmap L :UndotreeToggle\n&quot; ===\n&quot; === UltiSnip\n&quot; ===\nautocmd WinEnter * silent! iunmap \nautocmd WinEnter * silent! unmap \nautocmd WinEnter * silent! vunmap \nlet g:UltiSnipsExpandTrigger           = ‘’\nlet g:UltiSnipsJumpForwardTrigger      = ‘’\n&quot;let g:UltiSnipsJumpBackwardTrigger     = ‘’\n&quot; ==\n&quot; == NERDTree-git\n&quot; ==\nlet g:NERDTreeIndicatorMapCustom = {\n\\ “Modified”  : “✹”,\n\\ “Staged”    : “✚”,\n\\ “Untracked” : “✭”,\n\\ “Renamed”   : “➜”,\n\\ “Unmerged”  : “═”,\n\\ “Deleted”   : “✖”,\n\\ “Dirty”     : “✗”,\n\\ “Clean”     : “✔︎”,\n\\ “Unknown”   : “?”\n\\ }\n&quot; Testring my own plugin\nif !empty(glob(‘~/Github/vim-calc/vim-calc.vim’))\nsource ~/Github/vim-calc/vim-calc.vim\nendif\n&quot; map a :call Calc()\n&quot; ==\n&quot; == vim-multiple-cursor\n&quot; ==\nlet g:multi_cursor_use_default_mapping=0\nlet g:multi_cursor_start_word_key      = ‘’\nlet g:multi_cursor_select_all_word_key = ‘’\nlet g:multi_cursor_start_key           = ‘g’\nlet g:multi_cursor_select_all_key      = ‘g’\nlet g:multi_cursor_next_key            = ‘’\nlet g:multi_cursor_prev_key            = ‘’\nlet g:multi_cursor_skip_key            = ‘’\nlet g:multi_cursor_quit_key            = ‘’\nlet g:vimwiki_list = [{\n\\ ‘automatic_nested_syntaxes’:1,\n\\ ‘path_html’: ‘~/wiki_html’,\n\\ ‘path’: ‘~/wiki’,\n\\ ‘template_path’: ‘~/.vim/vimwiki/template/’,\n\\ ‘syntax’: ‘markdown’,\n\\ ‘ext’:‘.md’,\n\\ ‘template_default’:‘markdown’,\n\\ ‘custom_wiki2html’: ‘~/.vim/vimwiki/wiki2html.sh’,\n\\ ‘template_ext’:‘.html’\n}]\nau BufRead,BufNewFile *.md set filetype=vimwiki\nlet g:taskwiki_sort_orders={“C”: “pri-”}\nlet g:taskwiki_syntax = ‘markdown’\nlet g:taskwiki_markdown_syntax=‘markdown’\nlet g:taskwiki_markup_syntax=‘markdown’\nsource ~/.vim/snippits.vim\n&quot; === Experimenting coc.nvim features\nset timeoutlen=100\nset cmdheight=2\ninoremap  :set cmdheight=2a\ninoremap  :set cmdheight=10a\nnnoremap  :set cmdheight=2\nnnoremap  :set cmdheight=10\nset updatetime=1000\nset shortmess+=c\nset signcolumn=yes\ninoremap  \n\\ pumvisible() ? “&lt;C-n&gt;” :\n\\ check_back_space() ? “&lt;TAB&gt;” :\n\\ coc#refresh()\ninoremap  pumvisible() ? “&lt;C-p&gt;” : “&lt;C-h&gt;”\nfunction! s:check_back_space() abort\nlet col = col(‘.’) - 1\nreturn !col || getline(‘.’)[col - 1]  =~# ‘\\s’\nendfunction\n&quot; Use  to confirm completion, &lt;C-g&gt;u means break undo chain at current position.\n&quot; Coc only does snippet and additional edit on confirm.\ninoremap   pumvisible() ? “&lt;C-y&gt;” : “&lt;C-g&gt;u&lt;CR&gt;”\n&quot; Use K to show documentation in preview window\nnnoremap ? :call show_documentation()\nfunction! s:show_documentation()\nif (index([‘vim’,‘help’], &amp;filetype) &gt;= 0)\nexecute ‘h ‘.expand(’’)\nelse\ncall CocAction(‘doHover’)\nendif\nendfunction\n&quot; Highlight symbol under cursor on CursorHold\nautocmd CursorHold * silent call CocActionAsync(‘highlight’)\n&quot;\n&quot; Open the _machine_specific.vim file if it has just been created\nif has_machine_specific_file == 0\nexec “e ~/.vim/_machine_specific.vim”\nendif\n","plink":"https://blog.liumulin.top/2021/03/19/vim-config/"},{"title":"本地 Docker 搭建 Nginx 反向代理 Nacos 集群","date":"2021-03-19T08:41:29.000Z","date_formatted":{"ll":"2021年3月19日","L":"2021/03/19","MM-DD":"03-19"},"updated":"2022-11-16T02:30:28.836Z","content":"本地 Docker 搭建 Nginx 反向代理 Nacos 集群\n\nNginx 从入门到实践，万字详解！：https://mp.weixin.qq.com/s/hafErlto-1N6ypYfOVIGBQ\n\n搭建 Nacos 集群\n\n官网地址：https://nacos.io/zh-cn/docs/quick-start-docker.html\n\n\n\nClone 项目\n12git clone https://github.com/nacos-group/nacos-docker.gitcd nacos-docker\n\n\n查看目录结构\n\ntree .\n\n1234567891011121314151617181920212223242526272829303132.├── README.md├── README_ZH.md├── build\t\t\t\t\t\t\t\t # nacos 镜像制做的源码 │   ├── Dockerfile│   ├── bin│   │   └── docker-startup.sh│   ├── conf│   │   └── application.properties│   └── init.d│       └── custom.properties├── changlog├── env\t\t\t\t\t\t\t\t\t # docker compose 环境变量 │   ├── mysql.env│   ├── nacos-embedded.env│   ├── nacos-hostname.env│   ├── nacos-ip.env│   └── nacos-standlone-mysql.env└── example\t\t\t\t\t\t\t\t # docker compose 编排文件    ├── cluster-embedded.yaml    ├── cluster-hostname.yaml    ├── cluster-ip.yaml    ├── init.d    │   └── custom.properties    ├── prometheus    │   ├── prometheus-cluster.yaml    │   └── prometheus-standalone.yaml\t\t    ├── standalone-derby.yaml    ├── standalone-mysql-5.7.yaml    └── standalone-mysql-8.yaml```- 单机模式 Derby```docker-compose -f example/standalone-derby.yaml up\n\n\n单机模式 MySQL\n如果希望使用 MySQL5.7\ndocker-compose -f example/standalone-mysql-5.7.yaml up\n如果希望使用 MySQL8\ndocker-compose -f example/standalone-mysql-8.yaml up\n\n\n集群模式\n1docker-compose -f example/cluster-hostname.yaml up\n\n\n\n若启动后连接不上 mysql ，需要将配置自动生成的 volumes 卷轴文件夹删除（volumes: - ./mysql:/var/lib/mysql）\n\n启动：\n1$: docker run --name my-nginx -p 8888:80 -v &quot;$PWD/html&quot;:/user/share/nginx/html  -v &quot;$PWD/conf&quot;:/etc/nginx -d nginx\n\nPWD：当前目录\n\n自定义配置 nginx.cong 中的 server_name www.linlin.com 配置到 hosts 中 120.0.0.1 www.linlin.com\n访问浏览器：www.linlin.com:8888/nacos\n\n配置好 Nginx 反向代理后，若出现无法访问，列出以下几种情况：\n\n404 检查负载均衡到对应的端口没，我的情况是从 git 拉下来的 Nacos 配置代码里端口映射的有了 “9555:9555” ，但 ngnix.conf 里的 upstream 中没有配置该端口，所以负载均衡到 9555 端口出现 404\n在配置 hosts 之前提前访问了 www.linlin.com ，此时未走 127.0.0.1 页面出现 462，再次访问时会走浏览器缓存。反复都会页面 462，所以需要重新配置 server_name 或者强制清除缓存\n\n\n","plink":"https://blog.liumulin.top/2021/03/19/本地 Docker 搭建 Nginx 反向代理 Nacos 集群/"},{"title":"算法与数据结构","date":"2021-03-19T08:41:29.000Z","date_formatted":{"ll":"2021年3月19日","L":"2021/03/19","MM-DD":"03-19"},"updated":"2022-11-16T02:30:28.837Z","content":"算法与数据结构\n算法\n入门：算法初级\n\n\n排序算法列表\nhttps://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#排序算法列表\n\n\n冒泡排序 http://bubkoo.com/2014/01/12/sort-algorithm/bubble-sort/\n\n\n插入排序 http://bubkoo.com/2014/01/14/sort-algorithm/insertion-sort/\n\n\n计数排序（桶排序） http://bubkoo.com/2014/01/15/sort-algorithm/bucket-sort/\n\n\n其他排序：http://bubkoo.com/tags/algorithm/\n\n\n伪代码与流程图\n结构化编程\nhttps://zh.wikipedia.org/zh-hans/%E7%BB%93%E6%9E%84%E5%8C%96%E7%BC%96%E7%A8%8B\n\n\n一行一行执行\n\n\n有条件控制语句 if…else…\n\n\n有循环控制语句 while (exp) do…\n\n\n伪代码的好处\n\n\n不用纠结于语法的细节，因为语法是你自己定的\n\n\n可以体会语言设计者的想法，因为语法是你自己定\n\n\n什么是算法\nhttps://zh.wikipedia.org/zh-hans/%E7%AE%97%E6%B3%95\n以下是高德纳在他的著作《计算机程序设计艺术》里对算法的特征归纳：\n\n\n输入：一个算法必须有零个或以上输入量。\n\n\n输出：一个算法应有一个或以上输出量，输出量是算法计算的结果。\n\n\n明确性：算法的描述必须无歧义，以保证算法的实际执行结果是精确地匹配要求或期望，通常要求实际运行结果是确定的。\n\n\n有限性：依据图灵的定义，一个算法是能够被任何图灵完备系统模拟的一串运算，而图灵机只有有限个状态、有限个输入符号和有限个转移函数（指令）。而一些定义更规定算法必须在有限个步骤内完成任务。\n\n\n有效性：又称可行性。能够实现，算法中描述的操作都是可以通过已经实现的基本运算执行有限次来实现。\n\n\n排序算法\n\n\n体育委员两两摸头法（冒泡排序）\n\n\n体育老师一指禅法（选择排序）\n\n\n起扑克牌法（插入排序）\n\n\n强迫症收扑克牌法（基数排序）\n\n\n快排\n\n\n归并排序\n\n\n堆排序\n\n\n\n排序可视化：https://visualgo.net/bn/sorting\n\n数据结构\n什么是数据结构\n一般来说是这样的：\n\n\n我们要解决一个跟数据相关的问题\n\n\n分析这个问题，想出对应的数据结构\n\n\n分析数据结构，想出算法\n\n\n\n数据结构和算法是互相依存、不可分开的，你学习完排序算法，就能了解常见的数据结构\n\n大分类\n\n\n分治法：把一个问题分区成互相独立的多个部分分别求解的思路。这种求解思路带来的好处之一是便于进行并行计算。\n\n\n动态规划法：当问题的整体最优解就是由局部最优解组成的时候，经常采用的一种方法。\n\n\n贪婪算法：常见的近似求解思路。当问题的整体最优解不是（或无法证明是）由局部最优解组成，且对解的最优性没有要求的时候，可以采用的一种方法。\n\n\n线性规划法：见词条。\n\n\n简并法：把一个问题通过逻辑或数学推理，简化成与之等价或者近似的、相对简单的模型，进而求解的方法。\n\n\n小分类\n\n\n哈希（Hash）\n\n计数排序中的桶（复杂度 O(n+max)，比快排还快）\n桶排序 与计数排序的区别\n基数排序 与计数排序的区别\n\n\n计数排序：统计班上年龄是 0-100 岁之间的人。n 是第一遍遍历的人数，max 是最大的年龄\n桶排序就是比计数排序少桶\n\n\n\n队列（Queue）\n\n\n先进先出\n\n\n可以用数组实现\n\n\n\n举例：排队\n\n\n\n栈（Stack）\n\n\n先进后出\n\n\n可以用数组实现\n\n\n\n举例：盗梦空间\n\n\n\n链表（Linked List）\n\n\n数组无法直接删除中间的一项，链表可以\n\n\n用哈希（JS 里面用对象表示哈希）实现链表\n\n\nhead、node 概念\n\n\n\n删除头尾用数组，删除中间用链表。JS 中数组本质是 hash，也是对象\n\n\n\n树（tree）\n\n\n举例：层级结构、DOM\n\n\n概念：层数、深度、节点个数\n\n\n二叉树\n\n\n满二叉树\n\n\n完全二叉树\n\n\n完全二叉树和满二叉树可以用数组实现\n\n\n其他树可以用哈希（对象）实现\n\n\n操作：增删改查\n\n\n堆排序用到了 tree\n\n\n其他：[B 树](https://zh.wikipedia.org/wiki/B 树)、[红黑树](https://zh.wikipedia.org/wiki/ 红黑树)、[AVL 树](https://zh.wikipedia.org/wiki/AVL 树)\n\n\n\n堆排序可视化：https://www.cs.usfca.edu/~galles/visualization/HeapSort.html\n堆排序 JS 代码完整讲解（看到最后）：http://bubkoo.com/2014/01/14/sort-algorithm/heap-sort/\n\n\n\n","plink":"https://blog.liumulin.top/2021/03/19/算法与数据结构/"},{"title":"简历","date":"2021-03-18T08:41:29.000Z","date_formatted":{"ll":"2021年3月18日","L":"2021/03/18","MM-DD":"03-18"},"updated":"2022-11-16T02:30:28.836Z","content":"简历\n外观\n一般大家都会简历的外观很重视，我这里给大家介绍几个网站\n\n在 dribbble.com 搜索 cv 或者 resume\n在五百丁直接花钱购买 Word 模板\n\nGoogle：frontend resume template\n这个简历的优点：http://rscardwp.px-lab.com/\n\n是在线版，方便我们查看它的代码\n有动效，赏心悦目\n界面很丰富，我们可以择其善者而从之\n\n为了方便后期我们使用 逼近法 实现页面，请前往 https://www.getpaint.net/ 下载 paint.net 图片编辑软件，这个软件比 Photoshop 小多了，如果你有 Photoshop 就不用下载了。外观确定之后，我们就要介绍一个我们学习的指导思想，那就是\n\n需要用什么就学习什么\n\n很多人想学会 HTML、CSS、JS 再做网页，最后却发现看完书之后什么页面都写不出来！这是错误的学习方法，先用再学才是学编程的不二法门\n内容\n我们简历里写什么内容呢？必须包含的有以下几部分：\n\n个人信息：姓名、性别、年龄、学校、所在城市、目标职位（千万不要写目标薪资）\n教育经历：不管你的学校好或者不好（避免浪费时间）\n工作经历：如果有相关经验就写，如果没有相关经验就不写，或者一笔带过\n项目经验：这是我们的重点。我们就是要用项目来证明我们，所以我们至少要在毕业前准备 8 个项目，然后择优选择 4 到 6 个放在简历里\n\n可选部分有：\n\n\n开源代码：你的 GitHub 如果每天都有 commit 记录，可以加分不少\n\n\n博客链接：如果面试官看到你半年写了 20 篇博客，基本就会要你了\n\n\n外文翻译：如果你能翻译一些英文技术文章，也放在简历里吧\n\n\n他人评价：老师的评语、同学的夸奖等（截图）\n\n\n自拍：只要长得不丑，就一定要放头像，给人以亲切感。有头像的简历会比没有头像的简历更醒目。\n\n\n对公司业务的分析：表示你对这个公司很关注\n\n\n不建议写到简历\n\n自我评价：没什么卵用\n对公司的喜爱：没什么卵用\n段子：没什么卵用\n\n\n一个在线简历显然会用到以下技术 HTML、CSS、JS、SVG、AJAX\n\n","plink":"https://blog.liumulin.top/2021/03/18/简历/"},{"title":"脚本","date":"2021-03-18T08:41:29.000Z","date_formatted":{"ll":"2021年3月18日","L":"2021/03/18","MM-DD":"03-18"},"updated":"2022-11-16T02:30:28.837Z","content":"脚本\n理解脚本\n如果你打开一本JavaScript教程，那么很可能在第一章就看到这句话：\n\nJavaScript 是一门动态类型、面向对象的脚本语言\n\n其实脚本原本来自戏剧舞台，比如下面这个脚本：\n\n公馆一室内\n王妈：（小心翼翼地）小姐，您还是得注意身子，就吃点东西吧。\n鸡小姐：（把碗砸在地上）不吃，我就是不吃。\n（王妈下）\n\n脚本主要由人物对话和舞台提示组成。演员和道具组只需要按照脚本说的做即可\n编程领域的脚本也是类似的，计算机只要照着脚本上说的做即可，比如下面这个脚本：\n12345cd ~/Desktopmkdir democd demoecho &quot;hi&quot;&gt;index.htmlcd ~/Desktop\n所以说，脚本就是给计算机照着做的。这是我们对「脚本！的一个感性认识。接下来我们写一个脚本。\n写一个脚本\n\n\n找个地方新建文件，后缀随意，一般来说脚本的后缀是 .sh，但是我偏要把后缀写成 .txt。我喜欢把脚本放在 ~/local 目录里。（我知道你没有这个目录，创建一下这个目录就行啦）\n123mkdir ~/localcd ~/localtouch demo.txt\n\n\n编辑 demo.txt，内容如下：\n1234mkdir democd demomkdir css jstouch index.html css/style.css js/main.js\n\n\n（Windows 用户请跳过这一步）给 demo.txt 添加执行权限 chmod +x demo.txt\n\n\n在任意位置执行 sh ~/local/demo.txt 即可运行此脚本\n\ncd ~/Desktop\nsh ~/local/demo.txt\n你会看到当前目录里多出一个 demo 目录，demo 目录里面还有一些文件\n好了，这个 demo.txt 就是你写出的第一个 Bash 脚本了。\n\n\n\n将 ~/local 添加到 PATH 里\n\ncd ~/local; pwd 得到 local 的绝对路径\n创建 ~/.bashrc：touch ~/.bashrc\n编辑 ~/.bashrc：start ~/.bashrc\n在编辑器里添加一行字： export PATH=“local的绝对路径:$PATH”\nsource ~/.bashrc\n之前你要运行 sh ~/local/demo.txt，现在你只需要运行 demo.txt 就行了（想想为什么，道理显而易见）\n\n\n\ndemo.txt 的后缀 .txt 很无聊，删掉它\n\nmv ~/local/demo.txt ~/local/demo\n现在你只要运行 demo 就能执行该脚本了\n\n\n\n细节\n\nPATH 的作用：你每次在 Bash 里面输入一个命令时（比如 ls、cp、demo），Bash 都会去 PATH 列表里面寻找对应的文件，如果找到了就执行。\n使用 type demo 可以看到寻找过程\n使用 which demo 可以看到寻找结果\n文件后缀的作用：毫无作用你以为一个文件以 .exe 结尾就一定可以双击吗？你以为一个文件以 .png 结尾就一定是图片吗？图样图森破！\n\n参数\ndemo 脚本只能创建名字为 demo 的目录，太无聊了，我们让目录名是可变的\n12345mkdir $1cd $1mkdir css jstouch index.html css/style.css js/main.jsexit\n\n$1 表示你传的第一个参数。\n\n老师你怎么知道 $1 表示第一个参数？\n\n好问题，答案是我 Google 出来的 http://lmgtfy.com/?q=bash+first+param\n用百度也行 http://www.baidu-x.com/?q=bash+第一个+参数\n\n判断目录是否已存在\n1234567891011if [ -d $1 ]; then\techo &#x27;error: dir exists&#x27;\texitelse    mkdir $1    cd $1    mkdir css js    touch index.html css/style.css js/main.js    echo &#x27;success&#x27;\texitfi\n\n老师，你怎么知道 -d $1 可以判断目录是否存在？\n我 Google 出来的 http://lmgtfy.com/?q=bash+dir+exists\n\n返回值\n\nexit 0 表示没有错误\nexit 1 表示错误代码为 1\n\n\ndemo &amp;&amp; echo ‘结束’\n\n只有在 demo 成功时，才会执行 echo ‘结束’.\n总结\n\n脚本就是给机器一行一行执行的文本\nBash 脚本有Bash脚本的语法，Node.js 脚本有JS语法\n不管是那种脚本，能实现的功能都差不多，只是语法不同\nBash脚本的语法挺奇葩的，比如$1$#等符号5.不同特别去学Bash 脚本的用法，遇到不会的就 Google、\n不同特别去学Node.js 脚本的用法，遇到不会的就 Google\n新人写代码最大的问题就是「抄错了」多写了一个空格，少写了一个空格，单词拼错了，没有加分号，多加了分号\n\n写自己的脚本\n把Linux上的配置文件写成脚本上传到GitHub，要执行的时候下载即可（检查执行权限）\n12curl -L http://github.com/xx/xx.sh./xx.sh","plink":"https://blog.liumulin.top/2021/03/18/脚本/"},{"title":"MySQL练习","date":"2021-03-09T15:13:51.000Z","date_formatted":{"ll":"2021年3月9日","L":"2021/03/09","MM-DD":"03-09"},"updated":"2022-11-16T02:30:28.833Z","content":"MySQL练习\n数据库初始化\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071drop table if exists t_score;drop table if exists t_courses;drop table if exists t_students;drop table if exists t_teachers;-- 学生表CREATE TABLE `Student`(    `s_id` VARCHAR(20),    `s_name` VARCHAR(20) NOT NULL DEFAULT &#x27;&#x27;,    `s_birth` VARCHAR(20) NOT NULL DEFAULT &#x27;&#x27;,    `s_sex` VARCHAR(10) NOT NULL DEFAULT &#x27;&#x27;,    PRIMARY KEY(`s_id`));-- 课程表CREATE TABLE `Course`(    `c_id`  VARCHAR(20),    `c_name` VARCHAR(20) NOT NULL DEFAULT &#x27;&#x27;,    `t_id` VARCHAR(20) NOT NULL,    PRIMARY KEY(`c_id`));-- 教师表CREATE TABLE `Teacher`(    `t_id` VARCHAR(20),    `t_name` VARCHAR(20) NOT NULL DEFAULT &#x27;&#x27;,    PRIMARY KEY(`t_id`));-- 成绩表CREATE TABLE `Score`(    `s_id` VARCHAR(20),    `c_id`  VARCHAR(20),    `s_score` INT(3),    PRIMARY KEY(`s_id`,`c_id`));-- 插入学生表测试数据insert into Student values(&#x27;01&#x27; , &#x27;赵雷&#x27; , &#x27;1990-01-01&#x27; , &#x27;男&#x27;);insert into Student values(&#x27;02&#x27; , &#x27;钱电&#x27; , &#x27;1990-12-21&#x27; , &#x27;男&#x27;);insert into Student values(&#x27;03&#x27; , &#x27;孙风&#x27; , &#x27;1990-05-20&#x27; , &#x27;男&#x27;);insert into Student values(&#x27;04&#x27; , &#x27;李云&#x27; , &#x27;1990-08-06&#x27; , &#x27;男&#x27;);insert into Student values(&#x27;05&#x27; , &#x27;周梅&#x27; , &#x27;1991-12-01&#x27; , &#x27;女&#x27;);insert into Student values(&#x27;06&#x27; , &#x27;吴兰&#x27; , &#x27;1992-03-01&#x27; , &#x27;女&#x27;);insert into Student values(&#x27;07&#x27; , &#x27;郑竹&#x27; , &#x27;1989-07-01&#x27; , &#x27;女&#x27;);insert into Student values(&#x27;08&#x27; , &#x27;王菊&#x27; , &#x27;1990-01-20&#x27; , &#x27;女&#x27;);-- 课程表测试数据insert into Course values(&#x27;01&#x27; , &#x27;语文&#x27; , &#x27;02&#x27;);insert into Course values(&#x27;02&#x27; , &#x27;数学&#x27; , &#x27;01&#x27;);insert into Course values(&#x27;03&#x27; , &#x27;英语&#x27; , &#x27;03&#x27;);-- 教师表测试数据insert into Teacher values(&#x27;01&#x27; , &#x27;张三&#x27;);insert into Teacher values(&#x27;02&#x27; , &#x27;李四&#x27;);insert into Teacher values(&#x27;03&#x27; , &#x27;王五&#x27;);-- 成绩表测试数据insert into Score values(&#x27;01&#x27; , &#x27;01&#x27; , 80);insert into Score values(&#x27;01&#x27; , &#x27;02&#x27; , 90);insert into Score values(&#x27;01&#x27; , &#x27;03&#x27; , 99);insert into Score values(&#x27;02&#x27; , &#x27;01&#x27; , 70);insert into Score values(&#x27;02&#x27; , &#x27;02&#x27; , 60);insert into Score values(&#x27;02&#x27; , &#x27;03&#x27; , 80);insert into Score values(&#x27;03&#x27; , &#x27;01&#x27; , 80);insert into Score values(&#x27;03&#x27; , &#x27;02&#x27; , 80);insert into Score values(&#x27;03&#x27; , &#x27;03&#x27; , 80);insert into Score values(&#x27;04&#x27; , &#x27;01&#x27; , 50);insert into Score values(&#x27;04&#x27; , &#x27;02&#x27; , 30);insert into Score values(&#x27;04&#x27; , &#x27;03&#x27; , 20);insert into Score values(&#x27;05&#x27; , &#x27;01&#x27; , 76);insert into Score values(&#x27;05&#x27; , &#x27;02&#x27; , 87);insert into Score values(&#x27;06&#x27; , &#x27;01&#x27; , 31);insert into Score values(&#x27;06&#x27; , &#x27;03&#x27; , 34);insert into Score values(&#x27;07&#x27; , &#x27;02&#x27; , 89);insert into Score values(&#x27;07&#x27; , &#x27;03&#x27; , 98);\n练习题\n\n\n查询&quot;01&quot;课程比&quot;02&quot;课程成绩高的学生的信息及课程分数\n123456select stu.stu_id, stu.stu_name, stu.birthday, stu.stu_gender,    ifnull(sc1.score, 0) as &#39;1课程分数&#39;, ifnull(sc2.score, 0) as &#39;2课程分数&#39;from t_students stuleft join t_score sc1 on stu.stu_id &#x3D; sc1.stu_id and sc1.course_id &#x3D; 1left join t_score sc2 on stu.stu_id &#x3D; sc2.stu_id and sc2.course_id &#x3D; 2where ifnull(sc1.score, 0) &gt; ifnull(sc2.score, 0);\n\n\n查询&quot;01&quot;课程比&quot;02&quot;课程成绩低的学生的信息及课程分数\n123456select stu.stu_id, stu.stu_name, stu.birthday, stu.stu_gender,    ifnull(sc1.score, 0) as &#39;1课程分数&#39;, ifnull(sc2.score, 0) as &#39;2课程分数&#39;from t_students stuleft join t_score sc1 on stu.stu_id &#x3D; sc1.stu_id and sc1.course_id &#x3D; 1left join t_score sc2 on stu.stu_id &#x3D; sc2.stu_id and sc2.course_id &#x3D; 2where ifnull(sc1.score, 0) &lt; ifnull(sc2.score, 0);\n\n\n查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩\n12345select stu.stu_id, stu.stu_name, round(avg(sc.score), 2) as avg_scorefrom t_students stuleft join t_score sc on stu.stu_id &#x3D; sc.stu_idgroup by stu.stu_id, stu.stu_namehaving avg_score &gt;&#x3D; 60;\n\n\n查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩\n12345select stu.stu_id, stu.stu_name, round(ifnull(avg(sc.score), 0), 2) as avg_scorefrom t_students stuleft join t_score sc on stu.stu_id &#x3D; sc.stu_idgroup by stu.stu_id, stu.stu_namehaving avg_score &lt; 60;\n\n\n查询所有同学的学生编号. 学生姓名. 选课总数. 所有课程的总成绩\n123456select stu.stu_id, stu.stu_name,     count(sc.course_id) as &#39;qty_course&#39;, -- 选课数量    ifnull(sum(sc.score), 0) as &#39;sum_score&#39; -- 总分数from t_students stuleft join t_score sc on stu.stu_id &#x3D; sc.stu_idgroup by stu.stu_id, stu.stu_name;\n\n\n查询&quot;李&quot;姓老师的数量\n12select count(0) from t_teacherswhere teacher_name like &#39;李%&#39;;\n\n\n查询学过&quot;张三&quot;老师授课的同学的信息\n1234567select stu.* from t_students stuwhere stu.stu_id in (    select sc.stu_id from t_score sc    left join t_courses cou on sc.course_id &#x3D; cou.course_id    left join t_teachers te on cou.teacher_id &#x3D; te.teacher_id    where te.teacher_name &#x3D; &#39;贝吉塔&#39;);\n\n\n查询没学过&quot;张三&quot;老师授课的同学的信息\n1234567select stu.* from t_students stuwhere stu.stu_id not in (    select sc.stu_id from t_score sc    left join t_courses cou on sc.course_id &#x3D; cou.course_id    left join t_teachers te on cou.teacher_id &#x3D; te.teacher_id    where te.teacher_name &#x3D; &#39;贝吉塔&#39;);\n\n\n查询学过编号为&quot;01&quot;并且也学过编号为&quot;02&quot;的课程的同学的信息\n12345678910select stu_id, stu_name, birthday, stu_genderfrom t_studentswhere stu_id in (    select stu_id    from t_score    where course_id &#x3D; 1)and stu_id in (    select stu_id    from t_score    where course_id &#x3D; 2);\n\n\n查询学过编号为&quot;01&quot;但是没有学过编号为&quot;02&quot;的课程的同学的信息\n12345678910select stu_id, stu_name, birthday, stu_genderfrom t_studentswhere stu_id in (    select stu_id    from t_score    where course_id &#x3D; 1)and stu_id not in (    select stu_id    from t_score    where course_id &#x3D; 2);\n\n\n查询没有学全所有课程的同学的信息\n123456789101112select student_id, student_namefrom tb_studentwhere student_id in (    select stu.student_id    from tb_student stu    left join tb_score sc on stu.student_id &#x3D; sc.student_id    group by student_id    having count(course_id) &lt; (        select count(0)        from tb_course    ));\n\n\n查询至少有一门课与学号为&quot;01&quot;的同学所学相同的同学的信息\n12345678select * from t_studentswhere stu_id in (\tselect stu_id from t_score\twhere course_id in (\t\tselect course_id from t_score where stu_id &#x3D; 1\t) and stu_id !&#x3D; 1\tgroup by stu_id);\n\n\n查询和&quot;01&quot;号的同学学习的课程完全相同的其他同学的信息\n1234567891011121314select * from t_students where stu_id in (\tselect temp.stu_id from (\t\tselect sc.stu_id, group_concat(crs.course_name) as courses\t\tfrom t_score sc\t\tleft join t_courses crs on sc.course_id &#x3D; crs.course_id\t\tgroup by sc.stu_id\t) temp where temp.courses &#x3D; (\t\tselect group_concat(crs.course_name) as courses\t\tfrom t_score sc\t\tleft join t_courses crs on sc.course_id &#x3D; crs.course_id\t\tgroup by sc.stu_id\t\thaving sc.stu_id &#x3D; 1\t) and temp.stu_id !&#x3D; 1);\n\n\n查询没学过&quot;张三&quot;老师讲授的任一门课程的学生姓名\n123456select stu.stu_name from t_students stu where stu.stu_id not in (    select sc.stu_id from t_score sc -- 学过贝吉塔教的课的学生id    left join t_courses cou on sc.course_id &#x3D; cou.course_id    left join t_teachers tc on cou.teacher_id &#x3D; tc.teacher_id    where tc.teacher_name &#x3D; &#39;贝吉塔&#39;);\n\n\n查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩\n123456789select stu.stu_id, stu.stu_name, avg(sc.score)from t_students stuleft join  t_score sc on stu.stu_id &#x3D; sc.stu_idgroup by stu.stu_id, stu.stu_namehaving sum(\tcase \twhen ifnull(sc.score, 0) &lt; 60 then 1\telse 0 end) &gt;&#x3D; 2;\n\n\n检索&quot;01&quot;课程分数小于60，按分数降序排列的学生信息\n12345678select stu.*, sum(sc.score) as score_sumfrom t_students stuleft join t_score sc on stu.stu_id &#x3D; sc.stu_idwhere stu.stu_id in (\tselect stu_id from t_score\twhere course_id &#x3D; 1 and score &lt; 60) group by stu.stu_idorder by score_sum desc;\n\n\n按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩\n12345678910111213141516select stu.stu_id, stu.stu_name,  ifnull(sc1.score, 0) as yw_score, -- 语文分数  ifnull(sc2.score, 0) as sx_score, -- 数学分数  ifnull(sc3.score, 0) as yy_score, -- 英语分数  round(ifnull(avg_t.avg_score, 0), 2) as avg_scorefrom t_students stuleft join t_score sc1 on stu.stu_id &#x3D; sc1.stu_id and sc1.course_id &#x3D; 1 -- 语文成绩表left join t_score sc2 on stu.stu_id &#x3D; sc2.stu_id and sc2.course_id &#x3D; 2 -- 数学成绩表left join t_score sc3 on stu.stu_id &#x3D; sc3.stu_id and sc3.course_id &#x3D; 3 -- 英语成绩表left join ( -- 子查询, 临时表    select stu_id, avg(score) as avg_score -- 平均分    from t_score    group by stu_id    order by avg_score    ) avg_t on stu.stu_id &#x3D; avg_t.stu_idorder by avg_t.avg_score desc;\n\n\n查询各科成绩最高分. 最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率 及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90\n123456789101112131415161718192021select sc.course_id, crs.course_name,    max(sc.score) as max_score,    min(sc.score) as min_score,    avg(sc.score) as avg_score,    sum(sc.score &gt;&#x3D; 60) &#x2F; 8 as pass_per,    sum(sc.score &gt;&#x3D; 70 and sc.score &lt; 80) &#x2F; 8 as medium_per,    sum(    \tcase    \twhen sc.score &gt;&#x3D; 80 and sc.score &lt; 90 then 1    \telse 0    \tend    ) &#x2F; 8 as good_per,    sum(    \tcase    \twhen sc.score &gt;&#x3D; 90 then 1    \telse 0    \tend    ) &#x2F; 8 as perfect_perfrom t_score scright join t_courses crs on sc.course_id &#x3D; crs.course_idgroup by sc.course_id, crs.course_name;\n\n\n按各科成绩进行排序，并显示排名\n\n\n查询学生的总成绩并进行排名\n\n查询学生的总成绩\n查询学生的总成绩并进行排名，sql 2000用子查询完成，分总分重复时保留名次空缺和不保留名次空缺两种。\n查询学生的总成绩并进行排名，sql 2005用rank,DENSE_RANK完成，分总分重复时保留名次空缺和不保留名次空缺两种。\n\n\n\n查询不同老师所教不同课程平均分从高到低显示\n\n\n查询所有课程的成绩第2名到第3名的学生信息及该课程成绩\n\n\n统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]及所占百分比\n\n统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]\n统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[&lt;60]及所占百分比\n\n\n\n查询学生平均成绩及其名次\n\n查询学生的平均成绩并进行排名，sql 2000用子查询完成，分平均成绩重复时保留名次空缺和不保留名次空缺两种。\n查询学生的平均成绩并进行排名，sql 2005用rank,DENSE_RANK完成，分平均成绩重复时保留名次空缺和不保留名次空缺两种。\n\n\n\n查询各科成绩前三名的记录\n\n分数重复时保留名次空缺\n分数重复时不保留名次空缺，合并名次\n\n\n\n查询每门课程被选修的学生数\n\n\n查询出只有两门课程的全部学生的学号和姓名\n\n\n查询男生. 女生人数\n\n\n查询名字中含有&quot;风&quot;字的学生信息\n\n\n查询同名同性学生名单，并统计同名人数\n\n\n查询1990年出生的学生名单\n\n\n123SELECT *FROM t_studentsWHERE EXTRACT(YEAR FROM birthday) &#x3D; 1990;\n\n查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列\n查询平均成绩大于等于85的所有学生的学号. 姓名和平均成绩\n查询课程名称为&quot;数学&quot;，且分数低于60的学生姓名和分数\n\n1234567SELECT  t_students.stu_name,  t_score.scoreFROM t_score  CROSS JOIN t_courses ON t_score.course_id &#x3D; t_courses.course_id AND t_courses.course_name &#x3D; &#39;数学&#39;  CROSS JOIN t_students ON t_score.stu_id &#x3D; t_students.stu_idWHERE score &lt; 60\n\n查询所有学生的课程及分数情况；\n\n123SELECT stu_name,score,course_name FROM t_studentsLEFT JOIN t_score ON t_students.stu_id &#x3D; t_score.stu_idLEFT JOIN t_courses ON t_score.course_id &#x3D; t_courses.course_id;\n\n查询任何一门课程成绩在70分以上的姓名. 课程名称和分数；\n查询不及格的课程\n查询课程编号为01且课程成绩在80分以上的学生的学号和姓名；\n求每门课程的学生人数\n查询选修&quot;张三&quot;老师所授课程的学生中，成绩最高的学生信息及其成绩\n\n当最高分只有一个时\n当最高分出现多个时\n\n\n查询不同课程成绩相同的学生的学生编号. 课程编号. 学生成绩\n查询每门功成绩最好的前两名\n统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列\n检索至少选修两门课程的学生学号\n查询选修了全部课程的学生信息\n查询各学生的年龄\n\n只按照年份来算\n按照出生日期来算，当前月日 &lt; 出生年月的月日则，年龄减一\n\n\n查询本周过生日的学生\n查询下周过生日的学生\n查询本月过生日的学生\n\n123SELECT *FROM t_studentsWHERE EXTRACT(MONTH FROM birthday) &#x3D; EXTRACT(MONTH FROM curdate());\n\n查询下月过生日的学生\n\n1234SELECT *FROM t_studentsWHERE EXTRACT(MONTH FROM birthday) &#x3D; EXTRACT(MONTH FROM curdate()) + 1      OR EXTRACT(MONTH FROM birthday) &#x3D; 1 AND EXTRACT(MONTH FROM curdate()) &#x3D; 12;","plink":"https://blog.liumulin.top/2021/03/09/MySQL练习/"},{"title":"MySQL中的索引","date":"2021-03-09T15:11:57.000Z","date_formatted":{"ll":"2021年3月9日","L":"2021/03/09","MM-DD":"03-09"},"updated":"2022-11-16T02:30:28.833Z","content":"MySQL\n数据库优化是一个综合型的技术，并不是通过某一种方式让数据库效率提高很多，而是通过多方面的提高，从而使的数据库提高很多。\n主要包括：\n\n\n表的设计合理化（3范式）\n\n\nSQL语句优化\n\n\n给表要添加合适的索引，如何使用索引。\n\n\n分表技术（水平分割、垂直分割）\n\n\n定时清除垃圾数据，定时进行碎片整理\n\n\n多用存储过程，和触发器。\n\n\n对mysql的配置进行一些优化\n\n\n读写分离。\n\n\nMySQL服务器硬件升级。\n数据库的设计\n\n\nMySQL中的索引：\n基本法则：索引应该构建在被用作查询条件的字段上；索引类型：\nB+Tree素引：顺序存储，每一个叶子节点到根结点的距离是相同的：左前缀索引，适合查询范围类的数据；可以使用B-Tree案引的查询类型：全键值、键值范围或键前缀查找：\n全值匹配：精确某个值，“Jinjiao King&quot;：\n匹配最左前缀：只精确匹配起头部分，“Jin%”\n匹配范围值：\n精确匹配某一列并范围匹配另一列：\n只访问索引的查询\n不适合使用B-Tree索引的场景：\n如果不从最左列开始，索引无效：（Age，Name）\n不能跳过索引中的列：（StuID，Name，Age）如果查询中某个列是为范围查询，那么其右侧的列都无法再使用索引优化查询：（StuID，Name）\nHash索引：基于哈希表实现，特别适用于精确匹配索引中的所有列；注意：只有Memory存储引擎支持显式hash索引：\n适用场景：\n只支持等值比较查询，包括=，IN（），&lt;=&gt;；不适合使用hash索引的场景：\n存储的非为值的顺序，因此，不适用于顺序查询；不支持模糊匹配；空间索引（R-Tree）：\nMyISAM支持空间索引：\n全辛索引（FULLTEXT）：\n在文本中查找关键词：\n索引优点：\n索引可以降低服务需要扫描的数据量，减少了I0次数；索引可以帮助服务器避免排序和使用临时表：索引可以帮助将随机I/0转为顺序I/0；高性能索引策略：\n独立使用列，尽量避免其参与运算：\n左前缀索引：索引构建于字段的左侧的多少个字符，要通过索引选择性来评估索引选择性：不重复的索引值和数据表的记录总数的比值；多列索引：\nAND操作时更适合使用多列索引：\n选择合适的索引列次序：将选择性最高放左侧；冗余和重复索引：不好的索引使用策略\n","plink":"https://blog.liumulin.top/2021/03/09/MySQL中的索引/"},{"title":"Spring","date":"2021-03-08T15:16:13.000Z","date_formatted":{"ll":"2021年3月8日","L":"2021/03/08","MM-DD":"03-08"},"updated":"2022-11-16T02:30:28.834Z","content":"Spring\nIOC\n程序的耦合：程序间的依赖关系\n包括：类之间的依赖、方法间的依赖\n解耦：降低程序间的依赖关系\n实际开发中应该做到：编译期不依赖，运行时才依赖。\n\n就是要做到要new的类删掉以后，编译期不让它报错\n\n解耦的思路：\n第一步：使用反射来创建对象，而避免使用new关键字\n\nprivate IAccountDao accountDao=new AccountDaoImpl();\n\n第二步：通过读取配置文件来获取要创建的对象全限定类名\nBean：在计算机英语中，有可重用组件的含义。\nJavaBean：用java语言编写的可重用组件。javabean&gt;实体类\n一个创建Bean对象的工厂，它就是创建我们的service和dao对象的，两种方式：\ni.需要一个配置文件来配置我们的service和dao配置的内容：唯一标识=全限定类名（key=value）\nii.通过读取配置文件中配置的内容，反射创建对象\n我的配置文件可以是xml也可以是properties\n","plink":"https://blog.liumulin.top/2021/03/08/Spring/"},{"title":"Chrome","date":"2021-03-08T15:08:08.000Z","date_formatted":{"ll":"2021年3月8日","L":"2021/03/08","MM-DD":"03-08"},"updated":"2022-11-16T02:30:28.830Z","content":"Chrome\n\n\n如何做好CHROME浏览器的书签管理\n\n\n删除\n\n\n分类\n\n领域，兴趣爱好，关注里点，日常使用\n使用思维导图勾勒出书签文件夹体系\n文件夹目录层圾不超过三层\n\n\n\n精选\n\n工具属性 -&gt; 收藏夹\n内容属性~&gt;云笔记\n\n\n坚持每周清理【其他书签】文件夹\n\n\n\n收藏\n\n浏览器自带收藏夹\n收趣\nPocket\n\n\n\n\n\n谷歌搜索技巧\n\n\n关键词化整为零搜索\n\n使用介绍：格口语表达拆分成关键词\n案例说明\n\n如何将PDF文件转换为Word文件？- PDF转Word\n大神，有沒有好用的录音转文字软件成工具？\n\n录啬转文字\nintitle：录音转文字\n\n\n博主，请问有没有好用的视频压缩软件啊？\n\nintitle：视频压缩 - site：zhihu.com\n视频压缩\n\n\n\n\n\n\n\nintitle命令\nintitle: 指令返回的是页面title 中包含关键词的页面。Google 和bd都支持intitle 指令。\n使用intitle 指令找到的文件是更准确的竞争页面。如果关键词只出现在页面可见文字中，而没有出现在title 中，大部分情况是并没有针对关键词进行优化，所以也不是有力的竞争对手。\n\n\nSite\n\n论文版 site:jianshu.com\n北京昌平合租 siteidouban.com\nPDFEIement site:52pojie.cn\nintitle:手机录屏软件 site:zhihu.com\n\n\n\n限定来源网站类型\n\n使用介绍:定向筛选特定网站类型的信息,例如教育网站edu,政府网站gov\n格式:在关键词后面加后缀,例如:关键词gov filetype:pdf\n案例说明\n\n搜索政府发布的关于网络安全这块的PDF文件: intitle:“网络安全” gov filetype:pdf\n北京房贷gov\n“软件演化” edu filetype:pdf\n\n\n\n\n\n","plink":"https://blog.liumulin.top/2021/03/08/Chrome/"}]