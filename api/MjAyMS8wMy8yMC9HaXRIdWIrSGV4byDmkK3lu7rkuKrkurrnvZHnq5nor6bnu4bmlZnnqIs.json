{"title":"GitHub+Hexo 搭建个人网站","date":"2021-03-20T08:41:29.000Z","date_formatted":{"ll":"2021年3月20日","L":"2021/03/20","MM-DD":"03-20"},"link":"2021/03/20/GitHub+Hexo 搭建个人网站详细教程","comments":true,"tags":["GitHub"],"updated":"2022-11-16T02:30:28.831Z","content":"<h1 id=\"github+hexo-搭建个人网站\">GitHub+Hexo 搭建个人网站<a title=\"#github+hexo-搭建个人网站\" href=\"#github+hexo-搭建个人网站\"></a></h1>\n<h2 id=\"什么是-hexo？\">什么是 Hexo？<a title=\"#什么是-hexo？\" href=\"#什么是-hexo？\"></a></h2>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<blockquote>\n<p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\">[文档| Hexo]</a></p>\n</blockquote>\n<h2 id=\"获得个人网站域名\">获得个人网站域名<a title=\"#获得个人网站域名\" href=\"#获得个人网站域名\"></a></h2>\n<p>阿里云购买一个域名</p>\n<h2 id=\"github-创建个人仓库\">GitHub 创建个人仓库<a title=\"#github-创建个人仓库\" href=\"#github-创建个人仓库\"></a></h2>\n<p>创建新的仓库，<strong>用户名</strong>.github.io 这个用户名使用你的GitHub帐号名称代替，比如我的仓库名为：<a href=\"http://liuilin.github.io\">liuilin.github.io</a></p>\n<h2 id=\"安装-&amp;-配置-git\">安装 &amp; 配置 Git<a title=\"#安装-&amp;-配置-git\" href=\"#安装-&amp;-配置-git\"></a></h2>\n<p>wsl 的 scoop 安装 Git</p>\n<p><a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\" target=\"_blank\">廖雪峰 Git 教程</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;你的GitHub用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;你的GitHub注册邮箱&quot;</span></span><br><span class=\"line\">git config --global push.default matching</span><br><span class=\"line\">git config --global core.quotepath <span class=\"literal\">false</span></span><br><span class=\"line\">git config --global core.editor <span class=\"string\">&quot;vim&quot;</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>\n<p>在本地创建 GitHub 仓库</p>\n</li>\n<li>\n<p>进入 blog 目录，逐行复制命令到 gitbash 运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;# blog&quot;</span> &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git remote add origin https://github.com/GitHub用户名/blog.git</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>如果上面最后一句出现失败：是因为缺少 SSH Key</p>\n<p>Google：GitHub ssh key 复制命令 <code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code></p>\n<p>接着输入<code>cat ~/.ssh/id_rsa.pub</code> 把打印的值添加到 GitHub个人 的 Personal settings/SSH and GPG keys 的新建中（或者把 id_rsa.pub 的值复制到 GitHub 新建的 new SSH Key 中），然后运行失败的 git push -u origin master</p>\n<blockquote>\n<p>不用 hexo ，而是使用 GitHub Pages 的情况：</p>\n<p>新建 index.html ，进入 Settings 的 GitHub Pages ，将 Source 改为 master branch 。保存后再次拉到此处把新出现的网址复制，点击顶部的项目，点击Edit输入网址保存。这样就可以点击网址访问首页了</p>\n</blockquote>\n</li>\n<li>\n<p>检测GitHub公钥设置是否成功，命令行中输入 ssh <a href=\"mailto:git@github.com\">git@github.com</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\Users\\Daniel\\blog&gt; ssh git@github.com</span><br><span class=\"line\">PTY allocation request failed on channel 0</span><br><span class=\"line\">Hi liuilin! You<span class=\"string\">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class=\"line\"><span class=\"string\">Connection to github.com closed.</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"安装-node.js\">安装 Node.js<a title=\"#安装-node.js\" href=\"#安装-node.js\"></a></h2>\n<p>Windows 用 scoop 安装 node</p>\n<p>检测Node.js是否安装成功，在命令行中输入 node -v</p>\n<p>检测npm是否安装成功，在命令行中输入npm -v</p>\n<p>安装Hexo的环境搭建完成</p>\n<h2 id=\"安装-hexo\">安装 Hexo<a title=\"#安装-hexo\" href=\"#安装-hexo\"></a></h2>\n<p>创建一个文件夹随意命名，如 Blog ， 以后 Hexo 框架发布的网页都在这个文件夹中</p>\n<p>使用npm命令安装Hexo，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>这个安装时间较长耐心等待</p>\n<p>安装完成后，初始化我们的博客，输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n<p>wsl 下查看 blog 第一层级：tree -a -L 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── .deploy_git</span><br><span class=\"line\">├── .git</span><br><span class=\"line\">├── .gitignore</span><br><span class=\"line\">├── READEME.md</span><br><span class=\"line\">├── _config.landscape.yml</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── db.json</span><br><span class=\"line\">├── node_modules</span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── public</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p>在我们初始化的一个 blog 文件夹中，为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &#39;博客名&#39;</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>部署后访问 localhost:4000 查看本地</p>\n<p>常用命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">现在来介绍常用的Hexo 命令</span><br><span class=\"line\">npm install hexo -g \t# 安装Hexo</span><br><span class=\"line\">npm update hexo -g \t\t# 升级</span><br><span class=\"line\">hexo init \t\t\t\t# 初始化博客</span><br><span class=\"line\"></span><br><span class=\"line\">命令简写</span><br><span class=\"line\">hexo n(ew) &#39;新建文章标题&#39;    # 新建文章</span><br><span class=\"line\">hexo g(enerate)\t\t\t   # 生成</span><br><span class=\"line\">hexo s(erver) \t   \t\t   # 启动服务预览</span><br><span class=\"line\">hexo d(eploy) \t   \t\t   # 部署</span><br><span class=\"line\"></span><br><span class=\"line\">hexo server \t\t\t \t# Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class=\"line\">hexo server -s \t\t\t \t# 静态模式</span><br><span class=\"line\">hexo server -p 5000 \t \t# 更改端口</span><br><span class=\"line\">hexo server -i x.x.x.x \t\t# 自定义 IP</span><br><span class=\"line\">hexo clean \t\t\t\t\t# 清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class=\"line\">刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作</span><br></pre></td></tr></table></figure>\n<h2 id=\"更换主题\">更换主题<a title=\"#更换主题\" href=\"#更换主题\"></a></h2>\n<p>在 blog 目录中更换主题 next/inside （比较喜爱的两个主题），此目录下打开命令行输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$blog</span>: git <span class=\"built_in\">clone</span> https://github.com/ikeq/hexo-theme-inside.git themes/inside</span><br></pre></td></tr></table></figure>\n<p>将主题下载到 blog 目录的 themes 目录下，打开站点的 _config.yml 文件中的配置为 theme: inside（下载的主题名字）</p>\n<h2 id=\"图床\">图床<a title=\"#图床\" href=\"#图床\"></a></h2>\n<p>创建一个图床仓库 image-bed ，分支名要设 GitHub 能看到的分支</p>\n<p>使用 jsDelivr CDN 对 GitHub 图床进行加速，PicGo 配置自定义域名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319141245558.png\" alt=\"image-20210319141245558\" class=\"φbs\"></p>\n<p>在目录 Setting / Developer Settings / Personal access tokens 下获取 GitHub Token ：</p>\n<p>点击 Generate new token</p>\n<p>输入 Note 及勾选 repo，生成后复制 token 进 PicGo 的设定 Token 中</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319141948636.png\" alt=\"image-20210319141948636\" class=\"φbs\"></p>\n<blockquote>\n<p>GitHub 仓库的容量有 1G 的上限，但对个人博客来说绰绰有余</p>\n</blockquote>\n<p>设置参数说明：</p>\n<ul>\n<li>设定仓库名：填入你上面创建的仓库名，格式为：用户名/仓库名；</li>\n<li>设定分支名：一般填写 master 即可；</li>\n<li>设定 Token：将上一步 GitHub 配置中得到的 Token 粘贴进去；</li>\n<li>指定存储路径：图片在 GitHub 仓库中的存储路径，例如：blog/img/</li>\n<li>设定自定义域名：此处直接设置 jsDelivr 加速的访问地址，例如：自定义域名设为 <a href=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@master\">https://cdn.jsdelivr.net/gh/liuilin/image-bed@master</a> 来进行 CDN 加速（<a href=\"https://cdn.jsdelivr.net/gh/\">https://cdn.jsdelivr.net/gh/</a> 不能省略，gh 为 GitHub 缩写，后面接 GitHub 名字 + 仓库 + @仓库branch）\n<ol>\n<li>gh：固定写上，为 GitHub 缩写，表示来自 GitHub 的仓库</li>\n<li>liuilin/image-bed：仓库的具体位置</li>\n<li>master 仓库的分支</li>\n</ol>\n</li>\n</ul>\n<p>PicGo 配置完成后在 Typora 设置中 PicGo 程序路径，然后将图片粘贴到 Typora 里的 markdown 文件中就会自动上传到 GitHub</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319145559552.png\" alt=\"image-20210319145559552\" class=\"φbs\"></p>\n<p>使用 jsDelivr 优势</p>\n<blockquote>\n<p>使用 jsDelivr 加速静态文件访问，能够优化博客体验。<br>\n在 GitHub 存储图片，利于博主对于图片的掌控。<br>\n使用 PicGo 的原因是因为能够方便地将上传图片到 GitHub，并直接获取 jsDelivr 的加速后的图片地址。</p>\n</blockquote>\n<h2 id=\"推送\">推送<a title=\"#推送\" href=\"#推送\"></a></h2>\n<p>推送新写的博客内容到 GitHub</p>\n<p>在 blog 目录下找到 _config.yml 文件，在最后加上如下配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/liuilin/liuilin.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n<p>hexo d 进行博客部署，让 hexo 知道把博客 blog 部署在GitHub哪个位置</p>\n<p>最后安装 Git 部署插件，输入命令：npm install hexo-deployer-git --save，有了该插件则可以将 blog/public 的内容推送到 GitHub 上。</p>\n<p>这时，我们分别输入三条命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>现在输入 <strong>用户名</strong>.github.io 就可以在浏览器上访问了</p>\n<h2 id=\"绑定域名\">绑定域名<a title=\"#绑定域名\" href=\"#绑定域名\"></a></h2>\n<p>虽然在 Internet 上可以访问我们的网站，但我想使用自定义域名，这就需要绑定我们自己的域名。我阿里云购买了一个域名 liumulin.top</p>\n<p><a href=\"https://dc.console.aliyun.com/next/index?spm=5176.12818093.ProductAndService--ali--widget-home-product-recent.dre1.5adc16d0VsrhP4#/domain/list/all-domain\" target=\"_blank\">添加域名解析</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319154426014.png\" alt=\"image-20210319154426014\" class=\"φbs\"></p>\n<p>主机记录值为前缀</p>\n<p><code>@</code> 代表访问时不用前缀，直接输入 liumulin.top</p>\n<p><code>www</code> 代表访问时输入 www.liumulin.top</p>\n<p><code>blog</code> 代表访问时直接输入 blog.liumulin.top</p>\n<p>以上访问的全是自定义的记录值 <strong>用户名</strong>.github.io</p>\n<p>包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 <a href=\"http://xxxx.github.io\">http://xxxx.github.io</a> 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href=\"http://github.io\">http://github.io</a> 这里千万别弄错了。第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</p>\n<p>在 <strong>用户名</strong>.github.io 这个仓库中更改 GitHub Pages 配置的 Custom domain</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319160637600.png\" alt=\"image-20210319160637600\" class=\"φbs\"></p>\n<p>完成域名配置后，点击save保存。进入 <strong>本地博客</strong> 文件夹，接着进入 blog/source 目录下，将想要访问的地址放入 CNAME 中（如：echo “bloag.liumulin.top” &gt;&gt; CNAME）。然后在博客文件夹下执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>这时候打开浏览器在地址栏输入你的 <strong>自定义域名</strong> 将会直接进入你自己搭建的网站</p>\n<h2 id=\"个性化设置\">个性化设置<a title=\"#个性化设置\" href=\"#个性化设置\"></a></h2>\n<p>在博客站点配置文件 blog/_config.yml 修改基本的站点信息</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"comment\"># 网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Daniel&#x27;s</span> <span class=\"string\">Blog</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">hey</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">我的个人博客</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">Daniel</span> <span class=\"string\">Liu</span></span><br><span class=\"line\"><span class=\"attr\">avatart:</span> </span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-Hansya</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>\n<p>修改主题配置文件 blog/theme/ <code>下载的主题</code> /_config.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">reward:</span></span><br><span class=\"line\"> <span class=\"attr\">wechatpay:</span> <span class=\"string\">/WeChatPay.png</span></span><br><span class=\"line\"> <span class=\"attr\">alipay:</span> <span class=\"string\">/Alipay.jpg</span></span><br></pre></td></tr></table></figure>\n<p>博客打赏的微信、支付宝二维码图片，放在根目录 blog/source 文件夹下</p>\n<p>社交sns</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sns:</span></span><br><span class=\"line\">  <span class=\"comment\"># Built-in icons</span></span><br><span class=\"line\">  <span class=\"comment\"># `email`, `feed`, `github`, `twitter`, `facebook`, `instagram`, `tumblr`, `dribbble`, `telegram`</span></span><br><span class=\"line\">  <span class=\"comment\"># `youtube`, `hangouts`, `linkedin`, `pinterest`, `soundcloud`, `myspace`, `weibo`, `qq</span></span><br><span class=\"line\">  <span class=\"attr\">zhihu:</span> <span class=\"string\">https://www.zhihu.com/people/xiao-shi-yilang-82-6</span></span><br><span class=\"line\">  <span class=\"attr\">email:</span> <span class=\"string\">liu1142865396@gmail.com</span></span><br><span class=\"line\">  <span class=\"attr\">github:</span> <span class=\"string\">https://github.com/liuilin</span></span><br><span class=\"line\">  <span class=\"attr\">instagram:</span> <span class=\"string\">https://www.instagram.com/</span></span><br><span class=\"line\">  <span class=\"attr\">facebook:</span> <span class=\"string\">https://www.facebook.com/</span></span><br></pre></td></tr></table></figure>\n<p>自定义搜索 API</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">adapter:</span></span><br><span class=\"line\">  <span class=\"comment\"># 搜索结果分页大小，缺省值 `10`</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"comment\"># LOGO 图，可选</span></span><br><span class=\"line\">  <span class=\"attr\">logo:</span> <span class=\"string\">//cdn.worldvectorlogo.com/logos/algolia.svg</span></span><br><span class=\"line\">  <span class=\"comment\"># 请求对象：此配置项为构造完整的请求对象</span></span><br><span class=\"line\">  <span class=\"attr\">request:</span></span><br><span class=\"line\">    <span class=\"comment\"># 接口 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># url: https://&#123;APPLICATION_ID&#125;-dsn.algolia.net/1/indexes/&#123;INDEX&#125;/query</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">https://Z9I4Z08O59-dsn.algolia.net/1/indexes/blog/query</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># GET 或 POST，不区分大小写，缺省值 `GET`</span></span><br><span class=\"line\">    <span class=\"attr\">method:</span> <span class=\"string\">post</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 字符串差值 :query, :per_page, :current</span></span><br><span class=\"line\">    <span class=\"comment\"># 请求参数，格式视 Content-Type 而定，支持的字符串插值有：</span></span><br><span class=\"line\">    <span class=\"comment\"># 搜索的字符串 `:query`</span></span><br><span class=\"line\">    <span class=\"comment\"># 分页大小 `:per_page`</span></span><br><span class=\"line\">    <span class=\"comment\"># 当前页 `:current`</span></span><br><span class=\"line\">    <span class=\"attr\">body:</span> <span class=\"string\">&#x27;&#123;&quot;query&quot;:&quot;:query&quot;,&quot;hitsPerPage&quot;:&quot;:per_page&quot;,&quot;page&quot;:&quot;:current&quot;&#125;&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">headers:</span></span><br><span class=\"line\">      <span class=\"comment\"># X-Algolia-API-Key: &#123;API_KEY&#125;</span></span><br><span class=\"line\">      <span class=\"attr\">X-Algolia-API-Key:</span> <span class=\"string\">e259a4cda71e11ebd4de9203ae132994</span></span><br><span class=\"line\">      <span class=\"attr\">X-Algolia-Application-Id:</span> <span class=\"string\">Z9I4Z08O59</span></span><br><span class=\"line\">      <span class=\"attr\">Content-Type:</span> <span class=\"string\">application/json;</span> <span class=\"string\">charset=UTF-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 用于统一数据格式，例如有如下返回结果</span></span><br><span class=\"line\">  <span class=\"comment\"># &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">#   &quot;hits&quot;: [</span></span><br><span class=\"line\">  <span class=\"comment\">#     &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">#       &quot;title&quot;: &quot;Inside Theme Showcase&quot;,</span></span><br><span class=\"line\">  <span class=\"comment\">#       &quot;date&quot;: &quot;2018-09-05T06:28:24.000Z&quot;,</span></span><br><span class=\"line\">  <span class=\"comment\">#       &quot;_snippetResult&quot;: &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">#         &quot;title&quot;: &#123; &quot;value&quot;: &quot;&quot; &#125;,</span></span><br><span class=\"line\">  <span class=\"comment\">#         &quot;content&quot;: &#123; &quot;value&quot;: &quot;&quot; &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#       &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#     &#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#   ],</span></span><br><span class=\"line\">  <span class=\"comment\">#   &quot;nbHits&quot;: 10,</span></span><br><span class=\"line\">  <span class=\"comment\">#   &quot;page&quot;: 0,</span></span><br><span class=\"line\">  <span class=\"comment\">#   &quot;nbPages&quot;: 1,</span></span><br><span class=\"line\">  <span class=\"comment\">#   &quot;processingTimeMS&quot;: 5</span></span><br><span class=\"line\">  <span class=\"comment\"># &#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># 则设置   </span></span><br><span class=\"line\">  <span class=\"attr\">keys:</span></span><br><span class=\"line\">    <span class=\"attr\">data:</span> <span class=\"string\">hits</span></span><br><span class=\"line\">    <span class=\"attr\">current:</span> <span class=\"string\">page</span></span><br><span class=\"line\">    <span class=\"attr\">total:</span> <span class=\"string\">nbPage</span></span><br><span class=\"line\">    <span class=\"attr\">hits:</span> <span class=\"string\">nbHits</span></span><br><span class=\"line\">    <span class=\"attr\">time:</span> <span class=\"string\">processingTimeMS</span></span><br></pre></td></tr></table></figure>\n<p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。</p>\n<h2 id=\"faq\">FAQ<a title=\"#faq\" href=\"#faq\"></a></h2>\n<ol>\n<li>\n<p>hexo d 推送不上去</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access <span class=\"string\">&#x27;https://gitclone.com/github.com/liuilin/liuilin.github.io.git/&#x27;</span>: The requested URL returned error: 504</span><br><span class=\"line\">FATAL &#123;</span><br><span class=\"line\">  err: Error: Spawn failed</span><br><span class=\"line\">      at ChildProcess.&lt;anonymous&gt; (C:\\Users\\Daniel\\blog\\node_modules\\hexo-util\\lib\\spawn.js:51:21)</span><br><span class=\"line\">      at ChildProcess.emit (node:events:376:20)</span><br><span class=\"line\">      at ChildProcess.cp.emit (C:\\Users\\Daniel\\blog\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)</span><br><span class=\"line\">      at Process.ChildProcess._handle.onexit (node:internal/child_process:284:12) &#123;</span><br><span class=\"line\">    code: 128</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; Something<span class=\"string\">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure>\n<p>Git config 配置了以下加速 GitHub 代码下载配置，导致全局走了这个地址，取消掉此配置（将 v2ray 开启全局代理，Git config 配置https.proxy=socks5://127.0.0.1:10808）即可解决</p>\n<p>url.<a href=\"https://gitclone.com/github.com/.insteadof=https://github.com/\">https://gitclone.com/github.com/.insteadof=https://github.com/</a></p>\n<blockquote>\n<p>还有一种方案，hexo clean 之后重新 hexo d 部署</p>\n</blockquote>\n</li>\n<li>\n<p>Typora 上传图片失败</p>\n<p>方案：<a href=\"https://www.jianshu.com/p/3f1aa341dcbc\" target=\"_blank\">配置Typora+PicGo+gitee过程中个别问题的解决</a></p>\n</li>\n</ol>\n","prev":{"title":"GitHub 搭建个人博客","link":"2021/03/20/GitHub 搭建个人博客"},"next":{"title":"HTML","link":"2021/03/20/HTML"},"plink":"https://blog.liumulin.top/2021/03/20/GitHub+Hexo 搭建个人网站详细教程/","toc":[{"id":"github+hexo-搭建个人网站","title":"GitHub+Hexo 搭建个人网站","index":"1","children":[{"id":"什么是-hexo？","title":"什么是 Hexo？","index":"1.1"},{"id":"获得个人网站域名","title":"获得个人网站域名","index":"1.2"},{"id":"github-创建个人仓库","title":"GitHub 创建个人仓库","index":"1.3"},{"id":"安装-&amp;-配置-git","title":"安装 &amp; 配置 Git","index":"1.4"},{"id":"安装-node.js","title":"安装 Node.js","index":"1.5"},{"id":"安装-hexo","title":"安装 Hexo","index":"1.6"},{"id":"更换主题","title":"更换主题","index":"1.7"},{"id":"图床","title":"图床","index":"1.8"},{"id":"推送","title":"推送","index":"1.9"},{"id":"绑定域名","title":"绑定域名","index":"1.10"},{"id":"个性化设置","title":"个性化设置","index":"1.11"},{"id":"faq","title":"FAQ","index":"1.12"}]}],"reward":true,"copyright":{"custom":"不许转载😡！！！"}}