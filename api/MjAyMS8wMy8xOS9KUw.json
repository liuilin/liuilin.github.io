{"title":"JS","date":"2021-03-19T08:41:29.000Z","date_formatted":{"ll":"2021年3月19日","L":"2021/03/19","MM-DD":"03-19"},"link":"2021/03/19/JS","comments":true,"tags":["JS"],"updated":"2022-11-16T02:30:28.832Z","content":"<h1 id=\"js\">JS<a title=\"#js\" href=\"#js\"></a></h1>\n<h3 id=\"js-历史\">js 历史<a title=\"#js-历史\" href=\"#js-历史\"></a></h3>\n<p><img src=\"https://i.loli.net/2019/10/10/MBYG9uXqyQWPi1T.png\" alt=\"js 的历史.png\" class=\"φbs\"></p>\n<h3 id=\"分类\">分类<a title=\"#分类\" href=\"#分类\"></a></h3>\n<ul>\n<li>基本数据类型\n<ul>\n<li>number</li>\n<li>string</li>\n<li>boolean：a&amp;&amp;b，两个为真才为 true，a||b，两个为假才是 false</li>\n<li>symbol (ES6 新增)</li>\n<li>undefined</li>\n<li>null</li>\n</ul>\n</li>\n<li>应用类型\n<ul>\n<li>object</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"区别数据类型的-api\">区别数据类型的 api<a title=\"#区别数据类型的-api\" href=\"#区别数据类型的-api\"></a></h3>\n<ul>\n<li>\n<p>typeof: 不能判断 <code>null</code> 和 <code>函数</code></p>\n</li>\n<li>\n<p>instanceof</p>\n<ol>\n<li>\n<p>使用范围：只能判断引用类型</p>\n</li>\n<li>\n<p>原理：通过原型链</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     a <span class=\"keyword\">instanceof</span> b</span><br><span class=\"line\">     <span class=\"comment\">// 那么会这样比较</span></span><br><span class=\"line\">     <span class=\"comment\">//a.__proto__ === b.prototype ? 如果正确，返回 true</span></span><br><span class=\"line\">     <span class=\"comment\">//a.__proto__.__proto__ === b.prototype ? 返回 true</span></span><br><span class=\"line\">     <span class=\"comment\">// 直到 a.__proto__.__proto__ ...  === null 返回 false</span></span><br><span class=\"line\">     <span class=\"string\">``</span><span class=\"string\">`- Object.prototype.toString.call ([]) =&gt; 返回&quot;[object String]&quot;### 按值传递与按引用传递的区别，进阶版`</span><span class=\"string\">``</span>javascript</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;<span class=\"attr\">n</span>:<span class=\"number\">1</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a</span><br><span class=\"line\">a.x = a = &#123;<span class=\"attr\">n</span>: <span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (b)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (a)</span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`重点是`</span>a.x = a = &#123;<span class=\"attr\">n</span>: <span class=\"number\">2</span>&#125;<span class=\"string\">` 如何处理？</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">1. 从左向右执行</span></span><br><span class=\"line\"><span class=\"string\">2. 执行 a.x = a，就是让变量 a 指代的对象添加一个 x key, 并且让 x value 指向变量 a</span></span><br><span class=\"line\"><span class=\"string\">3. 执行 a = &#123;n: 2&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">### Falsy 值</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">1. 0</span></span><br><span class=\"line\"><span class=\"string\">2. NaN</span></span><br><span class=\"line\"><span class=\"string\">3. ‘ ’</span></span><br><span class=\"line\"><span class=\"string\">4. undfined</span></span><br><span class=\"line\"><span class=\"string\">5. null</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&gt; JS 惯例：如果不希望别人该你的东西，就把命名改为大写：Node.ELEMENT_NODE</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">### JS 实践</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">批量删除微博脚本</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">`</span><span class=\"string\">``</span>js</span><br><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">&#x27;script&#x27;</span>);</span><br><span class=\"line\">s.setAttribute(<span class=\"string\">&#x27;src&#x27;</span>, <span class=\"string\">&#x27;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&#x27;</span>)</span><br><span class=\"line\">s.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $(<span class=\"string\">&#x27;a[action-type=&quot;fl_menu&quot;]&#x27;</span>)[<span class=\"number\">0</span>].click();</span><br><span class=\"line\">            $(<span class=\"string\">&#x27;a[title=&quot;删除此条微博&quot;]&#x27;</span>)[<span class=\"number\">0</span>].click();</span><br><span class=\"line\">            $(<span class=\"string\">&#x27;a[action-type=&quot;ok&quot;]&#x27;</span>)[<span class=\"number\">0</span>].click();</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span> * i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.head.appendChild(s);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n","prev":{"title":"Linux 命令与 Vim","link":"2021/03/20/Linux 命令与 Vim"},"next":{"title":"vim-config","link":"2021/03/19/vim-config"},"plink":"https://blog.liumulin.top/2021/03/19/JS/","toc":[{"id":"js","title":"JS","index":"1","children":[{"id":"js-历史","title":"js 历史","index":"1.1"},{"id":"分类","title":"分类","index":"1.2"},{"id":"区别数据类型的-api","title":"区别数据类型的 api","index":"1.3"}]}],"reward":true,"copyright":{"custom":"不许转载😡！！！"}}