{"title":"IDEA 远程一键部署 SpringBoot 到 Docker","date":"2022-05-20T19:16:59.000Z","date_formatted":{"ll":"2022年5月20日","L":"2022/05/20","MM-DD":"05-20"},"link":"2022/05/20/IDEA-远程一键部署-SpringBoot-到-Docker","comments":true,"updated":"2022-11-16T02:30:28.832Z","content":"<h1 id=\"idea-远程一键部署-springboot-到-docker\">IDEA 远程一键部署 SpringBoot 到 Docker<a title=\"#idea-远程一键部署-springboot-到-docker\" href=\"#idea-远程一键部署-springboot-到-docker\"></a></h1>\n<h3 id=\"一、开发准备\">一、开发准备<a title=\"#一、开发准备\" href=\"#一、开发准备\"></a></h3>\n<ol>\n<li>\n<p>安装 Docker</p>\n<p><a href=\"https://linuxize.com/post/how-to-install-and-use-docker-on-ubuntu-20-04/\" target=\"_blank\">如何在 Ubuntu 20.04 上安装 Docker | Linux化</a></p>\n</li>\n<li>\n<p>配置开启 docker 远程连接端口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Centos</span></span><br><span class=\"line\">vim /usr/lib/systemd/system/docker.service</span><br><span class=\"line\"><span class=\"comment\"># Ubuntu</span></span><br><span class=\"line\">vim /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure>\n<p>在 ExecStart 最后加上 <code>-H tcp://0.0.0.0:2375</code></p>\n<blockquote>\n<p>如果是阿里云服务器，就在 <code>云服务器 ECS / 安全组</code> 中添加 TCP 端口 2375</p>\n</blockquote>\n</li>\n<li>\n<p>加载 docker 守护进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>重启 docker</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>测试是否开启成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://localhost:2375/version</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>或者查看端口是否打开</p>\n<p>ps aux | grep docker</p>\n</blockquote>\n</li>\n<li>\n<p>远程连接服务器 docker</p>\n<p>填写远程 docker 地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@latest/blog/img/image-20211004205038877.png\" alt=\"image-20211004205038877\" class=\"φbs\"></p>\n<p>Settings - Build, Execution, Deployment - Docker：新加 Docker，并配置 TCP socket 的 Engine API URL 为 <code>tcp://服务器 ip:2375</code></p>\n<p>连接成功后在 IDEA 主界面 services 的 dock 栏有新配置的 Docker 列表，双击连接后会列出远程的 docker 容器和镜像</p>\n</li>\n</ol>\n<h3 id=\"二、建项目\">二、建项目<a title=\"#二、建项目\" href=\"#二、建项目\"></a></h3>\n<ol>\n<li>\n<p>改 pom</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"line\">&lt;project xmlns=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"line\">         xsi:schemaLocation=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\">  &lt;parent&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.xkcoding&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-demo&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">  &lt;/parent&gt;</span><br><span class=\"line\">  &lt;groupId&gt;com.liumulin&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;demo-docker1&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">  &lt;name&gt;demo-docker1&lt;/name&gt;</span><br><span class=\"line\">  &lt;description&gt;demo-docker1&lt;/description&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;properties&gt;</span><br><span class=\"line\">    &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class=\"line\">  &lt;/properties&gt;</span><br><span class=\"line\">  &lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">      &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">  &lt;/dependencies&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;build&gt;</span><br><span class=\"line\">    &lt;plugins&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;groupId&gt;com.spotify&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class=\"line\">        &lt;configuration&gt;</span><br><span class=\"line\">          &lt;dockerDirectory&gt;src/main/docker&lt;/dockerDirectory&gt;</span><br><span class=\"line\">          &lt;resources&gt;</span><br><span class=\"line\">            &lt;resource&gt;</span><br><span class=\"line\">              &lt;targetPath&gt;/&lt;/targetPath&gt;</span><br><span class=\"line\">              &lt;!-- 打包到 target 目录，等于父 pom 文件的 &lt;directory&gt;$&#123;project.basedir&#125;/target&lt;/directory&gt;--&gt;</span><br><span class=\"line\">              &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;</span><br><span class=\"line\">              &lt;!-- 等于父 pom 文件的 &lt;finalName&gt;$&#123;project.artifactId&#125;-$&#123;project.version&#125;&lt;/finalName&gt;--&gt;</span><br><span class=\"line\">              &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;</span><br><span class=\"line\">            &lt;/resource&gt;</span><br><span class=\"line\">          &lt;/resources&gt;</span><br><span class=\"line\">        &lt;/configuration&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">      &lt;plugin&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;executions&gt;</span><br><span class=\"line\">          &lt;execution&gt;</span><br><span class=\"line\">            &lt;phase&gt;package&lt;/phase&gt;</span><br><span class=\"line\">            &lt;configuration&gt;</span><br><span class=\"line\">              &lt;tasks&gt;</span><br><span class=\"line\">                &lt;copy todir=<span class=\"string\">&quot;src/main/docker&quot;</span></span><br><span class=\"line\">                      file=<span class=\"string\">&quot;target/$&#123;project.artifactId&#125;-$&#123;project.version&#125;.$&#123;project.packaging&#125;&quot;</span>/&gt;</span><br><span class=\"line\">              &lt;/tasks&gt;</span><br><span class=\"line\">            &lt;/configuration&gt;</span><br><span class=\"line\">            &lt;goals&gt;</span><br><span class=\"line\">              &lt;goal&gt;run&lt;/goal&gt;</span><br><span class=\"line\">            &lt;/goals&gt;</span><br><span class=\"line\">          &lt;/execution&gt;</span><br><span class=\"line\">        &lt;/executions&gt;</span><br><span class=\"line\">      &lt;/plugin&gt;</span><br><span class=\"line\">    &lt;/plugins&gt;</span><br><span class=\"line\">  &lt;/build&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在 src/main 目录下创建 docker 目录，并创建 Dockerfile 文件</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> *.jar app.jar</span></span><br><span class=\"line\"><span class=\"keyword\">ENTRYPOINT</span><span class=\"bash\"> [<span class=\"string\">&quot;java&quot;</span>,<span class=\"string\">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>,<span class=\"string\">&quot;-jar&quot;</span>,<span class=\"string\">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>建 YAML</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">9090</span></span><br><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">/docker/logs</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>主启动类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.liumulin.demodocker1.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloController</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hello</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello,From Docker!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>新增 Dockerfile 配置</p>\n<p>IDEA - Edit Configurations…</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liuilin/image-bed@latest/blog/img/deploy%20Dockerfile.jpg\" alt=\"deploy Dockerfile\" class=\"φbs\"></p>\n<p>命令解释：</p>\n<p>Image tag：指定镜像名称和 tag，镜像名称为 docker-demo，tag 为 1.1</p>\n<p>Bind ports：绑定宿主机端口到容器内部端口。格式为 [宿主机端口]:[容器内部端口]</p>\n<p>Bind mounts：将宿主机目录挂到到容器内部目录中。格式为 [宿主机目录]:[容器内部目录]。这个 springboot 项目会将日志打印在容器 /home/developer/app/logs/ 目录下，将宿主机目录挂载到容器内部目录后，那么日志就会持久化容器外部的宿主机目录中。</p>\n</li>\n<li>\n<p>maven 打 jar 包</p>\n<p>mvn clean install</p>\n</li>\n<li>\n<p>运行 Dockerfile</p>\n<p>会先 pull 基础镜像（比如 openjdk），然后再打包镜像，并将镜像部署到远程 docker 运行</p>\n<p>成功后可以看到镜像名为 docker-demo:1.1，容器名为 docker-server</p>\n</li>\n<li>\n<p>查看日志</p>\n<p>IDEA 的 Docker 容器可以看到 Log 输出到了控制台</p>\n</li>\n</ol>\n","prev":{"title":"Ubuntu-开发环境配置","link":"2022/11/16/Ubuntu-开发环境配置"},"next":{"title":"优雅编写博客 - Typora+jsDelivr+Picgo+TinyPNG 实现图片压缩加速上传图床","link":"2022/05/18/优雅编写博客-Typora-jsDelivr-Picgo-TinyPNG-实现图片压缩加速上传图床"},"plink":"https://blog.liumulin.top/2022/05/20/IDEA-远程一键部署-SpringBoot-到-Docker/","toc":[{"id":"idea-远程一键部署-springboot-到-docker","title":"IDEA 远程一键部署 SpringBoot 到 Docker","index":"1","children":[{"id":"一、开发准备","title":"一、开发准备","index":"1.1"},{"id":"二、建项目","title":"二、建项目","index":"1.2"}]}],"reward":true,"copyright":{"custom":"不许转载😡！！！"}}