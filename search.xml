<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="2022/11/16/hello-world/"/>
      <url>2022/11/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank">GitHub</a>.</p><h2 id="quick-start">Quick Start<a title="#quick-start" href="#quick-start"></a></h2><h3 id="create-a-new-post">Create a new post<a title="#create-a-new-post" href="#create-a-new-post"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank">Writing</a></p><h3 id="run-server">Run server<a title="#run-server" href="#run-server"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank">Server</a></p><h3 id="generate-static-files">Generate static files<a title="#generate-static-files" href="#generate-static-files"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites<a title="#deploy-to-remote-sites" href="#deploy-to-remote-sites"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu-开发环境配置</title>
      <link href="2022/11/16/Ubuntu-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>2022/11/16/Ubuntu-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu-开发环境配置">Ubuntu 开发环境配置<a title="#ubuntu-开发环境配置" href="#ubuntu-开发环境配置"></a></h1><h2 id="dev-on-windows-with-wsl">Dev on Windows with WSL<a title="#dev-on-windows-with-wsl" href="#dev-on-windows-with-wsl"></a></h2><p><a href="https://dowww.spencerwoo.com/3-vscode/3-6-nodejs.html#%E5%AE%89%E8%A3%85-node-js" target="_blank">Node.js | Dev on Windows with WSL</a></p><h2 id="配置-shell-基础环境">配置 Shell 基础环境<a title="#配置-shell-基础环境" href="#配置-shell-基础环境"></a></h2><ol><li><p><a href="https://dowww.spencerwoo.com/2-cli/2-2-shell.html#%E6%9B%B4%E6%8D%A2%E8%BD%AF%E4%BB%B6%E6%BA%90%E9%95%9C%E5%83%8F" target="_blank">Shell 环境，更换软件镜像源| Dev on Windows with WSL</a></p></li><li><p><a href="https://jiayaoo3o.github.io/2020/06/23/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1WSL2%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/" target="_blank">记录一次 WSL2 的网络代理配置 | jiayaoO3O’s Blog</a></p><blockquote><p>v2ray 要开启允许局域网连接</p></blockquote></li><li><p>安装 zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh -y</span><br></pre></td></tr></table></figure><blockquote><p>echo $0 # 查看当前 shell 类型</p></blockquote></li><li><p>install oh-my-zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL -x socks5://$(ip route | grep default | awk &#x27;&#123;print $3&#125;&#x27;)</span>:10808 https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>TODO 把 GitHub 上的 .zshrc 文件下载下来覆盖</p><p><strong>然后一定要新开窗口，不然配置不生效</strong></p></li></ol><h2 id="安装-mackup-备份还原-dotfiles-配置">安装 mackup 备份还原 dotfiles 配置<a title="#安装-mackup-备份还原-dotfiles-配置" href="#安装-mackup-备份还原-dotfiles-配置"></a></h2><p><a href="https://github.com/lra/mackup" target="_blank">lra/mackup: Keep your application settings in sync (OS X/Linux)</a></p><p>创建用户：sudo adduser xxx</p><p><a href="https://zhuanlan.zhihu.com/p/58690128" target="_blank">curl 设置代理 - 知乎</a></p><ol><li><p>Ubuntu-22.04 本身就自带 Python3(3.10.4) 最新版，无需安装</p></li><li><p><a href="https://pip.pypa.io/en/stable/installation/" target="_blank">Installation - pip documentation v22.0.4 安装最新版 pip</a></p><p>采用 <code>get-pip.py</code> 脚本的方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># run the following command to download the get-pip.py file，下面 $(ip route | grep default | awk &#x27;&#123;print $3&#125;&#x27;) 获取 WSL 动态 IP，用于 v2ray 代理</span></span><br><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line"><span class="comment"># To install PIP type in the following</span></span><br><span class="line">python3 get-pip.py</span><br><span class="line"><span class="comment"># WARNING: The script wheel is installed in &#x27;~/.local/bin&#x27; which is not on PATH.</span></span><br><span class="line"><span class="comment"># 此时 pip 没有环境变量，所以命令未生效。使用 add alias 来调用</span></span><br><span class="line"><span class="built_in">alias</span> pip=<span class="string">&#x27;~/.local/bin/pip3&#x27;</span></span><br><span class="line">pip -V</span><br></pre></td></tr></table></figure><p>如果是 zsh 的话（想要一直生效的话），还需要把 alias 配置到 .zshrc 里面</p><blockquote><p>note: 不要用 Ubuntu 自带的 apt 方式安装，因为 Python3 是最新版而 apt 安装出来的较低版本，会导致与 Python 最新版那边不兼容，从而 pip 安装软件时会报错</p><p><a href="https://stackoverflow.com/questions/70431655/importerror-cannot-import-name-html5lib-from-pip-vendor-usr-lib-python3" target="_blank">python - ImportError: cannot import name ‘html5lib’ from ‘pip._vendor’ (/usr/lib/python3/dist-packages/pip/_vendor/<strong>init</strong>.py) - Stack Overflow</a></p><p><a href="https://stackoverflow.com/questions/69503329/pip-is-not-working-for-python-3-10-on-ubuntu/69527217#69527217" target="_blank">Pip is not working for Python 3.10 on Ubuntu - Stack Overflow</a></p><p>This is likely caused by a too old system <code>pip</code> version.</p><p>Install the latest with:<br><code>curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10</code></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-programming-environment-on-ubuntu-22-04" target="_blank">How To Install Python 3 and Set Up a Programming Environment on Ubuntu 22.04 | DigitalOcean</a></p></blockquote></li><li><p>install mackup with pip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install Mackup with PIP</span></span><br><span class="line">pip install --upgrade mackup</span><br><span class="line"><span class="built_in">alias</span> mackup=<span class="string">&#x27;~/.local/bin/mackup&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Launch it and back up your files</span></span><br><span class="line">mackup backup</span><br></pre></td></tr></table></figure></li><li><p>下载 mackup 配置文件并更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代理下载文件到当前目录</span></span><br><span class="line">curl -x socks5://WSL 代理 IP:10808 https://github.com/liuilin/dotfiles/raw/master/.mackup.cfg -OL</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">sudo vim .mackup.cfg</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://stackoverflow.com/questions/4604663/download-single-files-from-github" target="_blank">git - Download single files from GitHub - Stack Overflow</a></p><p>You can use <code>curl</code> this way:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -OL https://raw.githubusercontent.com/&lt;username&gt;/&lt;repo-name&gt;/&lt;branch-name&gt;/path/to/file</span><br></pre></td></tr></table></figure><p><code>O</code> means that curl downloads the content<br><code>L</code> means that curl follows the redirection</p></blockquote></li><li><p>恢复所有备份的配置</p><p><a href="https://drive.google.com/drive/folders/1LrGZMV4aQYLIGTwoHodb3eJ1GE3JbqJV">https://drive.google.com/drive/folders/1LrGZMV4aQYLIGTwoHodb3eJ1GE3JbqJV</a></p><p>修改当前用户的全局设置，使 mackup 环境变量生效</p><p><strong>不要恢复 .bash_logout 文件！！！否则会报错</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=/home/daniel/.<span class="built_in">local</span>/bin/mackup:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">source</span> .bashrc</span><br><span class="line">sudo vim .mackup.cfg</span><br><span class="line"><span class="comment"># 修改存储路径 path = /mnt/c/Users/liuqiang/</span></span><br><span class="line"><span class="comment"># TODO 考虑安装完 zsh 再 mackup restore 恢复配置，不然会被覆盖</span></span><br><span class="line">mackup restore</span><br></pre></td></tr></table></figure></li><li><p>Google Drive 自动同步文件夹 /mnt/c/Users/Daniel/dotfiles</p></li><li><p>todo 运行代理加速</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行 .zshrc 里面配置的命令来自动配置全局代理</span></span><br><span class="line">proxy</span><br><span class="line"><span class="comment"># 查看 http.https://github.com.proxy 配置是否生效，q：退出交互界面</span></span><br><span class="line">git config -l</span><br></pre></td></tr></table></figure><p>配置 mackup 环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.zshrc</span><br><span class="line"><span class="built_in">export</span> PATH=/home/daniel/.<span class="built_in">local</span>/bin/mackup:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p><a href="https://spencerwoo.com/blog/how-i-manage-my-dotfiles" target="_blank">Yadm：我是如何同步并管理我的 Dotfiles 的？ - Spencer’s Blog</a></p></blockquote><h3 id="安装-oh-my-zsh-插件">安装 oh-my-zsh 插件<a title="#安装-oh-my-zsh-插件" href="#安装-oh-my-zsh-插件"></a></h3><ol><li><p>插件 autojump：<a href="https://github.com/wting/autojump#" target="_blank">wting/autojump: A cd command that learns - easily navigate directories from the command line</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install autojump</span><br></pre></td></tr></table></figure></li><li><p>插件 zsh-autosuggestions：<a href="https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md#oh-my-zsh" target="_blank">zsh-autosuggestions/INSTALL.md at master · zsh-users/zsh-autosuggestions</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure></li><li><p>插件 zsh-syntax-highlighting：<a href="https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md" target="_blank">zsh-syntax-highlighting/INSTALL.md at master · zsh-users/zsh-syntax-highlighting</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure></li><li><p>安装主体模板：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br></pre></td></tr></table></figure><ul><li><a href="https://www.nerdfonts.com/font-downloads" target="_blank">Windows 安装 Nerd Font（Sauce Code Pro Nerd Font）字体</a>：解压到 C:\Windows\Fonts 路径下</li><li>主体配置：One half dark</li><li>背景不透明度：66</li></ul><blockquote><p>字体显示问题（NERD FONT）：<a href="https://github.com/romkatv/nerd-fonts#option-5-clone-the-repo" target="_blank">romkatv/nerd-fonts: Iconic font aggregator, collection, &amp; patcher. 3,600+ icons, 50+ patched fonts: Hack, Source Code Pro, more. Glyph collections: Font Awesome, Material Design Icons, Octicons, &amp; more</a></p><p>静默覆盖文件：yes | cp -rf xxx xxx</p></blockquote></li><li><p>重新打开一个会话窗口 Restart zsh (such as by opening a new instance of your terminal emulator).</p></li></ol><h3 id="配置-node-环境">配置 Node 环境<a title="#配置-node-环境" href="#配置-node-环境"></a></h3><h3 id="配置-java-环境">配置 Java 环境<a title="#配置-java-环境" href="#配置-java-环境"></a></h3><ol><li><p>安装 openjdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openjdk-11-jdk</span><br></pre></td></tr></table></figure><blockquote><p>安装 jdk 报错的话</p><p>The following packages have unmet dependencies:<br>debianutils : Breaks: x11-common (&lt; 1:7.7+23~) but 1:7.7+19ubuntu14 is to be installed<br>libglx-mesa0 : Depends: libx11-xcb1 (&gt;= 2:1.6.9) but it is not installable<br>E: Error, pkgProblemResolver::Resolve generated breaks, this may be caused by held packages.</p><p>解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libx11-xcb1</span><br><span class="line">sudo apt install libglx-mesa0</span><br></pre></td></tr></table></figure><p>还是提示</p><p>The following packages have unmet dependencies:<br>debianutils : Breaks: x11-common (&lt; 1:7.7+23~) but 1:7.7+19ubuntu14 is to be installed<br>E: Error, pkgProblemResolver::Resolve generated breaks, this may be caused by held packages.</p><p>使用一个强大的包管理工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install aptitude</span><br><span class="line"><span class="comment"># debianutils 版本太新了，根据提示选 n 不保留当前版本，把 debianutils 降级</span></span><br><span class="line">$ sudo aptitude install x11-common</span><br><span class="line"></span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  x11-common</span><br><span class="line">0 packages upgraded, 1 newly installed, 0 to remove and 0 not upgraded.</span><br><span class="line">Need to get 22.3 kB of archives. After unpacking 321 kB will be used.</span><br><span class="line">The following packages have unmet dependencies:</span><br><span class="line"> debianutils : Breaks: x11-common (&lt; 1:7.7+23~) but 1:7.7+19ubuntu14 is to be installed</span><br><span class="line">The following actions will resolve these dependencies:</span><br><span class="line"></span><br><span class="line">     Keep the following packages at their current version:</span><br><span class="line">1)     x11-common [Not Installed]</span><br><span class="line"></span><br><span class="line">Accept this solution? [Y/n/q/?] n</span><br><span class="line">The following actions will resolve these dependencies:</span><br><span class="line"></span><br><span class="line">     Downgrade the following packages:</span><br><span class="line">1)     debianutils [5.5-1ubuntu2 (now) -&gt; 4.9.1 (focal)]</span><br><span class="line"></span><br><span class="line">Accept this solution? [Y/n/q/?] Y</span><br><span class="line">The following packages will be DOWNGRADED:</span><br><span class="line">  debianutils</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  x11-common</span><br><span class="line">0 packages upgraded, 1 newly installed, 1 downgraded, 0 to remove and 0 not upgraded.</span><br><span class="line">Need to get 108 kB of archives. After unpacking 307 kB will be used.</span><br><span class="line">Do you want to <span class="built_in">continue</span>? [Y/n/?] Y</span><br><span class="line">Get: 1 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal/main amd64 debianutils amd64 4.9.1 [85.8 kB]</span><br><span class="line">Get: 2 https://mirrors.tuna.tsinghua.edu.cn/ubuntu focal/main amd64 x11-common all 1:7.7+19ubuntu14 [22.3 kB]</span><br><span class="line">Fetched 108 kB <span class="keyword">in</span> 1s (94.5 kB/s)</span><br><span class="line">dpkg: warning: downgrading debianutils from 5.5-1ubuntu2 to 4.9.1</span><br><span class="line">(Reading database ... 36541 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../debianutils_4.9.1_amd64.deb ...</span><br><span class="line">Unpacking debianutils (4.9.1) over (5.5-1ubuntu2) ...</span><br><span class="line">Setting up debianutils (4.9.1) ...</span><br><span class="line">Selecting previously unselected package x11-common.</span><br><span class="line">(Reading database ... 36537 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../x11-common_1%3a7.7+19ubuntu14_all.deb ...</span><br><span class="line">dpkg-query: no packages found matching nux-tools</span><br><span class="line">Unpacking x11-common (1:7.7+19ubuntu14) ...</span><br><span class="line">Setting up x11-common (1:7.7+19ubuntu14) ...</span><br><span class="line">update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults</span><br><span class="line">invoke-rc.d: could not determine current runlevel</span><br><span class="line">Processing triggers <span class="keyword">for</span> man-db (2.10.2-1) ...</span><br><span class="line">Scanning processes...</span><br><span class="line">Scanning processor microcode...</span><br><span class="line">Scanning linux images...</span><br><span class="line"></span><br><span class="line">Failed to retrieve available kernel versions.</span><br><span class="line"></span><br><span class="line">Failed to check <span class="keyword">for</span> processor microcode upgrades.</span><br><span class="line"></span><br><span class="line">No services need to be restarted.</span><br><span class="line"></span><br><span class="line">No containers need to be restarted.</span><br><span class="line"></span><br><span class="line">No user sessions are running outdated binaries.</span><br><span class="line"></span><br><span class="line">No VM guests are running outdated hypervisor (qemu) binaries on this host.</span><br></pre></td></tr></table></figure></blockquote></li><li><p>安装 Maven</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install maven -Y</span><br><span class="line">mkdir ~/.m2 &amp;&amp; cp -r /usr/share/maven/conf/settings.xml ~/.m2/settings.xml</span><br></pre></td></tr></table></figure><p>修改 settings 的中央仓库：<a href="https://developer.aliyun.com/mvn/guide" target="_blank">阿里云云效仓库服务</a></p></li></ol><h2 id="question">Question<a title="#question" href="#question"></a></h2><ol><li><p>查看当前 Shell 环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$0</span></span><br></pre></td></tr></table></figure></li><li><p><code>history | grep &quot;git clone&quot;</code>这个命令就能找到近期 clone 了哪些库，省却了写一堆代码的功夫。</p></li><li><p>给 root 用户设置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br><span class="line">su root <span class="comment"># 切换到 root 用户</span></span><br><span class="line">usermod -aG sudo xxx <span class="comment"># 给 xxx 用户赋予 root 权限</span></span><br></pre></td></tr></table></figure></li><li><p>获取 WSL 动态 IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 WSL IP，用于下面临时 v2ray 代理</span></span><br><span class="line">ip route | grep default | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>示例：curl -x socks5://$(ip route | grep default | awk ‘{print $3}’):10808 <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a> -o <a href="http://get-pip.py">get-pip.py</a></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IDEA 远程一键部署 SpringBoot 到 Docker</title>
      <link href="2022/05/21/IDEA-%E8%BF%9C%E7%A8%8B%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-SpringBoot-%E5%88%B0-Docker/"/>
      <url>2022/05/21/IDEA-%E8%BF%9C%E7%A8%8B%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-SpringBoot-%E5%88%B0-Docker/</url>
      
        <content type="html"><![CDATA[<h1 id="idea-远程一键部署-springboot-到-docker">IDEA 远程一键部署 SpringBoot 到 Docker<a title="#idea-远程一键部署-springboot-到-docker" href="#idea-远程一键部署-springboot-到-docker"></a></h1><h3 id="一、开发准备">一、开发准备<a title="#一、开发准备" href="#一、开发准备"></a></h3><ol><li><p>安装 Docker</p><p><a href="https://linuxize.com/post/how-to-install-and-use-docker-on-ubuntu-20-04/" target="_blank">如何在 Ubuntu 20.04 上安装 Docker | Linux化</a></p></li><li><p>配置开启 docker 远程连接端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Centos</span></span><br><span class="line">vim /usr/lib/systemd/system/docker.service</span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">vim /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure><p>在 ExecStart 最后加上 <code>-H tcp://0.0.0.0:2375</code></p><blockquote><p>如果是阿里云服务器，就在 <code>云服务器 ECS / 安全组</code> 中添加 TCP 端口 2375</p></blockquote></li><li><p>加载 docker 守护进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></li><li><p>重启 docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li><li><p>测试是否开启成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:2375/version</span><br></pre></td></tr></table></figure><blockquote><p>或者查看端口是否打开</p><p>ps aux | grep docker</p></blockquote></li><li><p>远程连接服务器 docker</p><p>填写远程 docker 地址</p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@latest/blog/img/image-20211004205038877.png" alt="image-20211004205038877" class="φbs"></p><p>Settings - Build, Execution, Deployment - Docker：新加 Docker，并配置 TCP socket 的 Engine API URL 为 <code>tcp://服务器 ip:2375</code></p><p>连接成功后在 IDEA 主界面 services 的 dock 栏有新配置的 Docker 列表，双击连接后会列出远程的 docker 容器和镜像</p></li></ol><h3 id="二、建项目">二、建项目<a title="#二、建项目" href="#二、建项目"></a></h3><ol><li><p>改 pom</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">  &lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;com.xkcoding&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-demo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;/parent&gt;</span><br><span class="line">  &lt;groupId&gt;com.liumulin&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;demo-docker1&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">  &lt;name&gt;demo-docker1&lt;/name&gt;</span><br><span class="line">  &lt;description&gt;demo-docker1&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">  &lt;/properties&gt;</span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">  &lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;com.spotify&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0.0&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;dockerDirectory&gt;src/main/docker&lt;/dockerDirectory&gt;</span><br><span class="line">          &lt;resources&gt;</span><br><span class="line">            &lt;resource&gt;</span><br><span class="line">              &lt;targetPath&gt;/&lt;/targetPath&gt;</span><br><span class="line">              &lt;!-- 打包到 target 目录，等于父 pom 文件的 &lt;directory&gt;$&#123;project.basedir&#125;/target&lt;/directory&gt;--&gt;</span><br><span class="line">              &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;</span><br><span class="line">              &lt;!-- 等于父 pom 文件的 &lt;finalName&gt;$&#123;project.artifactId&#125;-$&#123;project.version&#125;&lt;/finalName&gt;--&gt;</span><br><span class="line">              &lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;</span><br><span class="line">            &lt;/resource&gt;</span><br><span class="line">          &lt;/resources&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;executions&gt;</span><br><span class="line">          &lt;execution&gt;</span><br><span class="line">            &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">              &lt;tasks&gt;</span><br><span class="line">                &lt;copy todir=<span class="string">&quot;src/main/docker&quot;</span></span><br><span class="line">                      file=<span class="string">&quot;target/$&#123;project.artifactId&#125;-$&#123;project.version&#125;.$&#123;project.packaging&#125;&quot;</span>/&gt;</span><br><span class="line">              &lt;/tasks&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;run&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">          &lt;/execution&gt;</span><br><span class="line">        &lt;/executions&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">  &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>在 src/main 目录下创建 docker 目录，并创建 Dockerfile 文件</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>-jdk-alpine</span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> *.jar app.jar</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure></li><li><p>建 YAML</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/docker/logs</span></span><br></pre></td></tr></table></figure></li><li><p>主启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liumulin.demodocker1.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello,From Docker!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新增 Dockerfile 配置</p><p>IDEA - Edit Configurations…</p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@latest/blog/img/deploy%20Dockerfile.jpg" alt="deploy Dockerfile" class="φbs"></p><p>命令解释：</p><p>Image tag：指定镜像名称和 tag，镜像名称为 docker-demo，tag 为 1.1</p><p>Bind ports：绑定宿主机端口到容器内部端口。格式为 [宿主机端口]:[容器内部端口]</p><p>Bind mounts：将宿主机目录挂到到容器内部目录中。格式为 [宿主机目录]:[容器内部目录]。这个 springboot 项目会将日志打印在容器 /home/developer/app/logs/ 目录下，将宿主机目录挂载到容器内部目录后，那么日志就会持久化容器外部的宿主机目录中。</p></li><li><p>maven 打 jar 包</p><p>mvn clean install</p></li><li><p>运行 Dockerfile</p><p>会先 pull 基础镜像（比如 openjdk），然后再打包镜像，并将镜像部署到远程 docker 运行</p><p>成功后可以看到镜像名为 docker-demo:1.1，容器名为 docker-server</p></li><li><p>查看日志</p><p>IDEA 的 Docker 容器可以看到 Log 输出到了控制台</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>优雅编写博客 - Typora+jsDelivr+Picgo+TinyPNG 实现图片压缩加速上传图床</title>
      <link href="2022/05/18/%E4%BC%98%E9%9B%85%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2-Typora-jsDelivr-Picgo-TinyPNG-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E5%8A%A0%E9%80%9F%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%BA%8A/"/>
      <url>2022/05/18/%E4%BC%98%E9%9B%85%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2-Typora-jsDelivr-Picgo-TinyPNG-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E5%8A%A0%E9%80%9F%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<p>scoop install node<br>登录 tinypng 获取 apikey<br>在 PicGo 中下载插件 picgo-plugin-compress，在里面填入 apikey</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="2022/05/18/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>2022/05/18/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="设计模式">设计模式<a title="#设计模式" href="#设计模式"></a></h1><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@latest/blog/img/design-pattern-stories.jpeg" alt="design-pattern-stories" class="φbs"></p><h2 id="创建型">创建型<a title="#创建型" href="#创建型"></a></h2><h3 id="1.-工厂方法">1. 工厂方法<a title="#1.-工厂方法" href="#1.-工厂方法"></a></h3><p>定义：定义一个创建对象的接口，但让实现这个接口的类来决定实例化哪个类， 工厂方法让类的实例化推迟到子类进行</p><blockquote><p>如果都是未知的方法，就用接口定义</p><p>如果某些行为或属性是已知的（已知的实现），那就要抽象方法</p></blockquote><h3 id="2.-抽象工厂">2. 抽象工厂<a title="#2.-抽象工厂" href="#2.-抽象工厂"></a></h3><p>定义：1. 抽象工厂模式提供一个创建一系列相关或相互依赖对象的接口。2. 无需指定他们具体的类</p><p>适用场景：</p><ul><li>客户端（应用层）不依赖于产品类实例如何被创建，实现等细节</li><li>强调一系列相关的产品对象（属于同一产品族）一起使用创建对象需要大量重复代码</li><li>提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现</li></ul><p>优点：</p><ul><li>具体产品在应用层代码隔离，无需关心创建细节</li><li>将一个系列的产品族统一到一起创建</li></ul><p>缺点：</p><ul><li>规定了所有可能被创建的产品集合，产品族中扩展新的产品困难，需要修改抽象工厂的接口</li><li>增加了系统的抽象性和理解难度</li></ul><blockquote><p>解决产品族的问题（美的热水器、冰箱、洗衣机为同一产品族）</p></blockquote><h3 id="3.">3.<a title="#3." href="#3."></a></h3><h2 id="结构性">结构性<a title="#结构性" href="#结构性"></a></h2><p>代理模式：MyBatis 代理</p><h2 id="行为型">行为型<a title="#行为型" href="#行为型"></a></h2><p>策略模式：模拟营销折扣，包括折扣券</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bad interpreter: /usr/bin/python3:  no such file or directory 错误解决 </title>
      <link href="2021/06/10/bad-interpreter-usr-bin-python3-no-such-file-or-directory-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
      <url>2021/06/10/bad-interpreter-usr-bin-python3-no-such-file-or-directory-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="分析">分析<a title="#分析" href="#分析"></a></h2><p>查阅资料后发现原因是 python 的符号链接 symbolic links 问题。我自己安装 / 卸载 python 后把环境搞出问题了</p><h2 id="解决">解决<a title="#解决" href="#解决"></a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ll /usr/bin/python*</span><br><span class="line"></span><br><span class="line">sudo unlink /usr/bin/python3</span><br><span class="line"></span><br><span class="line">sudo ln -s /usr/bin/python3.8（whereis python 安装目录） /usr/bin/python3</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 安装 chromedriver</title>
      <link href="2021/06/10/Ubuntu-%E5%AE%89%E8%A3%85-chromedriver/"/>
      <url>2021/06/10/Ubuntu-%E5%AE%89%E8%A3%85-chromedriver/</url>
      
        <content type="html"><![CDATA[<h3 id="download-chromedriver">Download Chromedriver<a title="#download-chromedriver" href="#download-chromedriver"></a></h3><p>This should download the latest version of Chromedriver, and extract it to the correct location, with the correct permissions.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">version&#x3D;$(curl -s &quot;https:&#x2F;&#x2F;chromedriver.storage.googleapis.com&#x2F;LATEST_RELEASE&quot;)</span><br><span class="line">wget -qP &#x2F;tmp&#x2F; &quot;https:&#x2F;&#x2F;chromedriver.storage.googleapis.com&#x2F;$&#123;version&#125;&#x2F;chromedriver_linux64.zip&quot;</span><br><span class="line">sudo unzip -o &#x2F;tmp&#x2F;chromedriver_linux64.zip -d &#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure><p>The permissions should be <code>755</code> by default, but if they aren’t, you can run:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 755 &#x2F;usr&#x2F;bin&#x2F;chromedriver</span><br></pre></td></tr></table></figure><p>If you want a specific version, see the <a href="https://chromedriver.storage.googleapis.com/index.html" target="_blank">index page</a>, or the <a href="https://chromedriver.chromium.org/" target="_blank">website</a>.<br>You can also edit the above commands to use <code>LATEST_RELEASE_80</code>, if you wanted version 80, for example.</p><hr><h3 id="update-to-latest-chrome">Update to latest Chrome<a title="#update-to-latest-chrome" href="#update-to-latest-chrome"></a></h3><p>If you don’t already have the latest version of Google Chrome, you may need to update it with:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get --only-upgrade install google-chrome-stable</span><br></pre></td></tr></table></figure><h3 id="参考来源">参考来源<a title="#参考来源" href="#参考来源"></a></h3><p><a href="https://www.thenerdlife.com/blog/how-to-install-chromedriver-on-ubuntu/" target="_blank">How To Install Chromedriver on Ubuntu 20.04 without snap | TheNerdLife Blog: </a><br><a href="https://stackoverflow.com/questions/48649230/how-to-update-chromedriver-on-ubuntu/50117805" target="_blank">command line - How to update Chromedriver on Ubuntu? - Stack Overflow: </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS</title>
      <link href="2021/03/20/CSS/"/>
      <url>2021/03/20/CSS/</url>
      
        <content type="html"><![CDATA[<h3 id="css-学习资源">CSS 学习资源<a title="#css-学习资源" href="#css-学习资源"></a></h3><p>最好的调试方式：加 border</p><blockquote><p>想知道自己 CSS 写的好不好就去 dribble 去找一个来实现</p></blockquote><ol><li>Google: 关键词 MDN</li><li><a href="https://css-tricks.com/" target="_blank">CSS Tricks</a></li><li><a href="https://www.google.com/search?q=%E9%98%AE%E4%B8%80%E5%B3%B0+css" target="_blank">Google: 阮一峰 css</a></li><li><a href="http://www.zhangxinxu.com/wordpress/category/css/page/25/" target="_blank">张鑫旭的 240 多篇 CSS 博客</a></li><li><a href="https://tympanus.net/codrops/category/playground/" target="_blank">Codrops 炫酷 CSS 效果</a></li><li><a href="http://www.ituring.com.cn/book/1695" target="_blank">CSS 揭秘</a></li><li><a href="http://cndevdocs.com/" target="_blank">CSS 2.1 中文 spec</a></li><li><a href="http://adamschwartz.co/magic-of-css/" target="_blank">Magic of CSS</a> 免费在线书</li></ol><blockquote><p>建议：中文学习资源只看大 V 的（毕竟他们要维护形象不能瞎写），英文资源看 CSS Tricks、MDN 和 Codrops。书的话作用不大，最权威的书其实是文档。</p></blockquote><ul><li>如果你想快速上手，就先写小 demo 再学理论。</li><li>如果你想一鸣惊人，就仔细看 CSS 规范文档。</li></ul><h3 id="知识点">知识点<a title="#知识点" href="#知识点"></a></h3><ol><li><p>如何做横向布局（左右 float + clearfix）</p></li><li><p>如何取色、量尺寸、预览字体（Word）</p></li><li><p>如何使用开发者工具查看样式、继承样式</p></li><li><p>四种引入 CSS 的方式：style 属性、style 标签、css link、css import</p></li><li><p>常见 CSS 属性：</p></li></ol><ul><li>font-family font-size font-weight</li><li>ul、body 的默认 margin 和 padding</li><li>color、background-color、margin、padding</li><li>line-height</li></ul><h3 id="周边工具">周边工具<a title="#周边工具" href="#周边工具"></a></h3><ul><li>LESS CSS<br>一种简化、功能更多的 CSS 语言 <a href="https://www.google.com/search?q=less+css+%E4%B8%AD%E6%96%87" target="_blank">中文官网</a> <a href="https://www.google.com/search?q=less+css" target="_blank">英文官网</a></li><li>SASS<br>一种简化、功能更多的 CSS 语言（请自行搜索中英文官网）</li><li>PostCSS<br>一种 CSS 处理程序</li></ul><p>我的建议是，先不要看周边工具，学好最朴素的 CSS，然后升级就很容易了。</p><h3 id="布局与定位">布局与定位<a title="#布局与定位" href="#布局与定位"></a></h3><blockquote><p>IDE live template：.clearfix 清除浮动</p></blockquote><ul><li><p>块级元素高度：由内部 <strong>文档流</strong> 高度的总和决定的</p></li><li><p>文档流：内联元素从左往右，块级元素从上到下另起一行</p></li><li><p>内联元素高度（基本不可测）：由字体决定，浏览器会读取字体设计的建议行高</p><blockquote><p>内联元素不接受宽高（宽度由元素决定），把它转为块元素（display:inline-block;）</p><p>用 display:inline-block; 转为内联元素后，需要加入 vertical-align：top 来修复尾部 bug</p><p>转为内联元素后居中方式：text-align : center;</p><p>方应杭 css line height</p></blockquote></li><li><p>宽高能不写就不写，容易有 bug</p><blockquote><p>span 里面用 padding:4px 16px;line-height:22px; 来替换 width:70px; height:29px; line-height:29px; text-align: center;</p></blockquote></li><li><p>绝对定位是脱离文档流的，那它们就不知道容器有多高（所以要给个高度）</p></li><li><p>推荐优先使用 padding，可以配合 border-box</p></li><li><p>字体之类的就看淘宝、京东这类大网站，天天有人看不会出错</p></li></ul><h3 id="在线工具">在线工具<a title="#在线工具" href="#在线工具"></a></h3><p>css3 linear gradient generator：渐变</p><p>css animation generator：动画</p><p>css shadow generator：阴影</p><blockquote><p>出现问题之后看不出来可以去 mdn 找正确的例子，在上面的基础上修改</p></blockquote><p>web page free psd：设计素材</p><h3 id="tricks">Tricks<a title="#tricks" href="#tricks"></a></h3><ol><li>父元素高度有了，子元素高度可写 100%（父变子变）</li><li>css 层级最好不要超过 5 个，超了就考虑重新起一个名字</li><li>命名：bar-inner，<kbd>-</kbd> 只用来做结构（表示内部的 bar），不作为起名字</li><li>写 CSS 要从内到外，从上到下</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOM</title>
      <link href="2021/03/20/DOM/"/>
      <url>2021/03/20/DOM/</url>
      
        <content type="html"><![CDATA[<ol><li><p>DOM 是一棵树（tree）</p></li><li><p>树上有 Node</p><p>Node 分为 Document（html）、Element（元素）和 Text（文本），以及其他不重要的。</p></li><li><p>Node 的接口</p><p>i. 属性 childNodes,firstChild,innerText,lastChild,nextSibling,nodeName,nodeType,nodeValue,outerText,ownerDocument,parentElement,parentNode,previousSibling,textContent</p><p>如果记不住就背下以下单词：</p><ul><li><p>child /children/parent</p></li><li><p>node</p></li><li><p>first /last</p></li><li><p>next /previous</p></li><li><p>sibling /siblings</p></li><li><p>type</p></li><li><p>value /text/content</p></li><li><p>inner /outer</p></li><li><p>element</p></li></ul><p>然后互相组合</p><p>ii. 方法（如果一个属性是函数，那么这个属性就也叫做方法；换言之，方法是函数属性）</p><ul><li>appendChild ()</li><li>cloneNode ()</li><li>contains ()</li><li>hasChildNodes ()</li><li>insertBefore ()</li><li>isEqualNode ()</li><li>isSameNode ()</li><li>removeChild ()</li><li>replaceChild ()</li><li>normalize () // 常规化&gt; 搞清楚英文单词的意思就知道用法</li></ul><blockquote><p>如果发现知道英文后依然不明白用法，看 MDN 的例子即可，如 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize" target="_blank">normalize</a></p><p>DOM APi 无外乎「增删改查」</p></blockquote></li><li><p>Document 接口</p><p>属性</p><ul><li>anchors</li><li>body</li><li>characterSet</li><li>childElementCount</li><li>children</li><li>doctype</li><li>documentElement</li><li>domain</li><li>fullscreen</li><li>head</li><li>hidden</li><li>images</li><li>links</li><li>location</li><li>onxxxxxxxxx</li><li>origin</li><li>plugins</li><li>readyState</li><li>referrer</li><li>scripts</li><li>scrollingElement</li><li>styleSheets</li><li>title</li><li>visibilityState</li></ul><p>方法：</p><ul><li><p>close ()</p></li><li><p>createDocumentFragment ()</p></li><li><p>createElement ()</p></li><li><p>createTextNode ()</p></li><li><p>execCommand ()</p></li><li><p>exitFullscreen ()</p></li><li><p>getElementById ()</p></li><li><p>getElementsByClassName ()</p></li><li><p>getElementsByName ()</p></li><li><p>getElementsByTagName ()</p></li><li><p>getSelection ()</p></li><li><p>hasFocus ()</p></li><li><p>open ()</p></li><li><p>querySelector ()</p></li><li><p>querySelectorAll ()</p></li><li><p>registerElement ()</p></li><li><p>write ()</p></li><li><p>writeln ()</p></li></ul></li><li><p>Element 的接口</p></li><li><p>DOM API 反人类</p><p>i. 获取元素</p><p>以前之后 document.getElementById, document.getElementsByTagName, document.getElementsByClassName太反人类，于是有了 jQuery 后来DOM API 终于抄袭 jQuery 提供了 document.querySelector 和 document.querySelectorAll 但是依然没有 jQuery 好用，因为「不一致」</p><p>ii. 获取下一个元素</p><p>获取兄弟们</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GitHub 搭建个人博客</title>
      <link href="2021/03/20/GitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2021/03/20/GitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="github-搭建个人博客">GitHub 搭建个人博客<a title="#github-搭建个人博客" href="#github-搭建个人博客"></a></h1><p><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank">GitHub+Hexo 搭建个人网站详细教程</a></p><blockquote><p>配置代理</p><p>git config --global http.proxy’socks5://127.0.0.1:10808’</p><p>git config --global https.proxy’socks5://127.0.0.1:10808’</p></blockquote><p>一个最简单的个人博客</p><ol><li>新建 GitHub 仓库</li><li>开启 GitHub Pages 功能</li><li>新建 index.html</li><li>购买域名：<a href="http://namesilo.com">namesilo.com</a>【namesilo 优惠码】</li><li>用 Hexo 生成复杂的页面</li></ol><p>（<kbd>Ctrl</kbd> + <kbd>D</kbd> 退出）</p><p>删除本地秘钥：</p><p>rm ~/.ssh/id_rsa</p><p>rm ~/.ssh/known_hosts</p><h3 id="配置-git">配置 Git<a title="#配置-git" href="#配置-git"></a></h3><p>git config --global <a href="http://user.name">user.name</a> GitHub 英文名<br>git config --global user.email GitHub 邮箱<br>git config --global push.default matching<br>git config --global core.quotepath false<br>git config --global core.editor “vim”</p><h3 id="配置-github">配置 GitHub<a title="#配置-github" href="#配置-github"></a></h3><ol><li><p>创建 GitHub 仓库 如：d:\blog</p></li><li><pre><code class="language-bash">进入 blog 目录，逐行复制命令到 gitbash 运行echo &quot;# blog&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin https://github.com/iMugen/blog.gitgit push -u origin master</code></pre></li><li><p>最后一句会失败：因为缺少 SSH Key</p><p>Google：GitHub ssh key 复制命令 <code>ssh-keygen -t rsa -b 4096 -C&quot;your_email@example.com&quot;</code>接着输入<code>cat ~/.ssh/id_rsa.pub</code> 把打印的值添加到 GitHub 的 Personal settings/SSH and GPG keys 的新建中</p><p>然后运行失败的 git push -u origin master</p></li><li><p>新建 index.html，进入 Settings 的 GitHub Pages，将 Source 改为 master branch。保存后再次拉到此处把新出现的网址复制，点击顶部的项目，点击 Edit 输入网址保存。这样就可以点击网址访问首页了</p></li></ol><h3 id="git-命令总结">Git 命令总结<a title="#git-命令总结" href="#git-命令总结"></a></h3><ol><li>git init，初始化本地仓库.git</li><li>git status-sb，显示当前所有文件的状态</li><li>git add 文件路径，用来将变动加到暂存区</li><li>git commit-m“信息 &quot;，用来正式提交变动，提交至.git 仓库</li><li>如果有新的变动，我们只需要依次执行 git add xxx 和 git commit-m’xxx’ 两个命令即可。别看本教程废话那么多，其实就这一句有用！先 add 再 commit，行了，你学会 git 了。</li><li>git log 查看变更历史</li><li>tree … 查看某目录</li></ol><h3 id="其他">其他<a title="#其他" href="#其他"></a></h3><ul><li>git remote add origin <a href="http://gitegithub.com">gitegithub.com</a>:xxxxxxx.git 将本地仓库与远程仓库关联</li><li>git remote set-url origin <a href="http://gitegithub.com">gitegithub.com</a>:xxxxx.git 上一步手抖了，可以用这个命令来挽回</li><li>git branch 新建分支</li><li>git merge 合并分支、</li><li>git stash 通灵术</li><li>git stash pop 反转通灵术</li><li>git revert 后悔了</li><li>git reset 另一种后悔了</li><li>git diff 查看详细变化</li></ul><h3 id="资源">资源<a title="#资源" href="#资源"></a></h3><ul><li>常用 Git 命令清单</li><li>读懂 diff - 阮一峰</li><li>搭建一个免费的，无限流量的 Blog----github Pages 和 Jeky 入门 Git 菜鸟教程</li><li>廖雪峰的 Git 教程</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub+Hexo 搭建个人网站</title>
      <link href="2021/03/20/GitHub+Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
      <url>2021/03/20/GitHub+Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="github+hexo-搭建个人网站">GitHub+Hexo 搭建个人网站<a title="#github+hexo-搭建个人网站" href="#github+hexo-搭建个人网站"></a></h1><h2 id="什么是-hexo？">什么是 Hexo？<a title="#什么是-hexo？" href="#什么是-hexo？"></a></h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><blockquote><p><a href="https://hexo.io/zh-cn/docs/" target="_blank">[文档| Hexo]</a></p></blockquote><h2 id="获得个人网站域名">获得个人网站域名<a title="#获得个人网站域名" href="#获得个人网站域名"></a></h2><p>阿里云购买一个域名</p><h2 id="github-创建个人仓库">GitHub 创建个人仓库<a title="#github-创建个人仓库" href="#github-创建个人仓库"></a></h2><p>创建新的仓库，<strong>用户名</strong>.github.io 这个用户名使用你的GitHub帐号名称代替，比如我的仓库名为：<a href="http://liuilin.github.io">liuilin.github.io</a></p><h2 id="安装-&amp;-配置-git">安装 &amp; 配置 Git<a title="#安装-&amp;-配置-git" href="#安装-&amp;-配置-git"></a></h2><p>wsl 的 scoop 安装 Git</p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank">廖雪峰 Git 教程</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br><span class="line">git config --global push.default matching</span><br><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br><span class="line">git config --global core.editor <span class="string">&quot;vim&quot;</span></span><br></pre></td></tr></table></figure><ol><li><p>在本地创建 GitHub 仓库</p></li><li><p>进入 blog 目录，逐行复制命令到 gitbash 运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# blog&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin https://github.com/GitHub用户名/blog.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li><li><p>如果上面最后一句出现失败：是因为缺少 SSH Key</p><p>Google：GitHub ssh key 复制命令 <code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code></p><p>接着输入<code>cat ~/.ssh/id_rsa.pub</code> 把打印的值添加到 GitHub个人 的 Personal settings/SSH and GPG keys 的新建中（或者把 id_rsa.pub 的值复制到 GitHub 新建的 new SSH Key 中），然后运行失败的 git push -u origin master</p><blockquote><p>不用 hexo ，而是使用 GitHub Pages 的情况：</p><p>新建 index.html ，进入 Settings 的 GitHub Pages ，将 Source 改为 master branch 。保存后再次拉到此处把新出现的网址复制，点击顶部的项目，点击Edit输入网址保存。这样就可以点击网址访问首页了</p></blockquote></li><li><p>检测GitHub公钥设置是否成功，命令行中输入 ssh <a href="mailto:git@github.com">git@github.com</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Daniel\blog&gt; ssh git@github.com</span><br><span class="line">PTY allocation request failed on channel 0</span><br><span class="line">Hi liuilin! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string">Connection to github.com closed.</span></span><br></pre></td></tr></table></figure><blockquote><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p></blockquote></li></ol><h2 id="安装-node.js">安装 Node.js<a title="#安装-node.js" href="#安装-node.js"></a></h2><p>Windows 用 scoop 安装 node</p><p>检测Node.js是否安装成功，在命令行中输入 node -v</p><p>检测npm是否安装成功，在命令行中输入npm -v</p><p>安装Hexo的环境搭建完成</p><h2 id="安装-hexo">安装 Hexo<a title="#安装-hexo" href="#安装-hexo"></a></h2><p>创建一个文件夹随意命名，如 Blog ， 以后 Hexo 框架发布的网页都在这个文件夹中</p><p>使用npm命令安装Hexo，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这个安装时间较长耐心等待</p><p>安装完成后，初始化我们的博客，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>wsl 下查看 blog 第一层级：tree -a -L 1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy_git</span><br><span class="line">├── .git</span><br><span class="line">├── .gitignore</span><br><span class="line">├── READEME.md</span><br><span class="line">├── _config.landscape.yml</span><br><span class="line">├── _config.yml</span><br><span class="line">├── db.json</span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>在我们初始化的一个 blog 文件夹中，为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new &#39;博客名&#39;</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>部署后访问 localhost:4000 查看本地</p><p>常用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">现在来介绍常用的Hexo 命令</span><br><span class="line">npm install hexo -g # 安装Hexo</span><br><span class="line">npm update hexo -g # 升级</span><br><span class="line">hexo init # 初始化博客</span><br><span class="line"></span><br><span class="line">命令简写</span><br><span class="line">hexo n(ew) &#39;新建文章标题&#39;    # 新建文章</span><br><span class="line">hexo g(enerate)   # 生成</span><br><span class="line">hexo s(erver)       # 启动服务预览</span><br><span class="line">hexo d(eploy)       # 部署</span><br><span class="line"></span><br><span class="line">hexo server  # Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s  # 静态模式</span><br><span class="line">hexo server -p 5000  # 更改端口</span><br><span class="line">hexo server -i x.x.x.x # 自定义 IP</span><br><span class="line">hexo clean # 清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line">刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作</span><br></pre></td></tr></table></figure><h2 id="更换主题">更换主题<a title="#更换主题" href="#更换主题"></a></h2><p>在 blog 目录中更换主题 next/inside （比较喜爱的两个主题），此目录下打开命令行输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$blog</span>: git <span class="built_in">clone</span> https://github.com/ikeq/hexo-theme-inside.git themes/inside</span><br></pre></td></tr></table></figure><p>将主题下载到 blog 目录的 themes 目录下，打开站点的 _config.yml 文件中的配置为 theme: inside（下载的主题名字）</p><h2 id="图床">图床<a title="#图床" href="#图床"></a></h2><p>创建一个图床仓库 image-bed ，分支名要设 GitHub 能看到的分支</p><p>使用 jsDelivr CDN 对 GitHub 图床进行加速，PicGo 配置自定义域名</p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319141245558.png" alt="image-20210319141245558" class="φbs"></p><p>在目录 Setting / Developer Settings / Personal access tokens 下获取 GitHub Token ：</p><p>点击 Generate new token</p><p>输入 Note 及勾选 repo，生成后复制 token 进 PicGo 的设定 Token 中</p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319141948636.png" alt="image-20210319141948636" class="φbs"></p><blockquote><p>GitHub 仓库的容量有 1G 的上限，但对个人博客来说绰绰有余</p></blockquote><p>设置参数说明：</p><ul><li>设定仓库名：填入你上面创建的仓库名，格式为：用户名/仓库名；</li><li>设定分支名：一般填写 master 即可；</li><li>设定 Token：将上一步 GitHub 配置中得到的 Token 粘贴进去；</li><li>指定存储路径：图片在 GitHub 仓库中的存储路径，例如：blog/img/</li><li>设定自定义域名：此处直接设置 jsDelivr 加速的访问地址，例如：自定义域名设为 <a href="https://cdn.jsdelivr.net/gh/liuilin/image-bed@master">https://cdn.jsdelivr.net/gh/liuilin/image-bed@master</a> 来进行 CDN 加速（<a href="https://cdn.jsdelivr.net/gh/">https://cdn.jsdelivr.net/gh/</a> 不能省略，gh 为 GitHub 缩写，后面接 GitHub 名字 + 仓库 + @仓库branch）<ol><li>gh：固定写上，为 GitHub 缩写，表示来自 GitHub 的仓库</li><li>liuilin/image-bed：仓库的具体位置</li><li>master 仓库的分支</li></ol></li></ul><p>PicGo 配置完成后在 Typora 设置中 PicGo 程序路径，然后将图片粘贴到 Typora 里的 markdown 文件中就会自动上传到 GitHub</p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319145559552.png" alt="image-20210319145559552" class="φbs"></p><p>使用 jsDelivr 优势</p><blockquote><p>使用 jsDelivr 加速静态文件访问，能够优化博客体验。<br>在 GitHub 存储图片，利于博主对于图片的掌控。<br>使用 PicGo 的原因是因为能够方便地将上传图片到 GitHub，并直接获取 jsDelivr 的加速后的图片地址。</p></blockquote><h2 id="推送">推送<a title="#推送" href="#推送"></a></h2><p>推送新写的博客内容到 GitHub</p><p>在 blog 目录下找到 _config.yml 文件，在最后加上如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/liuilin/liuilin.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>hexo d 进行博客部署，让 hexo 知道把博客 blog 部署在GitHub哪个位置</p><p>最后安装 Git 部署插件，输入命令：npm install hexo-deployer-git --save，有了该插件则可以将 blog/public 的内容推送到 GitHub 上。</p><p>这时，我们分别输入三条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>现在输入 <strong>用户名</strong>.github.io 就可以在浏览器上访问了</p><h2 id="绑定域名">绑定域名<a title="#绑定域名" href="#绑定域名"></a></h2><p>虽然在 Internet 上可以访问我们的网站，但我想使用自定义域名，这就需要绑定我们自己的域名。我阿里云购买了一个域名 liumulin.top</p><p><a href="https://dc.console.aliyun.com/next/index?spm=5176.12818093.ProductAndService--ali--widget-home-product-recent.dre1.5adc16d0VsrhP4#/domain/list/all-domain" target="_blank">添加域名解析</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319154426014.png" alt="image-20210319154426014" class="φbs"></p><p>主机记录值为前缀</p><p><code>@</code> 代表访问时不用前缀，直接输入 liumulin.top</p><p><code>www</code> 代表访问时输入 www.liumulin.top</p><p><code>blog</code> 代表访问时直接输入 blog.liumulin.top</p><p>以上访问的全是自定义的记录值 <strong>用户名</strong>.github.io</p><p>包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 <a href="http://xxxx.github.io">http://xxxx.github.io</a> 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href="http://github.io">http://github.io</a> 这里千万别弄错了。第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</p><p>在 <strong>用户名</strong>.github.io 这个仓库中更改 GitHub Pages 配置的 Custom domain</p><p><img src="https://cdn.jsdelivr.net/gh/liuilin/image-bed@master/blog/img/image-20210319160637600.png" alt="image-20210319160637600" class="φbs"></p><p>完成域名配置后，点击save保存。进入 <strong>本地博客</strong> 文件夹，接着进入 blog/source 目录下，将想要访问的地址放入 CNAME 中（如：echo “bloag.liumulin.top” &gt;&gt; CNAME）。然后在博客文件夹下执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这时候打开浏览器在地址栏输入你的 <strong>自定义域名</strong> 将会直接进入你自己搭建的网站</p><h2 id="个性化设置">个性化设置<a title="#个性化设置" href="#个性化设置"></a></h2><p>在博客站点配置文件 blog/_config.yml 修改基本的站点信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="comment"># 网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Daniel&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">hey</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">我的个人博客</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Daniel</span> <span class="string">Liu</span></span><br><span class="line"><span class="attr">avatart:</span> </span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hansya</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>修改主题配置文件 blog/theme/ <code>下载的主题</code> /_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line"> <span class="attr">wechatpay:</span> <span class="string">/WeChatPay.png</span></span><br><span class="line"> <span class="attr">alipay:</span> <span class="string">/Alipay.jpg</span></span><br></pre></td></tr></table></figure><p>博客打赏的微信、支付宝二维码图片，放在根目录 blog/source 文件夹下</p><p>社交sns</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sns:</span></span><br><span class="line">  <span class="comment"># Built-in icons</span></span><br><span class="line">  <span class="comment"># `email`, `feed`, `github`, `twitter`, `facebook`, `instagram`, `tumblr`, `dribbble`, `telegram`</span></span><br><span class="line">  <span class="comment"># `youtube`, `hangouts`, `linkedin`, `pinterest`, `soundcloud`, `myspace`, `weibo`, `qq</span></span><br><span class="line">  <span class="attr">zhihu:</span> <span class="string">https://www.zhihu.com/people/xiao-shi-yilang-82-6</span></span><br><span class="line">  <span class="attr">email:</span> <span class="string">liu1142865396@gmail.com</span></span><br><span class="line">  <span class="attr">github:</span> <span class="string">https://github.com/liuilin</span></span><br><span class="line">  <span class="attr">instagram:</span> <span class="string">https://www.instagram.com/</span></span><br><span class="line">  <span class="attr">facebook:</span> <span class="string">https://www.facebook.com/</span></span><br></pre></td></tr></table></figure><p>自定义搜索 API</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">adapter:</span></span><br><span class="line">  <span class="comment"># 搜索结果分页大小，缺省值 `10`</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="comment"># LOGO 图，可选</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">//cdn.worldvectorlogo.com/logos/algolia.svg</span></span><br><span class="line">  <span class="comment"># 请求对象：此配置项为构造完整的请求对象</span></span><br><span class="line">  <span class="attr">request:</span></span><br><span class="line">    <span class="comment"># 接口 URL</span></span><br><span class="line">    <span class="comment"># url: https://&#123;APPLICATION_ID&#125;-dsn.algolia.net/1/indexes/&#123;INDEX&#125;/query</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://Z9I4Z08O59-dsn.algolia.net/1/indexes/blog/query</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># GET 或 POST，不区分大小写，缺省值 `GET`</span></span><br><span class="line">    <span class="attr">method:</span> <span class="string">post</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字符串差值 :query, :per_page, :current</span></span><br><span class="line">    <span class="comment"># 请求参数，格式视 Content-Type 而定，支持的字符串插值有：</span></span><br><span class="line">    <span class="comment"># 搜索的字符串 `:query`</span></span><br><span class="line">    <span class="comment"># 分页大小 `:per_page`</span></span><br><span class="line">    <span class="comment"># 当前页 `:current`</span></span><br><span class="line">    <span class="attr">body:</span> <span class="string">&#x27;&#123;&quot;query&quot;:&quot;:query&quot;,&quot;hitsPerPage&quot;:&quot;:per_page&quot;,&quot;page&quot;:&quot;:current&quot;&#125;&#x27;</span></span><br><span class="line">    <span class="attr">headers:</span></span><br><span class="line">      <span class="comment"># X-Algolia-API-Key: &#123;API_KEY&#125;</span></span><br><span class="line">      <span class="attr">X-Algolia-API-Key:</span> <span class="string">e259a4cda71e11ebd4de9203ae132994</span></span><br><span class="line">      <span class="attr">X-Algolia-Application-Id:</span> <span class="string">Z9I4Z08O59</span></span><br><span class="line">      <span class="attr">Content-Type:</span> <span class="string">application/json;</span> <span class="string">charset=UTF-8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 用于统一数据格式，例如有如下返回结果</span></span><br><span class="line">  <span class="comment"># &#123;</span></span><br><span class="line">  <span class="comment">#   &quot;hits&quot;: [</span></span><br><span class="line">  <span class="comment">#     &#123;</span></span><br><span class="line">  <span class="comment">#       &quot;title&quot;: &quot;Inside Theme Showcase&quot;,</span></span><br><span class="line">  <span class="comment">#       &quot;date&quot;: &quot;2018-09-05T06:28:24.000Z&quot;,</span></span><br><span class="line">  <span class="comment">#       &quot;_snippetResult&quot;: &#123;</span></span><br><span class="line">  <span class="comment">#         &quot;title&quot;: &#123; &quot;value&quot;: &quot;&quot; &#125;,</span></span><br><span class="line">  <span class="comment">#         &quot;content&quot;: &#123; &quot;value&quot;: &quot;&quot; &#125;</span></span><br><span class="line">  <span class="comment">#       &#125;</span></span><br><span class="line">  <span class="comment">#     &#125;</span></span><br><span class="line">  <span class="comment">#   ],</span></span><br><span class="line">  <span class="comment">#   &quot;nbHits&quot;: 10,</span></span><br><span class="line">  <span class="comment">#   &quot;page&quot;: 0,</span></span><br><span class="line">  <span class="comment">#   &quot;nbPages&quot;: 1,</span></span><br><span class="line">  <span class="comment">#   &quot;processingTimeMS&quot;: 5</span></span><br><span class="line">  <span class="comment"># &#125;</span></span><br><span class="line">  <span class="comment"># 则设置   </span></span><br><span class="line">  <span class="attr">keys:</span></span><br><span class="line">    <span class="attr">data:</span> <span class="string">hits</span></span><br><span class="line">    <span class="attr">current:</span> <span class="string">page</span></span><br><span class="line">    <span class="attr">total:</span> <span class="string">nbPage</span></span><br><span class="line">    <span class="attr">hits:</span> <span class="string">nbHits</span></span><br><span class="line">    <span class="attr">time:</span> <span class="string">processingTimeMS</span></span><br></pre></td></tr></table></figure><p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。</p><h2 id="faq">FAQ<a title="#faq" href="#faq"></a></h2><ol><li><p>hexo d 推送不上去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access <span class="string">&#x27;https://gitclone.com/github.com/liuilin/liuilin.github.io.git/&#x27;</span>: The requested URL returned error: 504</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (C:\Users\Daniel\blog\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (node:events:376:20)</span><br><span class="line">      at ChildProcess.cp.emit (C:\Users\Daniel\blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (node:internal/child_process:284:12) &#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure><p>Git config 配置了以下加速 GitHub 代码下载配置，导致全局走了这个地址，取消掉此配置（将 v2ray 开启全局代理，Git config 配置https.proxy=socks5://127.0.0.1:10808）即可解决</p><p>url.<a href="https://gitclone.com/github.com/.insteadof=https://github.com/">https://gitclone.com/github.com/.insteadof=https://github.com/</a></p><blockquote><p>还有一种方案，hexo clean 之后重新 hexo d 部署</p></blockquote></li><li><p>Typora 上传图片失败</p><p>方案：<a href="https://www.jianshu.com/p/3f1aa341dcbc" target="_blank">配置Typora+PicGo+gitee过程中个别问题的解决</a></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="2021/03/20/HTML/"/>
      <url>2021/03/20/HTML/</url>
      
        <content type="html"><![CDATA[<h1 id="html">HTML<a title="#html" href="#html"></a></h1><blockquote><p>div {盒子 $}*10</p></blockquote><ol><li><p>Google：HTML spec（规范文档 specification）</p></li><li><p>简历模板：<a href="https://scardwp.px-lab.com/">https://scardwp.px-lab.com/</a></p></li><li><p>验证写的 HTML 正确性：<a href="https://validator.w3.org/">https://validator.w3.org/</a></p></li><li><p>HTML（只规定页面上有什么）常见标签：a、form、input、button、h1、p、ul、ol、small、strong、div、span、kbd、video、audio、svg</p><ul><li><p>除了 div 和 span，其他标签都有默认样式（在 Chrome 控制台 style 灰色部分可看到，-webkit）</p><blockquote><p>要给 class（驼峰命名），因为 div 是没有意义的标签，不给 class 就不知道什么意思。不能只用 div 和 span，那样需要加很多 class</p><p>ul：un-order list</p><p>li：list item</p><p>dl：description list</p><p>dt：description term</p><p>dd：description definition</p></blockquote></li><li><p>MDN 上有所有标签的文档</p></li></ul><blockquote><p>不知道的单词：<a href="http://iciba.com/">iciba.com/</a> 导航 =&gt; navigation =&gt; Google：navigation mdn 找到 <nav> 标签</p></blockquote></li><li><p>如何查看 MDN 文档（查看是否有此标签）</p><p>e.g. strong mdn</p><p>main md：<main></p></li><li><p>查看标签默认属性：如果 style 里面没看到则到 computed 里面搜索</p></li><li><p>CSS 布局要么横向、要么纵向，这样划分 HTML 的块容易写 CSS（等有 Grid 的时候也就不用多加 div 了）</p></li><li><p>npm i -g http-server：http-server -c-1 不带缓存开启服务</p></li><li><p>iframe 标签：嵌套页面</p><p>&lt;iframesrc=“<a href="https://www.baidu.com">https://www.baidu.com</a>” name=“xxx”&gt;</iframe></p></li><li><p>a 标签：跳转页面（HTTP GET 请求）</p><blockquote><p><a href="javascript:;">QQ</a></p><p>i. //qq. com</p><p>ii. #xxx?name=qqqq./xxx. html</p><p>iii. javascript: alert (1); javascript:;</p><iframe name="xxx" src="./index.html"frameborder=1"0"></iframe><a href=""target="xxx"></a>（target 指跳转到哪）</blockquote></li><li><p>form 标签：跳转页面（HTTP POST 请求）</p></li><li><p>input /button</p></li><li><p>table</p></li></ol><blockquote><p>标签属性 Google mdn</p><p>完成 w3schools 的测试题</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 命令与 Vim</title>
      <link href="2021/03/20/Linux%20%E5%91%BD%E4%BB%A4%E4%B8%8E%20Vim/"/>
      <url>2021/03/20/Linux%20%E5%91%BD%E4%BB%A4%E4%B8%8E%20Vim/</url>
      
        <content type="html"><![CDATA[<h1 id="linux-命令与-vim">Linux 命令与 Vim<a title="#linux-命令与-vim" href="#linux-命令与-vim"></a></h1><h3 id="linux-命令">Linux 命令<a title="#linux-命令" href="#linux-命令"></a></h3><p><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html" target="_blank">Linux工具快速教程 — Linux Tools Quick Tutorial</a></p><blockquote><p>GitHub：服务器配置 <a href="https://gist.github.com/search?o=desc&amp;q=.bashrc&amp;s=stars">https://gist.github.com/search?o=desc&amp;q=.bashrc&amp;s=stars</a></p></blockquote><h4 id="常见的自带命令">常见的自带命令<a title="#常见的自带命令" href="#常见的自带命令"></a></h4><div class="φbt"><div class="φbv"><table><thead><tr><th>** 操作 **</th><th>** 命令 **</th></tr></thead><tbody><tr><td>进入目录</td><td>cd</td></tr><tr><td>显示当前目录</td><td>pwd</td></tr><tr><td>创建目录</td><td>mkdir 目录名</td></tr><tr><td>创建目录</td><td>mkdir -p 目录路径</td></tr><tr><td>我是谁</td><td>whoami</td></tr><tr><td>–</td><td>–</td></tr><tr><td>查看路径</td><td>ls 路径</td></tr><tr><td>查看路径</td><td>ls -a 路径</td></tr><tr><td>查看路径</td><td>ls -l 路径</td></tr><tr><td>查看路径</td><td>ls -al 路径</td></tr><tr><td>–</td><td>–</td></tr><tr><td>创建文件 / 覆盖原有文件</td><td>echo “1” &gt; 文件路径</td></tr><tr><td>强制创建文件</td><td>echo “1” &gt;! 文件路径</td></tr><tr><td>追加文件内容</td><td>echo “1” &gt;&gt; 文件路径</td></tr><tr><td>创建文件</td><td>touch 文件名</td></tr><tr><td>改变文件更新时间</td><td>touch 文件名</td></tr><tr><td>–</td><td>–</td></tr><tr><td>复制文件</td><td>cp 源路径 目标路径</td></tr><tr><td>复制目录</td><td>cp -r 源路径 目标路径</td></tr><tr><td>–</td><td>–</td></tr><tr><td>移动节点</td><td>mv 源路径 目标路径</td></tr><tr><td>–</td><td>–</td></tr><tr><td>删除文件</td><td>rm 文件路径</td></tr><tr><td>强制删除文件</td><td>rm -f 文件路径</td></tr><tr><td>删除目录</td><td>rm -r 目录路径</td></tr><tr><td>强制删除目录</td><td>rm -rf 目录路径</td></tr><tr><td>–</td><td>–</td></tr><tr><td>查看目录结构</td><td>tree</td></tr><tr><td>建立软链接</td><td>ln -s 真实文件 链接</td></tr><tr><td>–</td><td>–</td></tr><tr><td>下载文件</td><td>curl -L <a href="https://www.baidu.com/" target="_blank">https://www.baidu.com</a> &gt; baidu.html</td></tr><tr><td>拷贝网页</td><td>wget -p -H -e robots=off <a href="https://www.baidu.com/" target="_blank">https://www.baidu.com</a> (Windows 不支持 wget)</td></tr><tr><td>磁盘占用</td><td>df -kh</td></tr><tr><td>当前目录大小</td><td>du -sh .</td></tr><tr><td>各文件大小</td><td>du -h</td></tr></tbody></table></div></div><blockquote><p>Google: Linux 查看文件内容</p><p>Linux 命令：<a href="https://explainshell.com/">https://explainshell.com/</a>只展示精选命令 <a href="https://github.com/tldr-pages/tldr">https://github.com/tldr-pages/tldr</a></p></blockquote><h4 id="快捷键">快捷键<a title="#快捷键" href="#快捷键"></a></h4><ul><li><p><kbd>↑</kbd> <kbd>↓</kbd> 上一命令 / 下一命令</p></li><li><p><kbd>!</kbd> 上一命令占位符</p></li><li><p><kbd>Tab</kbd> 自动补全路径</p></li><li><p><kbd>Alt</kbd>+<kbd>.</kbd> 上一命令的最后一个参数</p></li><li><p>&amp;&amp; 前面的执行成功了，再执行后面的</p></li><li><p>|| 前面的执行失败了，就执行后面的</p></li><li><p>; 前面执行完了，不管成功失败，就执行后面的</p></li><li><p>&gt; 重定向</p></li><li><p>| 管道</p></li></ul><h3 id="vim">Vim<a title="#vim" href="#vim"></a></h3><h4 id="如何学习-vim">如何学习 vim<a title="#如何学习-vim" href="#如何学习-vim"></a></h4><ol><li><p>在命令行输入 vimtutor ，即可查看官方自带的中文教程</p></li><li><p><a href="http://coolshell.cn/articles/5426.html" target="_blank">简明 VIM 练级攻略</a></p></li><li><p><a href="https://vim-adventures.com/" target="_blank">一个 vim 游戏</a></p></li></ol><h4 id="命令">命令<a title="#命令" href="#命令"></a></h4><p>技巧：Vim 的纵向编辑模式：<a href="https://www.ibm.com/developerworks/cn/linux/l-cn-vimcolumn/index.html">https://www.ibm.com/developerworks/cn/linux/l-cn-vimcolumn/index.html</a></p><ol><li><p>Vim 分为一个 operation 和一个 motion</p></li><li><p>i 写入模式、i 插入之前、a 插入之后、A 行尾插入、I 行首插入、o 下行插入、O 上行插入 x 删除光标后一个字符，u 是撤销 U、Ctrl+r<br>d + ←→删除光标←→字符（d +3←）、dd 删除一行（其实是剪切，p 粘贴）<br>y+ ←→复制光标←→字符 （y+3←）</p><p>db/dw/de/x</p><p>剪切括号等内的内容（进入插入模式）：<kbd>ci”</kbd><kbd>ci’</kbd><kbd>ci [</kbd><kbd>ci (</kbd></p><p>剪切括号等内的内容：dt”、di”、diw</p><p>剪切括号等内的内容：yi”</p><p>剪切到制定字符：c/d/y f% s</p><p>c 删除并进入写入模式、w 光标向下移动一个词、cw 删除一个词并进入写入模式、b 光标到上一个词 、ciw 词中删除一个词并进入写入模式，yi</p><blockquote><p>ci&quot; - change inside double quotes</p><p>ci) - change inside curved brackets</p><p>ci} - change inside curly brackets</p></blockquote><p>f：找当前行的词</p><p>/ 搜索、n 下 N 上</p><p>(n) p/P：粘贴 n 行</p></li><li><p>移到行首：^</p></li><li><p>移到行尾：$</p></li><li><p>多行缩进：/10,100&gt;</p></li><li><p>V 选区 v 反选：之后 y、p、d</p><p>选中直至末尾：v$；并插入</p><p>删除整页：VGd</p><p>v 选区后，Alt+j 选择并替换</p></li><li><p>【y i c d f 】<br>esc 回到正常模式<br>：w 保存<br>：q 退出 vim<br>：source $MYVIMRC 刷新 vim<br>jkhl 上下左右<br>：split 上下分屏 、：vsplit 左右分屏 Q 退出</p><p>config: ~/.vim/vimrc</p><p>let mapleader=&quot; &quot; &quot; 将leader键（\键,类似于Windows键）换成空格（相当于空格键）<br>syntax on &quot; 开启语法高亮<br>set number &quot; 显示行号<br>set relativenumber &quot; 显示从当前行数的前后行数<br>set cursorline &quot; 高亮显示当前行<br>set wrap &quot; 自动换行<br>set showcmd &quot; 显示指令<br>set wildmenu &quot; vim 命令行命令补全<br>set hlsearch &quot; 高亮显示搜索<br>set incsearch &quot; 动态高亮搜索&quot;<br>set smartcase &quot; 智能大小写搜索<br>set ignorecase &quot; 忽略大小写</p><p>exec “nohlsearch” &quot; 打开是运行指令 取消上回搜索内容的高亮&quot;noremap a b &quot; 将 a 替换为 b<br>&quot;noremap A 5b &quot; 将 A 替换为 5b<br>&quot;noremap = nzz &quot; 将 n 替换为 =zz &quot; 用 zz 将该行变成中心点<br>&quot;noremap - Nzz &quot; 将 N 替换为 -zz<br>noremap <LEADER><CR> :nohlearch<CR> &quot; 将 <LEADER><CR> 替换为 :nohlearch<CR> 用于快捷取消搜索高亮</p><p>map s <nop>  &quot; 将 s 的指令设置为空<br>map S :w<CR> &quot; 将 S 的指令设置成 :w  “ <CR> 代表回车<br>map Q :q<CR> &quot; 将 Q 的指令设置成 :q<br>map R :source $MYVIMRC<CR> &quot; 将 R 的指令设置成 重载vimrc配置</p><p>&quot;:split  &quot; 上下分屏 :q 退出<br>&quot;:vsplit &quot; 左右分屏</p><p>&quot; &lt;Operation(操作)&gt; &lt;Motion(动作)&gt;<br>&quot; d 剪切操作(剪切可看做删除), y 复制操作, p 粘贴操作， c 剪切后修改操作<br>&quot; ← 左动作， → 右动作， 3← 3个左动作， b 选择光标开启到上一个词后的内容， i 指明光标在词中，当前词待操作， w 选择光标开始到下个词前的内容， iw 在当前词之间选择该， y3← 向右复制， f 查找动作</p></li></ol><h4 id="插件">插件<a title="#插件" href="#插件"></a></h4><p>插件管理工具：<a href="https://github.com/junegunn/vim-plug" target="_blank">junegunn/vim-plug: Minimalist Vim Plugin Manager</a></p><p>example: add below to .vimrc</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;connorholyday/vim-snazzy&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br></pre></td></tr></table></figure><p>:PlugInstall</p><p>Google：best vim/idea/vscode config github 找到</p><p>vim plugin site:github.com</p><p>github：</p><ul><li>vim-plug</li><li>snazzy</li></ul><!-- 待整理 --><h2 id="批量插入">批量插入<a title="#批量插入" href="#批量插入"></a></h2><p>VISUAL 批量选中模式下（<kbd>gg</kbd> - <kbd>V</kbd> - <kbd>G</kbd>），:‘&lt;,’&gt;normal Imy-wallpaper-，就会进入 normal 模式，批量在最前面加上 my-wallpaper-</p><p>此时我突然不想加前缀 my-，先进入可视块 VISUAL BLOCK 模式（<kbd>Ctrl</kbd> + <kbd>v</kbd> - <kbd>G</kbd>），<kbd>f</kbd> - <kbd>-</kbd> - <kbd>d</kbd>，删除成功。<br>突然我又看 wallpaper 单词不顺眼，想批量把首字母 w 改为大写，依次输入 <kbd>Ctrl</kbd> + <kbd>v</kbd> - <kbd>G</kbd> - <kbd>g</kbd> - <kbd>U</kbd></p><blockquote><p>gu：切换为小写<br>gU：切换为大写<br>g~：大小写切换</p><p>H    移到屏幕顶部,high<br>M    移到屏幕中央,middle<br>L    移到屏幕底部,low</p></blockquote><p>:e ~/.vimrc：vim normal 模式下编辑文件</p><h3 id="vim-删除当前屏内容命令">vim 删除当前屏内容命令<a title="#vim-删除当前屏内容命令" href="#vim-删除当前屏内容命令"></a></h3><p><kbd>HVLd</kbd></p><h3 id="正则给-markdown-文件批量添加-&lt;kbd&gt;-符号">正则给 markdown 文件批量添加 <kbd> 符号<a title="#正则给-markdown-文件批量添加-&lt;kbd&gt;-符号" href="#正则给-markdown-文件批量添加-&lt;kbd&gt;-符号"></a></h3><h3 id="多行折叠为一行">多行折叠为一行<a title="#多行折叠为一行" href="#多行折叠为一行"></a></h3><p>wget<br>vim<br>touch</p><p>vim command:<br>In command mode:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[range]j[lines]</span><br></pre></td></tr></table></figure><p>For example: here you want to do the whole buffer:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%j</span><br></pre></td></tr></table></figure><p>If you just wanted to do 10 lines from the current cursor position:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">j10</span><br></pre></td></tr></table></figure><p>If you don’t want to replace the new lines with spaces, use ! after j.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%j!</span><br><span class="line">j!10</span><br></pre></td></tr></table></figure><p>And for the uberfancy:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5j20</span><br></pre></td></tr></table></figure><p>It would go to line 5, and join the next 20 lines.</p><h3 id="vim-tricks">Vim Tricks<a title="#vim-tricks" href="#vim-tricks"></a></h3><p><a href="https://www.hillelwayne.com/post/intermediate-vim/" target="_blank">At least one Vim trick you might not know • Hillel Wayne</a></p><p>&quot; Toggle Spelling Check with <space>sc<br>&quot; &lt;z=&gt; 智能修改单词<br>map <LEADER>sc :set spell!<CR><br>noremap <C-x> bea<C-x>s<br>inoremap <C-x> <Esc>ea<C-x>s</p><p>Ctrl+o: back to pre edit place<br>Ctrl+i: back to last edit place</p><p>gf: go to file<br>Ctrl+o: back to pre edit place</p><p>:%TOhtml: vim convert file to html</p><p>var name=‘lin’<br>var name=‘lin’<br>var name=‘lin’</p><blockquote><p>into vim block mode, 3j :‘&lt;,’&gt;norm cs’&quot;<br>into vim vusual mode, V2j :‘&lt;,’&gt;norm cs’&quot;</p></blockquote><p>gs: toggle code true/false</p><p>:w !wl-copy: copy file enable</p><ol><li><p>对齐符号</p><blockquote><p>set mouse=a<br>set encoding=utf-8<br>set clipboard=unnamed<br>:‘&lt;,’&gt;Tabularize /=<br>r: 调出执行 python 代码<br>si | :term: split window and open new terminal</p></blockquote><p>录制宏，代码块格式化等号，可以用 map 更改为快捷键<br>qaV}:‘&lt;,’&gt;Tabularize /=</p><p>SimpleFold 插件：<leader>o<br>?tagbar : shift+t<br>vim-signature: 书签. ma: mark ‘a’ bookmark. <space> to next marked place<br>semshi: 高亮当前光标所在的所有单词<br>coc: 重构改变量名: <space>rn<br>Far.vim: 搜索代码 <space>f<br>FZF: Ctrl+p 跳转文件（文件搜索最强）<br>NERDTree: tt 文件目录列表<br>vim-table-mode: <space>tm 开启 markdown 自动排版<br>vim-startify: 进入最近编辑的文件<br>vim-multiple-cursor: 快速选中多行编辑<br>wildfire.vim: 类似于 vscode 的 Ctrl+w 选中单词<br>thesaurus_query: 近义词插件<br>Startify: 进入编辑器显示东西用的<br>emmet: 快速写 HTML 插件<br>Bullets.vim: 文件中列表累加</p><p>:help NERDTree: 查看插件文档</p><p>ranger:<br>S: go to path</p><p>Shift+m: mkdir. create a directory</p><p>Shift+v: touch a file</p><p>cw: rename, 可以用 vim 操作，A 在文件末尾修改</p><p>[: folder switch</p><p>v: select all file</p><p>dU: check file/folder size</p><p>dD: 删除文件夹</p><p>w: task manager</p><p>dd: cancel opration</p><p>c: compress</p><p>X: extract here</p><p>ct: convert to pdf</p><p>ydv: youtube download</p><p>zh: show dotfiles</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS</title>
      <link href="2021/03/19/JS/"/>
      <url>2021/03/19/JS/</url>
      
        <content type="html"><![CDATA[<h1 id="js">JS<a title="#js" href="#js"></a></h1><h3 id="js-历史">js 历史<a title="#js-历史" href="#js-历史"></a></h3><p><img src="https://i.loli.net/2019/10/10/MBYG9uXqyQWPi1T.png" alt="js 的历史.png" class="φbs"></p><h3 id="分类">分类<a title="#分类" href="#分类"></a></h3><ul><li>基本数据类型<ul><li>number</li><li>string</li><li>boolean：a&amp;&amp;b，两个为真才为 true，a||b，两个为假才是 false</li><li>symbol (ES6 新增)</li><li>undefined</li><li>null</li></ul></li><li>应用类型<ul><li>object</li></ul></li></ul><h3 id="区别数据类型的-api">区别数据类型的 api<a title="#区别数据类型的-api" href="#区别数据类型的-api"></a></h3><ul><li><p>typeof: 不能判断 <code>null</code> 和 <code>函数</code></p></li><li><p>instanceof</p><ol><li><p>使用范围：只能判断引用类型</p></li><li><p>原理：通过原型链</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">     a <span class="keyword">instanceof</span> b</span><br><span class="line">     <span class="comment">// 那么会这样比较</span></span><br><span class="line">     <span class="comment">//a.__proto__ === b.prototype ? 如果正确，返回 true</span></span><br><span class="line">     <span class="comment">//a.__proto__.__proto__ === b.prototype ? 返回 true</span></span><br><span class="line">     <span class="comment">// 直到 a.__proto__.__proto__ ...  === null 返回 false</span></span><br><span class="line">     <span class="string">``</span><span class="string">`- Object.prototype.toString.call ([]) =&gt; 返回&quot;[object String]&quot;### 按值传递与按引用传递的区别，进阶版`</span><span class="string">``</span>javascript</span><br><span class="line"><span class="keyword">var</span> a = &#123;<span class="attr">n</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">var</span> b = a</span><br><span class="line">a.x = a = &#123;<span class="attr">n</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">console</span>.log (b)</span><br><span class="line"><span class="built_in">console</span>.log (a)</span><br><span class="line"><span class="string">``</span><span class="string">`重点是`</span>a.x = a = &#123;<span class="attr">n</span>: <span class="number">2</span>&#125;<span class="string">` 如何处理？</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1. 从左向右执行</span></span><br><span class="line"><span class="string">2. 执行 a.x = a，就是让变量 a 指代的对象添加一个 x key, 并且让 x value 指向变量 a</span></span><br><span class="line"><span class="string">3. 执行 a = &#123;n: 2&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### Falsy 值</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1. 0</span></span><br><span class="line"><span class="string">2. NaN</span></span><br><span class="line"><span class="string">3. ‘ ’</span></span><br><span class="line"><span class="string">4. undfined</span></span><br><span class="line"><span class="string">5. null</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt; JS 惯例：如果不希望别人该你的东西，就把命名改为大写：Node.ELEMENT_NODE</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### JS 实践</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">批量删除微博脚本</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> s = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">s.setAttribute(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js&#x27;</span>)</span><br><span class="line">s.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&#x27;a[action-type=&quot;fl_menu&quot;]&#x27;</span>)[<span class="number">0</span>].click();</span><br><span class="line">            $(<span class="string">&#x27;a[title=&quot;删除此条微博&quot;]&#x27;</span>)[<span class="number">0</span>].click();</span><br><span class="line">            $(<span class="string">&#x27;a[action-type=&quot;ok&quot;]&#x27;</span>)[<span class="number">0</span>].click();</span><br><span class="line">        &#125;, <span class="number">1000</span> * i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.head.appendChild(s);</span><br></pre></td></tr></table></figure></li></ol></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim-config</title>
      <link href="2021/03/19/vim-config/"/>
      <url>2021/03/19/vim-config/</url>
      
        <content type="html"><![CDATA[<p>&quot;  __  __        __     _____ __  __ ____   ____<br>&quot; |  /  |_   _  \ \   / /_ <em>|  /  |  _ \ / <em><em><em>|<br>&quot; | |/| | | | |  \ \ / / | || |/| | |</em>) | |<br>&quot; | |  | | |</em>| |   \ V /  | || |  | |  _ &lt;| |</em></em>_<br>&quot; |<em>|  |</em>|_<em>, |    _/  |</em><em><em>|</em>|  |</em>|<em>| _\</em><em><strong>|<br>&quot;         |</strong></em>/</p><p>&quot; Todos<br>&quot; - vimwiki<br>&quot; - pylint reports error when doing <code>vim ~/Github/vim-calc/build-up/calc.py</code><br>&quot;   instead of doing <code>cd ~/Github/vim-calc/build-up</code> and then do <code>vim calc.py</code><br>&quot; - hotkey to switch between light theme and dark theme (in progress, still<br>&quot;   some bugs</p><p>&quot; ===<br>&quot; === Auto load for first time uses<br>&quot; ===<br>if empty(glob(‘~/.vim/autoload/plug.vim’))<br>silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs<br>\ <a href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</a><br>autocmd VimEnter * PlugInstall --sync | source $MYVIMRC<br>endif</p><p>&quot; ====================<br>&quot; === Editor Setup ===<br>&quot; ====================</p><p>&quot; ===<br>&quot; === System<br>&quot; ===<br>set nocompatible<br>filetype on<br>filetype indent on<br>filetype plugin on<br>filetype plugin indent on<br>set mouse=a<br>set encoding=utf-8</p><p>set clipboard=unnamed</p><p>&quot; Prevent incorrect backgroung rendering<br>let &amp;t_ut=‘’</p><p>&quot; ===<br>&quot; === Main code display<br>&quot; ===<br>set number<br>set relativenumber<br>set ruler<br>set cursorline<br>syntax enable<br>syntax on</p><p>&quot; ===<br>&quot; === Editor behavior<br>&quot; ===<br>&quot; Better tab<br>set expandtab<br>set tabstop=2<br>set shiftwidth=2<br>set softtabstop=2<br>set list<br>set listchars=tab:▸\ ,trail:▫<br>set scrolloff=5 &quot; 页面上下多5行</p><p>&quot; Prevent auto line split<br>set wrap<br>set tw=0</p><p>set indentexpr=<br>&quot; Better backspace<br>set backspace=indent,eol,start</p><p>set foldmethod=indent<br>set foldlevel=99</p><p>&quot; let &amp;t_si = “&lt;esc&gt;]50;cursorshape=1\x7”<br>&quot; let &amp;t_sr = “&lt;esc&gt;]50;cursorshape=2\x7”<br>&quot; let &amp;t_ei = “&lt;esc&gt;]50;cursorshape=0\x7”</p><p>&quot; ===<br>&quot; === Window behaviors<br>&quot; ===<br>set splitright<br>set splitbelow</p><p>&quot; ===<br>&quot; === Status/command bar<br>&quot; ===<br>set laststatus=2<br>set autochdir<br>set showcmd<br>set formatoptions-=tc</p><p>&quot; Show command autocomplete<br>set wildignore=log/<strong>,node_modules/</strong>,target/<strong>,tmp/</strong>,*.rbc<br>set wildmenu                                                 &quot; show a navigable menu for tab completion<br>set wildmode=longest,list,full</p><p>&quot; Searching options<br>set hlsearch<br>exec “nohlsearch”<br>set incsearch<br>set ignorecase<br>set smartcase</p><p>&quot; ===<br>&quot; === Restore Cursor Position<br>&quot; ===<br>au BufReadPost * if line(“'”“) &gt; 1 &amp;&amp; line(”‘“”) &lt;= line(“$”) | exe &quot;normal! g’“” | endif</p><p>&quot; ===<br>&quot; === Basic Mappings<br>&quot; ===</p><p>&quot; Set <LEADER> as <SPACE><br>let mapleader=&quot; &quot;</p><p>&quot; Column (:) mods<br>map ; :<br>map q; q:<br>map <LEADER>/ :!<br>map <LEADER>r :r !<br>map <LEADER>sr :%s/</p><p>&quot; Save &amp; quit<br>map Q :q<CR><br>map S :w<CR></p><p>&quot; Open the vimrc file anytime<br>map <LEADER>rc :e ~/.vim/vimrc<CR></p><p>&quot; Undo operations<br>&quot; noremap l u<br>&quot; Undo in Insert mode<br>inoremap <C-l> <C-u></p><p>&quot; Insert Key<br>&quot; noremap k i<br>&quot; noremap K I</p><p>&quot; Copy to system clipboard<br>vnoremap Y :w !xclip -i -sel c<CR></p><p>&quot; Search<br>map <LEADER><CR> :nohlsearch<CR><br>noremap = nzz<br>noremap - Nzz</p><p>&quot; Duplicate words<br>map <LEADER>fd /(&lt;\w+&gt;)_s*\1</p><p>&quot; Others<br>map <LEADER>o o<Esc>u</p><p>&quot; ===<br>&quot; === Cursor Movement<br>&quot; ===<br>&quot;<br>&quot; New cursor movement (the default arrow keys are used for resizing windows)<br>&quot;     ^<br>&quot;     u<br>&quot; &lt; n   i &gt;<br>&quot;     e<br>&quot;     v<br>&quot; noremap u k<br>&quot; noremap n h<br>&quot; noremap e j<br>&quot; noremap i l<br>&quot; U/E keys for 5 times u/e (faster navigation)<br>noremap U 5k<br>noremap E 5j<br>&quot; N key: go to the start of the line<br>&quot; noremap N 0<br>&quot; I key: go to the end of the line<br>&quot; noremap I $</p><p>&quot; Faster in-line navigation<br>noremap W 5w<br>noremap B 5b<br>&quot; set h (same as n, cursor left) to ‘end of word’<br>&quot; noremap h e</p><p>&quot; Ctrl + U or E will move up/down the view port without moving the cursor<br>noremap <C-U> 5<C-y><br>noremap <C-E> 5<C-e><br>inoremap <C-U> <Esc>5<C-y>a<br>inoremap <C-E> <Esc>5<C-e>a</p><p>&quot; ===<br>&quot; === Window management<br>&quot; ===<br>&quot; Use <space> + new arrow keys for moving the cursor around windows<br>map <LEADER>w <C-w>w<br>map <LEADER>u <C-w>k<br>map <LEADER>e <C-w>j<br>map <LEADER>n <C-w>h<br>map <LEADER>i <C-w>l<br>&quot;map <LEADER>r <C-w>r</p><p>&quot; Disabling the default s key<br>noremap s <nop></p><p>&quot; split the screens to up (horizontal), down (horizontal), left (vertical), right (vertical)<br>map su :set nosplitbelow<CR>:split<CR>:set splitbelow<CR><br>map se :set splitbelow<CR>:split<CR><br>map sn :set nosplitright<CR>:vsplit<CR>:set splitright<CR><br>map si :set splitright<CR>:vsplit<CR></p><p>&quot; Resize splits with arrow keys<br>map <up> :res +5<CR><br>map <down> :res -5<CR><br>map <left> :vertical resize-5<CR><br>map <right> :vertical resize+5<CR></p><p>&quot; Place the two screens up and down<br>noremap sh <C-w>t<C-w>K<br>&quot; Place the two screens side by side<br>noremap sv <C-w>t<C-w>H</p><p>&quot; Rotate screens<br>noremap srh <C-w>b<C-w>K<br>noremap srv <C-w>b<C-w>H</p><p>&quot; ===<br>&quot; === Tab management<br>&quot; ===<br>&quot; Create a new tab with tu<br>map tu :tabe<CR><br>&quot; Move around tabs with tn and ti<br>map tn :-tabnext<CR><br>map ti :+tabnext<CR><br>&quot; Move the tabs with tmn and tmi<br>map tmn :-tabmove<CR><br>map tmi :+tabmove<CR></p><p>&quot; ===<br>&quot; === Other useful stuff<br>&quot; ===</p><p>&quot; Press space twice to jump to the next ‘&lt;++&gt;’ and edit it<br>map <LEADER><LEADER> <Esc>/&lt;++&gt;<CR>:nohlsearch<CR>c4i</p><p>&quot; Toggle Spelling Check with <space>sc<br>&quot; &lt;z=&gt; 智能修改单词<br>map <LEADER>sc :set spell!<CR><br>noremap <C-x> bea<C-x>s<br>inoremap <C-x> <Esc>ea<C-x>s</p><p>&quot; Press <code>to change case (instead of ~) map</code> ~</p><p>imap <C-c> <Esc>zza<br>nmap <C-c> zz</p><p>&quot; Auto change directory to current dir<br>autocmd BufEnter * silent! lcd %:p:h</p><p>&quot; Call figlet<br>map tx :r !figlet</p><p>&quot; Compile function<br>map r :call CompileRunGcc()<CR><br>func! CompileRunGcc()<br>exec “w”<br>if &amp;filetype == ‘c’<br>exec “!g++ % -o %&lt;”<br>exec “!time ./%&lt;”<br>elseif &amp;filetype == ‘cpp’<br>exec “!g++ % -o %&lt;”<br>exec “!time ./%&lt;”<br>elseif &amp;filetype == ‘java’<br>exec “!javac %”<br>exec “!time java %&lt;”<br>elseif &amp;filetype == ‘sh’<br>:!time bash %<br>elseif &amp;filetype == ‘python’<br>silent! exec “!clear”<br>exec “!time python3 %”<br>elseif &amp;filetype == ‘html’<br>exec “!firefox % &amp;”<br>elseif &amp;filetype == ‘markdown’<br>exec “MarkdownPreview”<br>elseif &amp;filetype == ‘vimwiki’<br>exec “MarkdownPreview”<br>endif<br>endfunc</p><p>map R :call CompileBuildrrr()<CR><br>func! CompileBuildrrr()<br>exec “w”<br>if &amp;filetype == ‘vim’<br>exec “source $MYVIMRC”<br>elseif &amp;filetype == ‘markdown’<br>exec “echo”<br>endif<br>endfunc</p><p>&quot; ===<br>&quot; === Install Plugins with Vim-Plug<br>&quot; ===</p><p>call plug#begin(‘~/.vim/plugged’)</p><p>&quot; Pretty Dress<br>Plug ‘vim-airline/vim-airline’<br>Plug ‘vim-airline/vim-airline-themes’<br>Plug ‘connorholyday/vim-snazzy’<br>Plug ‘NLKNguyen/papercolor-theme’<br>Plug ‘ayu-theme/ayu-vim’<br>Plug ‘bling/vim-bufferline’</p><p>&quot; File navigation<br>Plug ‘scrooloose/nerdtree’, { ‘on’: ‘NERDTreeToggle’ }<br>Plug ‘Xuyuanp/nerdtree-git-plugin’<br>Plug ‘ctrlpvim/ctrlp.vim’, { ‘on’: ‘CtrlP’ }</p><p>&quot; Taglist<br>Plug ‘majutsushi/tagbar’, { ‘on’: ‘TagbarOpenAutoClose’ }</p><p>&quot; Error checking<br>Plug ‘w0rp/ale’</p><p>&quot; Auto Complete<br>&quot; Plug ‘Valloric/YouCompleteMe’<br>Plug ‘neoclide/coc.nvim’, {‘branch’: ‘release’}<br>&quot; Plug ‘davidhalter/jedi-vim’</p><p>&quot; Undo Tree<br>Plug ‘mbbill/undotree/’</p><p>&quot; Snippits<br>&quot; Plug ‘SirVer/ultisnips’  , { ‘for’: [‘vim-plug’, ‘python’] }<br>&quot; Plug ‘honza/vim-snippets’, { ‘for’: [‘vim-plug’, ‘python’] }</p><p>&quot; Other visual enhancement<br>Plug ‘nathanaelkane/vim-indent-guides’<br>Plug ‘itchyny/vim-cursorword’<br>Plug ‘tmhedberg/SimpylFold’</p><p>&quot; Git<br>Plug ‘rhysd/conflict-marker.vim’<br>Plug ‘tpope/vim-fugitive’<br>Plug ‘mhinz/vim-signify’<br>Plug ‘gisphm/vim-gitignore’, { ‘for’: [‘gitignore’, ‘vim-plug’] }</p><p>&quot; HTML, CSS, JavaScript, PHP, JSON, etc.<br>Plug ‘elzr/vim-json’<br>Plug ‘hail2u/vim-css3-syntax’<br>Plug ‘spf13/PIV’, { ‘for’ :[‘php’, ‘vim-plug’] }<br>Plug ‘gko/vim-coloresque’, { ‘for’: [‘vim-plug’, ‘php’, ‘html’, ‘javascript’, ‘css’, ‘less’] }<br>Plug ‘pangloss/vim-javascript’, { ‘for’ :[‘javascript’, ‘vim-plug’] }<br>Plug ‘mattn/emmet-vim’</p><p>&quot; Python<br>Plug ‘vim-scripts/indentpython.vim’<br>&quot; Plug ‘vim-python/python-syntax’, { ‘for’ :[‘python’, ‘vim-plug’] }</p><p>&quot; Markdown<br>Plug ‘iamcco/markdown-preview.nvim’, { ‘do’: { -&gt; mkdp#util#install_sync() }, ‘for’ :[‘markdown’, ‘vim-plug’] }<br>Plug ‘dhruvasagar/vim-table-mode’, { ‘on’: ‘TableModeToggle’ }<br>Plug ‘vimwiki/vimwiki’</p><p>&quot; For general writing<br>Plug ‘reedes/vim-wordy’<br>Plug ‘ron89/thesaurus_query.vim’</p><p>&quot; Bookmarks<br>Plug ‘kshenoy/vim-signature’</p><p>&quot; Other useful utilities<br>Plug ‘jiangmiao/auto-pairs’<br>Plug ‘terryma/vim-multiple-cursors’<br>Plug ‘junegunn/goyo.vim’ &quot; distraction free writing mode<br>Plug ‘ntpeters/vim-better-whitespace’, { ‘on’: [‘EnableWhitespace’, ‘ToggleWhitespace’] } &quot;displays trailing whitespace (after :EnableWhitespace, vim slows down)<br>Plug ‘tpope/vim-surround’ &quot; type ysks’ to wrap the word with ‘’ or type cs’<code>to change 'word' to</code>word`<br>Plug ‘godlygeek/tabular’ &quot; type ;Tabularize /= to align the =<br>Plug ‘gcmt/wildfire.vim’ &quot; in Visual mode, type i’ to select all text in ‘’, or type i) i] i} ip<br>Plug ‘scrooloose/nerdcommenter’ &quot; in <space>cc to comment a line</p><p>&quot; Dependencies<br>Plug ‘MarcWeber/vim-addon-mw-utils’<br>Plug ‘kana/vim-textobj-user’<br>Plug ‘fadein/vim-FIGlet’</p><p>call plug#end()</p><p>&quot; ===<br>&quot; === Create a _machine_specific.vim file to adjust machine specific stuff, like python interpreter location<br>&quot; ===<br>let has_machine_specific_file = 1<br>if empty(glob(‘~/.vim/_machine_specific.vim’))<br>let has_machine_specific_file = 0<br>exec “!cp ~/.vim/default_configs/_machine_specific_default.vim ~/.vim/_machine_specific.vim”<br>endif<br>source ~/.vim/_machine_specific.vim</p><p>&quot; ===<br>&quot; === Dress up my vim<br>&quot; ===<br>map <LEADER>c1 :set background=dark<CR>:colorscheme snazzy<CR>:AirlineTheme dracula<CR><br>map <LEADER>c2 :set background=light<CR>:colorscheme ayu<CR>:AirlineTheme ayu_light<CR></p><p>set termguicolors     &quot; enable true colors support<br>let ayucolor=“light”  &quot; for light version of theme<br>&quot; let ayucolor=“mirage” &quot; for mirage version of theme<br>&quot; let ayucolor=“dark”   &quot; for dark version of theme<br>colorscheme snazzy<br>let g:SnazzyTransparent = 1<br>set background=dark<br>let g:airline_theme=‘dracula’</p><p>let g:lightline = {<br>\     ‘active’: {<br>\         ‘left’: [[‘mode’, ‘paste’ ], [‘readonly’, ‘filename’, ‘modified’]],<br>\         ‘right’: [[‘lineinfo’], [‘percent’], [‘fileformat’, ‘fileencoding’]]<br>\     }<br>\ }</p><p>&quot; set statusline+=%#warningmsg#<br>&quot; set statusline+=%{SyntasticStatuslineFlag()}<br>&quot; set statusline+=%*</p><p>&quot; ===<br>&quot; === NERDTree<br>&quot; ===<br>map tt :NERDTreeToggle<CR><br>let NERDTreeMapOpenExpl = “”<br>let NERDTreeMapUpdir = “”<br>let NERDTreeMapUpdirKeepOpen = “l”<br>let NERDTreeMapOpenSplit = “”<br>let NERDTreeOpenVSplit = “”<br>let NERDTreeMapActivateNode = “i”<br>let NERDTreeMapOpenInTab = “o”<br>let NERDTreeMapPreview = “”<br>let NERDTreeMapCloseDir = “n”<br>let NERDTreeMapChangeRoot = “y”</p><p>&quot; ===<br>&quot; === You Complete ME<br>&quot; ===<br>nnoremap gd :YcmCompleter GoToDefinitionElseDeclaration<CR><br>nnoremap g/ :YcmCompleter GetDoc<CR><br>nnoremap gt :YcmCompleter GetType<CR><br>nnoremap gr :YcmCompleter GoToReferences<CR><br>let g:ycm_autoclose_preview_window_after_completion=0<br>let g:ycm_autoclose_preview_window_after_insertion=1<br>let g:ycm_use_clangd = 0<br>let g:ycm_python_binary_path = g:ycm_python_interpreter_path<br>&quot;let g:ycm_python_interpreter_path = system(‘which python3’)<br>&quot;let g:ycm_python_binary_path = system(‘which python3’)<br>&quot;let g:ycm_key_list_select_completion   = [‘<C-j>’, ‘<C-n>’, ‘<Down>’]<br>&quot;let g:ycm_key_list_previous_completion = [‘<C-k>’, ‘<C-p>’, ‘<Up>’]</p><p>&quot; ===<br>&quot; === vim-indent-guide<br>&quot; ===<br>let g:indent_guides_guide_size = 1<br>let g:indent_guides_start_level = 2<br>let g:indent_guides_enable_on_vim_startup = 1<br>let g:indent_guides_color_change_percent = 1<br>silent! unmap <LEADER>ig<br>autocmd WinEnter * silent! unmap <LEADER>ig</p><p>&quot; ===<br>&quot; === ale<br>&quot; ===<br>let b:ale_linters = [] &quot;[‘pylint’]<br>&quot; let b:ale_fixers = [‘autopep8’, ‘yapf’]<br>let g:ale_python_pylint_options = “–extension-pkg-whitelist=pygame”</p><p>&quot; ===<br>&quot; === MarkdownPreview<br>&quot; ===<br>let g:mkdp_auto_start = 0<br>let g:mkdp_auto_close = 1<br>let g:mkdp_refresh_slow = 0<br>let g:mkdp_command_for_global = 0<br>let g:mkdp_open_to_the_world = 0<br>let g:mkdp_open_ip = ‘’<br>let g:mkdp_browser = ‘chromium’<br>let g:mkdp_echo_preview_url = 0<br>let g:mkdp_browserfunc = ‘’<br>let g:mkdp_preview_options = {<br>\ ‘mkit’: {},<br>\ ‘katex’: {},<br>\ ‘uml’: {},<br>\ ‘maid’: {},<br>\ ‘disable_sync_scroll’: 0,<br>\ ‘sync_scroll_type’: ‘middle’,<br>\ ‘hide_yaml_meta’: 1<br>\ }<br>let g:mkdp_markdown_css = ‘’<br>let g:mkdp_highlight_css = ‘’<br>let g:mkdp_port = ‘’<br>let g:mkdp_page_title = ‘「${name}」’</p><p>&quot; ===<br>&quot; === Python-syntax<br>&quot; ===<br>let g:python_highlight_all = 1<br>&quot; let g:python_slow_sync = 0</p><p>&quot; ===<br>&quot; === Taglist<br>&quot; ===<br>map <silent> T :TagbarOpenAutoClose<CR></p><p>&quot; ===<br>&quot; === vim-table-mode<br>&quot; ===<br>map <LEADER>tm :TableModeToggle<CR></p><p>&quot; ===<br>&quot; === CtrlP<br>&quot; ===<br>map <C-p> :CtrlP<CR></p><p>&quot; ===<br>&quot; === vim-better-whitespace<br>&quot; ===<br>let g:better_whitespace_enabled=0</p><p>&quot; ===<br>&quot; === Goyo<br>&quot; ===<br>map <LEADER>gy :Goyo<CR></p><p>&quot; ===<br>&quot; === CtrlP<br>&quot; ===<br>let g:ctrlp_prompt_mappings = {<br>\ ‘PrtSelectMove(“j”)’:   [‘<c-e>’, ‘<down>’],<br>\ ‘PrtSelectMove(“k”)’:   [‘<c-u>’, ‘<up>’],<br>\ }</p><p>&quot; ===<br>&quot; === vim-signiture<br>&quot; ===<br>let g:SignatureMap = {<br>\ ‘Leader’             :  “m”,<br>\ ‘PlaceNextMark’      :  “m,”,<br>\ ‘ToggleMarkAtLine’   :  “m.”,<br>\ ‘PurgeMarksAtLine’   :  “dm-”,<br>\ ‘DeleteMark’         :  “dm”,<br>\ ‘PurgeMarks’         :  “dm/”,<br>\ ‘PurgeMarkers’       :  “dm?”,<br>\ ‘GotoNextLineAlpha’  :  “m<LEADER>”,<br>\ ‘GotoPrevLineAlpha’  :  “”,<br>\ ‘GotoNextSpotAlpha’  :  “m<LEADER>”,<br>\ ‘GotoPrevSpotAlpha’  :  “”,<br>\ ‘GotoNextLineByPos’  :  “”,<br>\ ‘GotoPrevLineByPos’  :  “”,<br>\ ‘GotoNextSpotByPos’  :  “mn”,<br>\ ‘GotoPrevSpotByPos’  :  “mp”,<br>\ ‘GotoNextMarker’     :  “”,<br>\ ‘GotoPrevMarker’     :  “”,<br>\ ‘GotoNextMarkerAny’  :  “”,<br>\ ‘GotoPrevMarkerAny’  :  “”,<br>\ ‘ListLocalMarks’     :  “m/”,<br>\ ‘ListLocalMarkers’   :  “m?”<br>\ }</p><p>&quot; ===<br>&quot; === Undotree<br>&quot; ===<br>let g:undotree_DiffAutoOpen = 0<br>map L :UndotreeToggle<CR></p><p>&quot; ===<br>&quot; === UltiSnip<br>&quot; ===<br>autocmd WinEnter * silent! iunmap <C-z><br>autocmd WinEnter * silent! unmap <C-z><br>autocmd WinEnter * silent! vunmap <C-z><br>let g:UltiSnipsExpandTrigger           = ‘<C-z>’<br>let g:UltiSnipsJumpForwardTrigger      = ‘<C-z>’<br>&quot;let g:UltiSnipsJumpBackwardTrigger     = ‘<s-tab>’</p><p>&quot; ==<br>&quot; == NERDTree-git<br>&quot; ==<br>let g:NERDTreeIndicatorMapCustom = {<br>\ “Modified”  : “✹”,<br>\ “Staged”    : “✚”,<br>\ “Untracked” : “✭”,<br>\ “Renamed”   : “➜”,<br>\ “Unmerged”  : “═”,<br>\ “Deleted”   : “✖”,<br>\ “Dirty”     : “✗”,<br>\ “Clean”     : “✔︎”,<br>\ “Unknown”   : “?”<br>\ }</p><p>&quot; Testring my own plugin<br>if !empty(glob(‘~/Github/vim-calc/vim-calc.vim’))<br>source ~/Github/vim-calc/vim-calc.vim<br>endif<br>&quot; map <LEADER>a :call Calc()<CR></p><p>&quot; ==<br>&quot; == vim-multiple-cursor<br>&quot; ==<br>let g:multi_cursor_use_default_mapping=0<br>let g:multi_cursor_start_word_key      = ‘<c-k>’<br>let g:multi_cursor_select_all_word_key = ‘<a-k>’<br>let g:multi_cursor_start_key           = ‘g<c-k>’<br>let g:multi_cursor_select_all_key      = ‘g<a-k>’<br>let g:multi_cursor_next_key            = ‘<c-k>’<br>let g:multi_cursor_prev_key            = ‘<c-p>’<br>let g:multi_cursor_skip_key            = ‘<C-x>’<br>let g:multi_cursor_quit_key            = ‘<Esc>’</p><p>let g:vimwiki_list = [{<br>\ ‘automatic_nested_syntaxes’:1,<br>\ ‘path_html’: ‘~/wiki_html’,<br>\ ‘path’: ‘~/wiki’,<br>\ ‘template_path’: ‘~/.vim/vimwiki/template/’,<br>\ ‘syntax’: ‘markdown’,<br>\ ‘ext’:‘.md’,<br>\ ‘template_default’:‘markdown’,<br>\ ‘custom_wiki2html’: ‘~/.vim/vimwiki/wiki2html.sh’,<br>\ ‘template_ext’:‘.html’<br>}]</p><p>au BufRead,BufNewFile *.md set filetype=vimwiki</p><p>let g:taskwiki_sort_orders={“C”: “pri-”}<br>let g:taskwiki_syntax = ‘markdown’<br>let g:taskwiki_markdown_syntax=‘markdown’<br>let g:taskwiki_markup_syntax=‘markdown’<br>source ~/.vim/snippits.vim</p><p>&quot; === Experimenting coc.nvim features<br>set timeoutlen=100<br>set cmdheight=2</p><p>inoremap <C-d> <Esc>:set cmdheight=2<CR>a<br>inoremap <C-t> <Esc>:set cmdheight=10<CR>a<br>nnoremap <C-d> :set cmdheight=2<CR><br>nnoremap <C-t> :set cmdheight=10<CR></p><p>set updatetime=1000<br>set shortmess+=c<br>set signcolumn=yes<br>inoremap <silent><expr> <TAB><br>\ pumvisible() ? “&lt;C-n&gt;” :<br>\ <SID>check_back_space() ? “&lt;TAB&gt;” :<br>\ coc#refresh()<br>inoremap <expr><S-TAB> pumvisible() ? “&lt;C-p&gt;” : “&lt;C-h&gt;”</p><p>function! s:check_back_space() abort<br>let col = col(‘.’) - 1<br>return !col || getline(‘.’)[col - 1]  =~# ‘\s’<br>endfunction<br>&quot; Use <cr> to confirm completion, <code>&lt;C-g&gt;u</code> means break undo chain at current position.<br>&quot; Coc only does snippet and additional edit on confirm.<br>inoremap <expr> <cr> pumvisible() ? “&lt;C-y&gt;” : “&lt;C-g&gt;u&lt;CR&gt;”<br>&quot; Use K to show documentation in preview window<br>nnoremap ? :call <SID>show_documentation()<CR><br>function! s:show_documentation()<br>if (index([‘vim’,‘help’], &amp;filetype) &gt;= 0)<br>execute ‘h ‘.expand(’<cword>’)<br>else<br>call CocAction(‘doHover’)<br>endif<br>endfunction</p><p>&quot; Highlight symbol under cursor on CursorHold<br>autocmd CursorHold * silent call CocActionAsync(‘highlight’)<br>&quot;<br>&quot; Open the _machine_specific.vim file if it has just been created<br>if has_machine_specific_file == 0<br>exec “e ~/.vim/_machine_specific.vim”<br>endif</p>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地 Docker 搭建 Nginx 反向代理 Nacos 集群</title>
      <link href="2021/03/19/%E6%9C%AC%E5%9C%B0%20Docker%20%E6%90%AD%E5%BB%BA%20Nginx%20%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%20Nacos%20%E9%9B%86%E7%BE%A4/"/>
      <url>2021/03/19/%E6%9C%AC%E5%9C%B0%20Docker%20%E6%90%AD%E5%BB%BA%20Nginx%20%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%20Nacos%20%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="本地-docker-搭建-nginx-反向代理-nacos-集群">本地 Docker 搭建 Nginx 反向代理 Nacos 集群<a title="#本地-docker-搭建-nginx-反向代理-nacos-集群" href="#本地-docker-搭建-nginx-反向代理-nacos-集群"></a></h1><blockquote><p>Nginx 从入门到实践，万字详解！：<a href="https://mp.weixin.qq.com/s/hafErlto-1N6ypYfOVIGBQ">https://mp.weixin.qq.com/s/hafErlto-1N6ypYfOVIGBQ</a></p></blockquote><h3 id="搭建-nacos-集群">搭建 Nacos 集群<a title="#搭建-nacos-集群" href="#搭建-nacos-集群"></a></h3><blockquote><p>官网地址：<a href="https://nacos.io/zh-cn/docs/quick-start-docker.html">https://nacos.io/zh-cn/docs/quick-start-docker.html</a></p></blockquote><ul><li><p>Clone 项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/nacos-group/nacos-docker.git</span><br><span class="line"><span class="built_in">cd</span> nacos-docker</span><br></pre></td></tr></table></figure></li><li><p>查看目录结构</p><blockquote><p>tree .</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── README_ZH.md</span><br><span class="line">├── build <span class="comment"># nacos 镜像制做的源码 </span></span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── bin</span><br><span class="line">│   │   └── docker<span class="literal">-startup</span>.sh</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   └── application.properties</span><br><span class="line">│   └── init.d</span><br><span class="line">│       └── custom.properties</span><br><span class="line">├── changlog</span><br><span class="line">├── env <span class="comment"># docker compose 环境变量 </span></span><br><span class="line">│   ├── mysql.env</span><br><span class="line">│   ├── nacos<span class="literal">-embedded</span>.env</span><br><span class="line">│   ├── nacos<span class="literal">-hostname</span>.env</span><br><span class="line">│   ├── nacos<span class="literal">-ip</span>.env</span><br><span class="line">│   └── nacos<span class="literal">-standlone</span><span class="literal">-mysql</span>.env</span><br><span class="line">└── example <span class="comment"># docker compose 编排文件</span></span><br><span class="line">    ├── cluster<span class="literal">-embedded</span>.yaml</span><br><span class="line">    ├── cluster<span class="literal">-hostname</span>.yaml</span><br><span class="line">    ├── cluster<span class="literal">-ip</span>.yaml</span><br><span class="line">    ├── init.d</span><br><span class="line">    │   └── custom.properties</span><br><span class="line">    ├── prometheus</span><br><span class="line">    │   ├── prometheus<span class="literal">-cluster</span>.yaml</span><br><span class="line">    │   └── prometheus<span class="literal">-standalone</span>.yaml</span><br><span class="line">    ├── standalone<span class="literal">-derby</span>.yaml</span><br><span class="line">    ├── standalone<span class="literal">-mysql</span><span class="literal">-5</span>.<span class="number">7</span>.yaml</span><br><span class="line">    └── standalone<span class="literal">-mysql</span><span class="literal">-8</span>.yaml</span><br><span class="line">```- 单机模式 Derby```</span><br><span class="line">docker<span class="literal">-compose</span> <span class="operator">-f</span> example/standalone<span class="literal">-derby</span>.yaml up</span><br></pre></td></tr></table></figure></li><li><p>单机模式 MySQL</p><p>如果希望使用 MySQL5.7</p><p><code>docker-compose -f example/standalone-mysql-5.7.yaml up</code></p><p>如果希望使用 MySQL8</p><p><code>docker-compose -f example/standalone-mysql-8.yaml up</code></p></li><li><p>集群模式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="literal">-compose</span> <span class="operator">-f</span> example/cluster<span class="literal">-hostname</span>.yaml up</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>若启动后连接不上 mysql ，需要将配置自动生成的 volumes 卷轴文件夹删除（volumes: - ./mysql:/var/lib/mysql）</p></blockquote><p>启动：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>: docker run -<span class="literal">-name</span> my<span class="literal">-nginx</span> <span class="literal">-p</span> <span class="number">8888</span>:<span class="number">80</span> <span class="literal">-v</span> <span class="string">&quot;<span class="variable">$PWD</span>/html&quot;</span>:/user/share/nginx/html  <span class="literal">-v</span> <span class="string">&quot;<span class="variable">$PWD</span>/conf&quot;</span>:/etc/nginx <span class="literal">-d</span> nginx</span><br></pre></td></tr></table></figure><blockquote><p>PWD：当前目录</p></blockquote><p>自定义配置 nginx.cong 中的 server_name <a href="http://www.linlin.com">www.linlin.com</a> 配置到 hosts 中 120.0.0.1 <a href="http://www.linlin.com">www.linlin.com</a></p><p>访问浏览器：<a href="http://www.linlin.com:8888/nacos">www.linlin.com:8888/nacos</a></p><blockquote><p>配置好 Nginx 反向代理后，若出现无法访问，列出以下几种情况：</p><ol><li>404 检查负载均衡到对应的端口没，我的情况是从 git 拉下来的 Nacos 配置代码里端口映射的有了 “9555:9555” ，但 ngnix.conf 里的 upstream 中没有配置该端口，所以负载均衡到 9555 端口出现 404</li><li>在配置 hosts 之前提前访问了 <a href="http://www.linlin.com">www.linlin.com</a> ，此时未走 127.0.0.1 页面出现 462，再次访问时会走浏览器缓存。反复都会页面 462，所以需要重新配置 server_name 或者强制清除缓存</li></ol></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法与数据结构</title>
      <link href="2021/03/19/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>2021/03/19/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="算法与数据结构">算法与数据结构<a title="#算法与数据结构" href="#算法与数据结构"></a></h1><h2 id="算法">算法<a title="#算法" href="#算法"></a></h2><h3 id="入门：算法初级">入门：算法初级<a title="#入门：算法初级" href="#入门：算法初级"></a></h3><ul><li><p>排序算法列表</p><p><a href="https://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%88%97%E8%A1%A8" target="_blank">https://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95#排序算法列表</a></p></li><li><p>冒泡排序 <a href="http://bubkoo.com/2014/01/12/sort-algorithm/bubble-sort/">http://bubkoo.com/2014/01/12/sort-algorithm/bubble-sort/</a></p></li><li><p>插入排序 <a href="http://bubkoo.com/2014/01/14/sort-algorithm/insertion-sort/">http://bubkoo.com/2014/01/14/sort-algorithm/insertion-sort/</a></p></li><li><p>计数排序（桶排序） <a href="http://bubkoo.com/2014/01/15/sort-algorithm/bucket-sort/">http://bubkoo.com/2014/01/15/sort-algorithm/bucket-sort/</a></p></li><li><p>其他排序：<a href="http://bubkoo.com/tags/algorithm/">http://bubkoo.com/tags/algorithm/</a></p></li></ul><h3 id="伪代码与流程图">伪代码与流程图<a title="#伪代码与流程图" href="#伪代码与流程图"></a></h3><p><strong>结构化编程</strong></p><p><a href="https://zh.wikipedia.org/zh-hans/%E7%BB%93%E6%9E%84%E5%8C%96%E7%BC%96%E7%A8%8B" target="_blank">https://zh.wikipedia.org/zh-hans/%E7%BB%93%E6%9E%84%E5%8C%96%E7%BC%96%E7%A8%8B</a></p><ol><li><p>一行一行执行</p></li><li><p>有条件控制语句 if…else…</p></li><li><p>有循环控制语句 while (exp) do…</p></li></ol><h4 id="伪代码的好处">伪代码的好处<a title="#伪代码的好处" href="#伪代码的好处"></a></h4><ol><li><p>不用纠结于语法的细节，因为语法是你自己定的</p></li><li><p>可以体会语言设计者的想法，因为语法是你自己定</p></li></ol><h3 id="什么是算法">什么是算法<a title="#什么是算法" href="#什么是算法"></a></h3><p><a href="https://zh.wikipedia.org/zh-hans/%E7%AE%97%E6%B3%95" target="_blank">https://zh.wikipedia.org/zh-hans/%E7%AE%97%E6%B3%95</a></p><p>以下是高德纳在他的著作《计算机程序设计艺术》里对算法的特征归纳：</p><ul><li><p>输入：一个算法必须有零个或以上输入量。</p></li><li><p>输出：一个算法应有一个或以上输出量，输出量是算法计算的结果。</p></li><li><p>明确性：算法的描述必须无歧义，以保证算法的实际执行结果是精确地匹配要求或期望，通常要求实际运行结果是确定的。</p></li><li><p>有限性：依据图灵的定义，一个算法是能够被任何图灵完备系统模拟的一串运算，而图灵机只有有限个状态、有限个输入符号和有限个转移函数（指令）。而一些定义更规定算法必须在有限个步骤内完成任务。</p></li><li><p>有效性：又称可行性。能够实现，算法中描述的操作都是可以通过已经实现的基本运算执行有限次来实现。</p></li></ul><h3 id="排序算法">排序算法<a title="#排序算法" href="#排序算法"></a></h3><ol><li><p>体育委员两两摸头法（冒泡排序）</p></li><li><p>体育老师一指禅法（选择排序）</p></li><li><p>起扑克牌法（插入排序）</p></li><li><p>强迫症收扑克牌法（基数排序）</p></li><li><p>快排</p></li><li><p>归并排序</p></li><li><p>堆排序</p></li></ol><blockquote><p>排序可视化：<a href="https://visualgo.net/bn/sorting">https://visualgo.net/bn/sorting</a></p></blockquote><h2 id="数据结构">数据结构<a title="#数据结构" href="#数据结构"></a></h2><h3 id="什么是数据结构">什么是数据结构<a title="#什么是数据结构" href="#什么是数据结构"></a></h3><p>一般来说是这样的：</p><ol><li><p>我们要解决一个跟数据相关的问题</p></li><li><p>分析这个问题，想出对应的数据结构</p></li><li><p>分析数据结构，想出算法</p></li></ol><blockquote><p>数据结构和算法是互相依存、不可分开的，你学习完排序算法，就能了解常见的数据结构</p></blockquote><h3 id="大分类">大分类<a title="#大分类" href="#大分类"></a></h3><ul><li><p>分治法：把一个问题分区成互相独立的多个部分分别求解的思路。这种求解思路带来的好处之一是便于进行并行计算。</p></li><li><p>动态规划法：当问题的整体最优解就是由局部最优解组成的时候，经常采用的一种方法。</p></li><li><p>贪婪算法：常见的近似求解思路。当问题的整体最优解不是（或无法证明是）由局部最优解组成，且对解的最优性没有要求的时候，可以采用的一种方法。</p></li><li><p>线性规划法：见词条。</p></li><li><p>简并法：把一个问题通过逻辑或数学推理，简化成与之等价或者近似的、相对简单的模型，进而求解的方法。</p></li></ul><h3 id="小分类">小分类<a title="#小分类" href="#小分类"></a></h3><ol><li><p>哈希（Hash）</p><ul><li>计数排序中的桶（复杂度 O(n+max)，比快排还快）</li><li><a href="http://bubkoo.com/2014/01/15/sort-algorithm/bucket-sort/" target="_blank">桶排序</a> 与计数排序的区别</li><li><a href="http://bubkoo.com/2014/01/15/sort-algorithm/radix-sort/" target="_blank">基数排序</a> 与计数排序的区别</li></ul><blockquote><p>计数排序：统计班上年龄是 0-100 岁之间的人。n 是第一遍遍历的人数，max 是最大的年龄</p><p>桶排序就是比计数排序少桶</p></blockquote></li><li><p>队列（Queue）</p><ul><li><p>先进先出</p></li><li><p>可以用数组实现</p></li></ul><blockquote><p>举例：排队</p></blockquote></li><li><p>栈（Stack）</p><ul><li><p>先进后出</p></li><li><p>可以用数组实现</p></li></ul><blockquote><p>举例：盗梦空间</p></blockquote></li><li><p>链表（Linked List）</p><ul><li><p>数组无法<strong>直接</strong>删除中间的一项，链表可以</p></li><li><p>用哈希（JS 里面用对象表示哈希）实现链表</p></li><li><p>head、node 概念</p></li></ul><blockquote><p>删除头尾用数组，删除中间用链表。JS 中数组本质是 hash，也是对象</p></blockquote></li><li><p>树（tree）</p><ul><li><p>举例：层级结构、DOM</p></li><li><p>概念：层数、深度、节点个数</p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%8F%89%E6%A0%91" target="_blank">二叉树</a></p></li><li><p>满二叉树</p></li><li><p>完全二叉树</p></li><li><p>完全二叉树和满二叉树可以用数组实现</p></li><li><p>其他树可以用哈希（对象）实现</p></li><li><p>操作：增删改查</p></li><li><p>堆排序用到了 tree</p></li><li><p>其他：[B 树](<a href="https://zh.wikipedia.org/wiki/B">https://zh.wikipedia.org/wiki/B</a> 树)、[红黑树](<a href="https://zh.wikipedia.org/wiki/">https://zh.wikipedia.org/wiki/</a> 红黑树)、[AVL 树](<a href="https://zh.wikipedia.org/wiki/AVL">https://zh.wikipedia.org/wiki/AVL</a> 树)</p></li></ul><blockquote><p>堆排序可视化：<a href="https://www.cs.usfca.edu/~galles/visualization/HeapSort.html">https://www.cs.usfca.edu/~galles/visualization/HeapSort.html</a><br>堆排序 JS 代码完整讲解（看到最后）：<a href="http://bubkoo.com/2014/01/14/sort-algorithm/heap-sort/">http://bubkoo.com/2014/01/14/sort-algorithm/heap-sort/</a></p></blockquote></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简历</title>
      <link href="2021/03/18/%E7%AE%80%E5%8E%86/"/>
      <url>2021/03/18/%E7%AE%80%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h1 id="简历">简历<a title="#简历" href="#简历"></a></h1><h3 id="外观">外观<a title="#外观" href="#外观"></a></h3><p>一般大家都会简历的外观很重视，我这里给大家介绍几个网站</p><ol><li>在 <a href="http://dribbble.com">dribbble.com</a> 搜索 cv 或者 resume</li><li>在五百丁直接花钱购买 Word 模板</li></ol><p>Google：frontend resume template</p><p>这个简历的优点：<a href="http://rscardwp.px-lab.com/">http://rscardwp.px-lab.com/</a></p><ol><li>是在线版，方便我们查看它的代码</li><li>有动效，赏心悦目</li><li>界面很丰富，我们可以择其善者而从之</li></ol><p>为了方便后期我们使用 <code>逼近法</code> 实现页面，请前往 <a href="https://www.getpaint.net/">https://www.getpaint.net/</a> 下载 <a href="http://paint.net">paint.net</a> 图片编辑软件，这个软件比 Photoshop 小多了，如果你有 Photoshop 就不用下载了。外观确定之后，我们就要介绍一个我们学习的指导思想，那就是</p><blockquote><p>需要用什么就学习什么</p></blockquote><p>很多人想学会 HTML、CSS、JS 再做网页，最后却发现看完书之后什么页面都写不出来！这是错误的学习方法，先用再学才是学编程的不二法门</p><h3 id="内容">内容<a title="#内容" href="#内容"></a></h3><p>我们简历里写什么内容呢？必须包含的有以下几部分：</p><ol><li>个人信息：姓名、性别、年龄、学校、所在城市、目标职位（千万不要写目标薪资）</li><li>教育经历：不管你的学校好或者不好（避免浪费时间）</li><li>工作经历：如果有相关经验就写，如果没有相关经验就不写，或者一笔带过</li><li>项目经验：这是我们的重点。我们就是要用项目来证明我们，所以我们至少要在毕业前准备 8 个项目，然后择优选择 4 到 6 个放在简历里</li></ol><p>可选部分有：</p><ol><li><p>开源代码：你的 GitHub 如果每天都有 commit 记录，可以加分不少</p></li><li><p>博客链接：如果面试官看到你半年写了 20 篇博客，基本就会要你了</p></li><li><p>外文翻译：如果你能翻译一些英文技术文章，也放在简历里吧</p></li><li><p>他人评价：老师的评语、同学的夸奖等（截图）</p></li><li><p>自拍：只要长得不丑，就一定要放头像，给人以亲切感。有头像的简历会比没有头像的简历更醒目。</p></li><li><p>对公司业务的分析：表示你对这个公司很关注</p></li></ol><p>不建议写到简历</p><ol><li>自我评价：没什么卵用</li><li>对公司的喜爱：没什么卵用</li><li>段子：没什么卵用</li></ol><blockquote><p>一个在线简历显然会用到以下技术 HTML、CSS、JS、SVG、AJAX</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>脚本</title>
      <link href="2021/03/18/%E8%84%9A%E6%9C%AC/"/>
      <url>2021/03/18/%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="脚本">脚本<a title="#脚本" href="#脚本"></a></h1><h3 id="理解脚本">理解脚本<a title="#理解脚本" href="#理解脚本"></a></h3><p>如果你打开一本JavaScript教程，那么很可能在第一章就看到这句话：</p><blockquote><p>JavaScript 是一门动态类型、面向对象的脚本语言</p></blockquote><p>其实脚本原本来自戏剧舞台，比如下面这个脚本：</p><blockquote><p>公馆一室内<br>王妈：（小心翼翼地）小姐，您还是得注意身子，就吃点东西吧。<br>鸡小姐：（把碗砸在地上）不吃，我就是不吃。<br>（王妈下）</p></blockquote><p>脚本主要由人物对话和舞台提示组成。演员和道具组只需要按照脚本说的做即可</p><p>编程领域的脚本也是类似的，计算机只要照着脚本上说的做即可，比如下面这个脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Desktop</span><br><span class="line">mkdir demo</span><br><span class="line"><span class="built_in">cd</span> demo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hi&quot;</span>&gt;index.html</span><br><span class="line"><span class="built_in">cd</span> ~/Desktop</span><br></pre></td></tr></table></figure><p>所以说，脚本就是给计算机照着做的。这是我们对「脚本！的一个感性认识。接下来我们写一个脚本。</p><h3 id="写一个脚本">写一个脚本<a title="#写一个脚本" href="#写一个脚本"></a></h3><ol><li><p>找个地方新建文件，后缀随意，一般来说脚本的后缀是 .sh，但是我偏要把后缀写成 .txt。我喜欢把脚本放在 ~/local 目录里。（我知道你没有这个目录，创建一下这个目录就行啦）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/<span class="built_in">local</span></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="built_in">local</span></span><br><span class="line">touch demo.txt</span><br></pre></td></tr></table></figure></li><li><p>编辑 demo.txt，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir demo</span><br><span class="line"><span class="built_in">cd</span> demo</span><br><span class="line">mkdir css js</span><br><span class="line">touch index.html css/style.css js/main.js</span><br></pre></td></tr></table></figure></li><li><p>（Windows 用户请跳过这一步）给 demo.txt 添加执行权限 chmod +x demo.txt</p></li><li><p>在任意位置执行 sh ~/local/demo.txt 即可运行此脚本</p><ul><li>cd ~/Desktop</li><li>sh ~/local/demo.txt</li><li>你会看到当前目录里多出一个 demo 目录，demo 目录里面还有一些文件<br>好了，这个 demo.txt 就是你写出的第一个 Bash 脚本了。</li></ul></li><li><p>将 ~/local 添加到 PATH 里</p><ul><li>cd ~/local; pwd 得到 local 的绝对路径</li><li>创建 ~/.bashrc：touch ~/.bashrc</li><li>编辑 ~/.bashrc：start ~/.bashrc</li><li>在编辑器里添加一行字： export PATH=“local的绝对路径:$PATH”</li><li>source ~/.bashrc</li><li>之前你要运行 sh ~/local/demo.txt，现在你只需要运行 demo.txt 就行了（想想为什么，道理显而易见）</li></ul></li><li><p>demo.txt 的后缀 .txt 很无聊，删掉它</p><ul><li>mv ~/local/demo.txt ~/local/demo</li><li>现在你只要运行 demo 就能执行该脚本了</li></ul></li></ol><h3 id="细节">细节<a title="#细节" href="#细节"></a></h3><ol><li>PATH 的作用：你每次在 Bash 里面输入一个命令时（比如 ls、cp、demo），Bash 都会去 PATH 列表里面寻找对应的文件，如果找到了就执行。</li><li>使用 type demo 可以看到寻找过程</li><li>使用 which demo 可以看到寻找结果</li><li>文件后缀的作用：毫无作用你以为一个文件以 .exe 结尾就一定可以双击吗？你以为一个文件以 .png 结尾就一定是图片吗？图样图森破！</li></ol><h3 id="参数">参数<a title="#参数" href="#参数"></a></h3><p>demo 脚本只能创建名字为 demo 的目录，太无聊了，我们让目录名是可变的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="variable">$1</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">mkdir css js</span><br><span class="line">touch index.html css/style.css js/main.js</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p>$1 表示你传的第一个参数。</p></blockquote><p>老师你怎么知道 $1 表示第一个参数？</p><blockquote><p>好问题，答案是我 Google 出来的 <a href="http://lmgtfy.com/?q=bash+first+param">http://lmgtfy.com/?q=bash+first+param</a><br>用百度也行 <a href="http://www.baidu-x.com/?q=bash+%E7%AC%AC%E4%B8%80%E4%B8%AA+%E5%8F%82%E6%95%B0">http://www.baidu-x.com/?q=bash+第一个+参数</a></p></blockquote><h3 id="判断目录是否已存在">判断目录是否已存在<a title="#判断目录是否已存在" href="#判断目录是否已存在"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;error: dir exists&#x27;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    mkdir <span class="variable">$1</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">    mkdir css js</span><br><span class="line">    touch index.html css/style.css js/main.js</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;success&#x27;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>老师，你怎么知道 -d $1 可以判断目录是否存在？<br>我 Google 出来的 <a href="http://lmgtfy.com/?q=bash+dir+exists">http://lmgtfy.com/?q=bash+dir+exists</a></p></blockquote><h3 id="返回值">返回值<a title="#返回值" href="#返回值"></a></h3><ul><li>exit 0 表示没有错误</li><li>exit 1 表示错误代码为 1</li></ul><blockquote><p>demo &amp;&amp; echo ‘结束’</p></blockquote><p>只有在 demo 成功时，才会执行 echo ‘结束’.</p><h3 id="总结">总结<a title="#总结" href="#总结"></a></h3><ol><li>脚本就是给机器一行一行执行的文本</li><li>Bash 脚本有Bash脚本的语法，Node.js 脚本有JS语法</li><li>不管是那种脚本，能实现的功能都差不多，只是语法不同</li><li>Bash脚本的语法挺奇葩的，比如$1$#等符号5.不同特别去学Bash 脚本的用法，遇到不会的就 Google、</li><li>不同特别去学Node.js 脚本的用法，遇到不会的就 Google</li><li>新人写代码最大的问题就是「抄错了」多写了一个空格，少写了一个空格，单词拼错了，没有加分号，多加了分号</li></ol><h3 id="写自己的脚本">写自己的脚本<a title="#写自己的脚本" href="#写自己的脚本"></a></h3><p>把Linux上的配置文件写成脚本上传到GitHub，要执行的时候下载即可（检查执行权限）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L http://github.com/xx/xx.sh</span><br><span class="line">./xx.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL练习</title>
      <link href="2021/03/09/MySQL%E7%BB%83%E4%B9%A0/"/>
      <url>2021/03/09/MySQL%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql练习">MySQL练习<a title="#mysql练习" href="#mysql练习"></a></h2><h3 id="数据库初始化">数据库初始化<a title="#数据库初始化" href="#数据库初始化"></a></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_score;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_courses;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_students;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_teachers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `Student`(</span><br><span class="line">    `s_id` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `s_name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    `s_birth` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    `s_sex` <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`s_id`)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 课程表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `Course`(</span><br><span class="line">    `c_id`  <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `c_name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    `t_id` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`c_id`)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 教师表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `Teacher`(</span><br><span class="line">    `t_id` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `t_name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`t_id`)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 成绩表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `Score`(</span><br><span class="line">    `s_id` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `c_id`  <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `s_score` <span class="type">INT</span>(<span class="number">3</span>),</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`s_id`,`c_id`)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入学生表测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;赵雷&#x27;</span> , <span class="string">&#x27;1990-01-01&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;钱电&#x27;</span> , <span class="string">&#x27;1990-12-21&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;孙风&#x27;</span> , <span class="string">&#x27;1990-05-20&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;04&#x27;</span> , <span class="string">&#x27;李云&#x27;</span> , <span class="string">&#x27;1990-08-06&#x27;</span> , <span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;05&#x27;</span> , <span class="string">&#x27;周梅&#x27;</span> , <span class="string">&#x27;1991-12-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;06&#x27;</span> , <span class="string">&#x27;吴兰&#x27;</span> , <span class="string">&#x27;1992-03-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;07&#x27;</span> , <span class="string">&#x27;郑竹&#x27;</span> , <span class="string">&#x27;1989-07-01&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">&#x27;08&#x27;</span> , <span class="string">&#x27;王菊&#x27;</span> , <span class="string">&#x27;1990-01-20&#x27;</span> , <span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="comment">-- 课程表测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;语文&#x27;</span> , <span class="string">&#x27;02&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;数学&#x27;</span> , <span class="string">&#x27;01&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;英语&#x27;</span> , <span class="string">&#x27;03&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 教师表测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Teacher <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Teacher <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;李四&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Teacher <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;王五&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 成绩表测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;01&#x27;</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;02&#x27;</span> , <span class="number">90</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;01&#x27;</span> , <span class="string">&#x27;03&#x27;</span> , <span class="number">99</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;01&#x27;</span> , <span class="number">70</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;02&#x27;</span> , <span class="number">60</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;02&#x27;</span> , <span class="string">&#x27;03&#x27;</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;01&#x27;</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;02&#x27;</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;03&#x27;</span> , <span class="string">&#x27;03&#x27;</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;04&#x27;</span> , <span class="string">&#x27;01&#x27;</span> , <span class="number">50</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;04&#x27;</span> , <span class="string">&#x27;02&#x27;</span> , <span class="number">30</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;04&#x27;</span> , <span class="string">&#x27;03&#x27;</span> , <span class="number">20</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;05&#x27;</span> , <span class="string">&#x27;01&#x27;</span> , <span class="number">76</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;05&#x27;</span> , <span class="string">&#x27;02&#x27;</span> , <span class="number">87</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;06&#x27;</span> , <span class="string">&#x27;01&#x27;</span> , <span class="number">31</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;06&#x27;</span> , <span class="string">&#x27;03&#x27;</span> , <span class="number">34</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;07&#x27;</span> , <span class="string">&#x27;02&#x27;</span> , <span class="number">89</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score <span class="keyword">values</span>(<span class="string">&#x27;07&#x27;</span> , <span class="string">&#x27;03&#x27;</span> , <span class="number">98</span>);</span><br></pre></td></tr></table></figure><h3 id="练习题">练习题<a title="#练习题" href="#练习题"></a></h3><ol><li><p>查询&quot;01&quot;课程比&quot;02&quot;课程成绩高的学生的信息及课程分数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name, stu.birthday, stu.stu_gender,</span><br><span class="line">    ifnull(sc1.score, 0) as &#39;1课程分数&#39;, ifnull(sc2.score, 0) as &#39;2课程分数&#39;</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc1 on stu.stu_id &#x3D; sc1.stu_id and sc1.course_id &#x3D; 1</span><br><span class="line">left join t_score sc2 on stu.stu_id &#x3D; sc2.stu_id and sc2.course_id &#x3D; 2</span><br><span class="line">where ifnull(sc1.score, 0) &gt; ifnull(sc2.score, 0);</span><br></pre></td></tr></table></figure></li><li><p>查询&quot;01&quot;课程比&quot;02&quot;课程成绩低的学生的信息及课程分数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name, stu.birthday, stu.stu_gender,</span><br><span class="line">    ifnull(sc1.score, 0) as &#39;1课程分数&#39;, ifnull(sc2.score, 0) as &#39;2课程分数&#39;</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc1 on stu.stu_id &#x3D; sc1.stu_id and sc1.course_id &#x3D; 1</span><br><span class="line">left join t_score sc2 on stu.stu_id &#x3D; sc2.stu_id and sc2.course_id &#x3D; 2</span><br><span class="line">where ifnull(sc1.score, 0) &lt; ifnull(sc2.score, 0);</span><br></pre></td></tr></table></figure></li><li><p>查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name, round(avg(sc.score), 2) as avg_score</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc on stu.stu_id &#x3D; sc.stu_id</span><br><span class="line">group by stu.stu_id, stu.stu_name</span><br><span class="line">having avg_score &gt;&#x3D; 60;</span><br></pre></td></tr></table></figure></li><li><p>查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name, round(ifnull(avg(sc.score), 0), 2) as avg_score</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc on stu.stu_id &#x3D; sc.stu_id</span><br><span class="line">group by stu.stu_id, stu.stu_name</span><br><span class="line">having avg_score &lt; 60;</span><br></pre></td></tr></table></figure></li><li><p>查询所有同学的学生编号. 学生姓名. 选课总数. 所有课程的总成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name, </span><br><span class="line">    count(sc.course_id) as &#39;qty_course&#39;, -- 选课数量</span><br><span class="line">    ifnull(sum(sc.score), 0) as &#39;sum_score&#39; -- 总分数</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc on stu.stu_id &#x3D; sc.stu_id</span><br><span class="line">group by stu.stu_id, stu.stu_name;</span><br></pre></td></tr></table></figure></li><li><p>查询&quot;李&quot;姓老师的数量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select count(0) from t_teachers</span><br><span class="line">where teacher_name like &#39;李%&#39;;</span><br></pre></td></tr></table></figure></li><li><p>查询学过&quot;张三&quot;老师授课的同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select stu.* from t_students stu</span><br><span class="line">where stu.stu_id in (</span><br><span class="line">    select sc.stu_id from t_score sc</span><br><span class="line">    left join t_courses cou on sc.course_id &#x3D; cou.course_id</span><br><span class="line">    left join t_teachers te on cou.teacher_id &#x3D; te.teacher_id</span><br><span class="line">    where te.teacher_name &#x3D; &#39;贝吉塔&#39;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询没学过&quot;张三&quot;老师授课的同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select stu.* from t_students stu</span><br><span class="line">where stu.stu_id not in (</span><br><span class="line">    select sc.stu_id from t_score sc</span><br><span class="line">    left join t_courses cou on sc.course_id &#x3D; cou.course_id</span><br><span class="line">    left join t_teachers te on cou.teacher_id &#x3D; te.teacher_id</span><br><span class="line">    where te.teacher_name &#x3D; &#39;贝吉塔&#39;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询学过编号为&quot;01&quot;并且也学过编号为&quot;02&quot;的课程的同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">select stu_id, stu_name, birthday, stu_gender</span><br><span class="line">from t_students</span><br><span class="line">where stu_id in (</span><br><span class="line">    select stu_id</span><br><span class="line">    from t_score</span><br><span class="line">    where course_id &#x3D; 1)</span><br><span class="line">and stu_id in (</span><br><span class="line">    select stu_id</span><br><span class="line">    from t_score</span><br><span class="line">    where course_id &#x3D; 2);</span><br></pre></td></tr></table></figure></li><li><p>查询学过编号为&quot;01&quot;但是没有学过编号为&quot;02&quot;的课程的同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">select stu_id, stu_name, birthday, stu_gender</span><br><span class="line">from t_students</span><br><span class="line">where stu_id in (</span><br><span class="line">    select stu_id</span><br><span class="line">    from t_score</span><br><span class="line">    where course_id &#x3D; 1)</span><br><span class="line">and stu_id not in (</span><br><span class="line">    select stu_id</span><br><span class="line">    from t_score</span><br><span class="line">    where course_id &#x3D; 2);</span><br></pre></td></tr></table></figure></li><li><p>查询没有学全所有课程的同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select student_id, student_name</span><br><span class="line">from tb_student</span><br><span class="line">where student_id in (</span><br><span class="line">    select stu.student_id</span><br><span class="line">    from tb_student stu</span><br><span class="line">    left join tb_score sc on stu.student_id &#x3D; sc.student_id</span><br><span class="line">    group by student_id</span><br><span class="line">    having count(course_id) &lt; (</span><br><span class="line">        select count(0)</span><br><span class="line">        from tb_course</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询至少有一门课与学号为&quot;01&quot;的同学所学相同的同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select * from t_students</span><br><span class="line">where stu_id in (</span><br><span class="line">select stu_id from t_score</span><br><span class="line">where course_id in (</span><br><span class="line">select course_id from t_score where stu_id &#x3D; 1</span><br><span class="line">) and stu_id !&#x3D; 1</span><br><span class="line">group by stu_id</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询和&quot;01&quot;号的同学学习的课程完全相同的其他同学的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">select * from t_students where stu_id in (</span><br><span class="line">select temp.stu_id from (</span><br><span class="line">select sc.stu_id, group_concat(crs.course_name) as courses</span><br><span class="line">from t_score sc</span><br><span class="line">left join t_courses crs on sc.course_id &#x3D; crs.course_id</span><br><span class="line">group by sc.stu_id</span><br><span class="line">) temp where temp.courses &#x3D; (</span><br><span class="line">select group_concat(crs.course_name) as courses</span><br><span class="line">from t_score sc</span><br><span class="line">left join t_courses crs on sc.course_id &#x3D; crs.course_id</span><br><span class="line">group by sc.stu_id</span><br><span class="line">having sc.stu_id &#x3D; 1</span><br><span class="line">) and temp.stu_id !&#x3D; 1</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询没学过&quot;张三&quot;老师讲授的任一门课程的学生姓名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_name from t_students stu where stu.stu_id not in (</span><br><span class="line">    select sc.stu_id from t_score sc -- 学过贝吉塔教的课的学生id</span><br><span class="line">    left join t_courses cou on sc.course_id &#x3D; cou.course_id</span><br><span class="line">    left join t_teachers tc on cou.teacher_id &#x3D; tc.teacher_id</span><br><span class="line">    where tc.teacher_name &#x3D; &#39;贝吉塔&#39;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name, avg(sc.score)</span><br><span class="line">from t_students stu</span><br><span class="line">left join  t_score sc on stu.stu_id &#x3D; sc.stu_id</span><br><span class="line">group by stu.stu_id, stu.stu_name</span><br><span class="line">having sum(</span><br><span class="line">case </span><br><span class="line">when ifnull(sc.score, 0) &lt; 60 then 1</span><br><span class="line">else 0 end</span><br><span class="line">) &gt;&#x3D; 2;</span><br></pre></td></tr></table></figure></li><li><p>检索&quot;01&quot;课程分数小于60，按分数降序排列的学生信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select stu.*, sum(sc.score) as score_sum</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc on stu.stu_id &#x3D; sc.stu_id</span><br><span class="line">where stu.stu_id in (</span><br><span class="line">select stu_id from t_score</span><br><span class="line">where course_id &#x3D; 1 and score &lt; 60</span><br><span class="line">) group by stu.stu_id</span><br><span class="line">order by score_sum desc;</span><br></pre></td></tr></table></figure></li><li><p>按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">select stu.stu_id, stu.stu_name,</span><br><span class="line">  ifnull(sc1.score, 0) as yw_score, -- 语文分数</span><br><span class="line">  ifnull(sc2.score, 0) as sx_score, -- 数学分数</span><br><span class="line">  ifnull(sc3.score, 0) as yy_score, -- 英语分数</span><br><span class="line">  round(ifnull(avg_t.avg_score, 0), 2) as avg_score</span><br><span class="line">from t_students stu</span><br><span class="line">left join t_score sc1 on stu.stu_id &#x3D; sc1.stu_id and sc1.course_id &#x3D; 1 -- 语文成绩表</span><br><span class="line">left join t_score sc2 on stu.stu_id &#x3D; sc2.stu_id and sc2.course_id &#x3D; 2 -- 数学成绩表</span><br><span class="line">left join t_score sc3 on stu.stu_id &#x3D; sc3.stu_id and sc3.course_id &#x3D; 3 -- 英语成绩表</span><br><span class="line">left join ( -- 子查询, 临时表</span><br><span class="line">    select stu_id, avg(score) as avg_score -- 平均分</span><br><span class="line">    from t_score</span><br><span class="line">    group by stu_id</span><br><span class="line">    order by avg_score</span><br><span class="line">    ) avg_t on stu.stu_id &#x3D; avg_t.stu_id</span><br><span class="line">order by avg_t.avg_score desc;</span><br></pre></td></tr></table></figure></li><li><p>查询各科成绩最高分. 最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率 及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">select sc.course_id, crs.course_name,</span><br><span class="line">    max(sc.score) as max_score,</span><br><span class="line">    min(sc.score) as min_score,</span><br><span class="line">    avg(sc.score) as avg_score,</span><br><span class="line">    sum(sc.score &gt;&#x3D; 60) &#x2F; 8 as pass_per,</span><br><span class="line">    sum(sc.score &gt;&#x3D; 70 and sc.score &lt; 80) &#x2F; 8 as medium_per,</span><br><span class="line">    sum(</span><br><span class="line">    case</span><br><span class="line">    when sc.score &gt;&#x3D; 80 and sc.score &lt; 90 then 1</span><br><span class="line">    else 0</span><br><span class="line">    end</span><br><span class="line">    ) &#x2F; 8 as good_per,</span><br><span class="line">    sum(</span><br><span class="line">    case</span><br><span class="line">    when sc.score &gt;&#x3D; 90 then 1</span><br><span class="line">    else 0</span><br><span class="line">    end</span><br><span class="line">    ) &#x2F; 8 as perfect_per</span><br><span class="line">from t_score sc</span><br><span class="line">right join t_courses crs on sc.course_id &#x3D; crs.course_id</span><br><span class="line">group by sc.course_id, crs.course_name;</span><br></pre></td></tr></table></figure></li><li><p>按各科成绩进行排序，并显示排名</p></li><li><p>查询学生的总成绩并进行排名</p><ol><li>查询学生的总成绩</li><li>查询学生的总成绩并进行排名，sql 2000用子查询完成，分总分重复时保留名次空缺和不保留名次空缺两种。</li><li>查询学生的总成绩并进行排名，sql 2005用rank,DENSE_RANK完成，分总分重复时保留名次空缺和不保留名次空缺两种。</li></ol></li><li><p>查询不同老师所教不同课程平均分从高到低显示</p></li><li><p>查询所有课程的成绩第2名到第3名的学生信息及该课程成绩</p></li><li><p>统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]及所占百分比</p><ol><li>统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]</li><li>统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[&lt;60]及所占百分比</li></ol></li><li><p>查询学生平均成绩及其名次</p><ol><li>查询学生的平均成绩并进行排名，sql 2000用子查询完成，分平均成绩重复时保留名次空缺和不保留名次空缺两种。</li><li>查询学生的平均成绩并进行排名，sql 2005用rank,DENSE_RANK完成，分平均成绩重复时保留名次空缺和不保留名次空缺两种。</li></ol></li><li><p>查询各科成绩前三名的记录</p><ol><li>分数重复时保留名次空缺</li><li>分数重复时不保留名次空缺，合并名次</li></ol></li><li><p>查询每门课程被选修的学生数</p></li><li><p>查询出只有两门课程的全部学生的学号和姓名</p></li><li><p>查询男生. 女生人数</p></li><li><p>查询名字中含有&quot;风&quot;字的学生信息</p></li><li><p>查询同名同性学生名单，并统计同名人数</p></li><li><p>查询1990年出生的学生名单</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM t_students</span><br><span class="line">WHERE EXTRACT(YEAR FROM birthday) &#x3D; 1990;</span><br></pre></td></tr></table></figure><ol start="32"><li>查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列</li><li>查询平均成绩大于等于85的所有学生的学号. 姓名和平均成绩</li><li>查询课程名称为&quot;数学&quot;，且分数低于60的学生姓名和分数</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  t_students.stu_name,</span><br><span class="line">  t_score.score</span><br><span class="line">FROM t_score</span><br><span class="line">  CROSS JOIN t_courses ON t_score.course_id &#x3D; t_courses.course_id AND t_courses.course_name &#x3D; &#39;数学&#39;</span><br><span class="line">  CROSS JOIN t_students ON t_score.stu_id &#x3D; t_students.stu_id</span><br><span class="line">WHERE score &lt; 60</span><br></pre></td></tr></table></figure><ol start="35"><li>查询所有学生的课程及分数情况；</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT stu_name,score,course_name FROM t_students</span><br><span class="line">LEFT JOIN t_score ON t_students.stu_id &#x3D; t_score.stu_id</span><br><span class="line">LEFT JOIN t_courses ON t_score.course_id &#x3D; t_courses.course_id;</span><br></pre></td></tr></table></figure><ol start="36"><li>查询任何一门课程成绩在70分以上的姓名. 课程名称和分数；</li><li>查询不及格的课程</li><li>查询课程编号为01且课程成绩在80分以上的学生的学号和姓名；</li><li>求每门课程的学生人数</li><li>查询选修&quot;张三&quot;老师所授课程的学生中，成绩最高的学生信息及其成绩<ol><li>当最高分只有一个时</li><li>当最高分出现多个时</li></ol></li><li>查询不同课程成绩相同的学生的学生编号. 课程编号. 学生成绩</li><li>查询每门功成绩最好的前两名</li><li>统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</li><li>检索至少选修两门课程的学生学号</li><li>查询选修了全部课程的学生信息</li><li>查询各学生的年龄<ol><li>只按照年份来算</li><li>按照出生日期来算，当前月日 &lt; 出生年月的月日则，年龄减一</li></ol></li><li>查询本周过生日的学生</li><li>查询下周过生日的学生</li><li>查询本月过生日的学生</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM t_students</span><br><span class="line">WHERE EXTRACT(MONTH FROM birthday) &#x3D; EXTRACT(MONTH FROM curdate());</span><br></pre></td></tr></table></figure><ol start="50"><li>查询下月过生日的学生</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM t_students</span><br><span class="line">WHERE EXTRACT(MONTH FROM birthday) &#x3D; EXTRACT(MONTH FROM curdate()) + 1</span><br><span class="line">      OR EXTRACT(MONTH FROM birthday) &#x3D; 1 AND EXTRACT(MONTH FROM curdate()) &#x3D; 12;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL中的索引</title>
      <link href="2021/03/09/MySQL%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95/"/>
      <url>2021/03/09/MySQL%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql">MySQL<a title="#mysql" href="#mysql"></a></h1><p>数据库优化是一个综合型的技术，并不是通过某一种方式让数据库效率提高很多，而是通过多方面的提高，从而使的数据库提高很多。<br>主要包括：</p><ol><li><p>表的设计合理化（3范式）</p></li><li><p>SQL语句优化</p></li><li><p>给表要添加合适的索引，如何使用索引。</p></li><li><p>分表技术（水平分割、垂直分割）</p></li><li><p>定时清除垃圾数据，定时进行碎片整理</p></li><li><p>多用存储过程，和触发器。</p></li><li><p>对mysql的配置进行一些优化</p></li><li><p>读写分离。</p></li><li><p>MySQL服务器硬件升级。<br>数据库的设计</p></li></ol><p>MySQL中的索引：<br>基本法则：索引应该构建在被用作查询条件的字段上；索引类型：<br>B+Tree素引：顺序存储，每一个叶子节点到根结点的距离是相同的：左前缀索引，适合查询范围类的数据；可以使用B-Tree案引的查询类型：全键值、键值范围或键前缀查找：<br>全值匹配：精确某个值，“Jinjiao King&quot;：<br>匹配最左前缀：只精确匹配起头部分，“Jin%”<br>匹配范围值：<br>精确匹配某一列并范围匹配另一列：<br>只访问索引的查询<br>不适合使用B-Tree索引的场景：<br>如果不从最左列开始，索引无效：（Age，Name）<br>不能跳过索引中的列：（StuID，Name，Age）如果查询中某个列是为范围查询，那么其右侧的列都无法再使用索引优化查询：（StuID，Name）<br>Hash索引：基于哈希表实现，特别适用于精确匹配索引中的所有列；注意：只有Memory存储引擎支持显式hash索引：</p><p>适用场景：<br>只支持等值比较查询，包括=，IN（），&lt;=&gt;；不适合使用hash索引的场景：<br>存储的非为值的顺序，因此，不适用于顺序查询；不支持模糊匹配；空间索引（R-Tree）：<br>MyISAM支持空间索引：<br>全辛索引（FULLTEXT）：<br>在文本中查找关键词：</p><p>索引优点：<br>索引可以降低服务需要扫描的数据量，减少了I0次数；索引可以帮助服务器避免排序和使用临时表：索引可以帮助将随机I/0转为顺序I/0；高性能索引策略：<br>独立使用列，尽量避免其参与运算：<br>左前缀索引：索引构建于字段的左侧的多少个字符，要通过索引选择性来评估索引选择性：不重复的索引值和数据表的记录总数的比值；多列索引：<br>AND操作时更适合使用多列索引：<br>选择合适的索引列次序：将选择性最高放左侧；冗余和重复索引：不好的索引使用策略</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="2021/03/08/Spring/"/>
      <url>2021/03/08/Spring/</url>
      
        <content type="html"><![CDATA[<h1 id="spring">Spring<a title="#spring" href="#spring"></a></h1><h3 id="ioc">IOC<a title="#ioc" href="#ioc"></a></h3><p>程序的耦合：程序间的依赖关系<br>包括：类之间的依赖、方法间的依赖<br>解耦：降低程序间的依赖关系<br>实际开发中应该做到：编译期不依赖，运行时才依赖。</p><blockquote><p>就是要做到要new的类删掉以后，编译期不让它报错</p></blockquote><p>解耦的思路：<br>第一步：使用反射来创建对象，而避免使用new关键字</p><blockquote><p>private IAccountDao accountDao=new AccountDaoImpl();</p></blockquote><p>第二步：通过读取配置文件来获取要创建的对象全限定类名</p><p>Bean：在计算机英语中，有可重用组件的含义。<br>JavaBean：用java语言编写的可重用组件。javabean&gt;实体类<br>一个创建Bean对象的工厂，它就是创建我们的service和dao对象的，两种方式：<br>i.需要一个配置文件来配置我们的service和dao配置的内容：唯一标识=全限定类名（key=value）<br>ii.通过读取配置文件中配置的内容，反射创建对象</p><p>我的配置文件可以是xml也可以是properties</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Chrome</title>
      <link href="2021/03/08/Chrome/"/>
      <url>2021/03/08/Chrome/</url>
      
        <content type="html"><![CDATA[<h3 id="chrome">Chrome<a title="#chrome" href="#chrome"></a></h3><ol><li><p>如何做好CHROME浏览器的书签管理</p><ul><li><p>删除</p></li><li><p>分类</p><ul><li>领域，兴趣爱好，关注里点，日常使用</li><li>使用思维导图勾勒出书签文件夹体系</li><li>文件夹目录层圾不超过三层</li></ul></li><li><p>精选</p><ul><li>工具属性 -&gt; 收藏夹</li><li>内容属性~&gt;云笔记</li></ul><blockquote><p>坚持每周清理【其他书签】文件夹</p></blockquote></li><li><p>收藏</p><ul><li>浏览器自带收藏夹</li><li>收趣</li><li>Pocket</li></ul></li></ul></li></ol><h3 id="谷歌搜索技巧">谷歌搜索技巧<a title="#谷歌搜索技巧" href="#谷歌搜索技巧"></a></h3><ol><li><p>关键词化整为零搜索</p><ul><li>使用介绍：格口语表达拆分成关键词</li><li>案例说明<ul><li>如何将PDF文件转换为Word文件？- PDF转Word</li><li>大神，有沒有好用的录音转文字软件成工具？<ul><li>录啬转文字</li><li>intitle：录音转文字</li></ul></li><li>博主，请问有没有好用的视频压缩软件啊？<ul><li>intitle：视频压缩 - site：<a href="http://zhihu.com">zhihu.com</a></li><li>视频压缩</li></ul></li></ul></li></ul></li><li><p>intitle命令</p><p>intitle: 指令返回的是页面title 中包含关键词的页面。Google 和bd都支持intitle 指令。</p><p>使用intitle 指令找到的文件是更准确的竞争页面。如果关键词只出现在页面可见文字中，而没有出现在title 中，大部分情况是并没有针对关键词进行优化，所以也不是有力的竞争对手。</p></li><li><p>Site</p><ul><li>论文版 site:jianshu.com</li><li>北京昌平合租 <a href="http://siteidouban.com">siteidouban.com</a></li><li>PDFEIement site:52pojie.cn</li><li>intitle:手机录屏软件 site:zhihu.com</li></ul></li><li><p>限定来源网站类型</p><ul><li>使用介绍:定向筛选特定网站类型的信息,例如教育网站edu,政府网站gov</li><li>格式:在关键词后面加后缀,例如:关键词gov filetype:pdf</li><li>案例说明<ul><li>搜索政府发布的关于网络安全这块的PDF文件: intitle:“网络安全” gov filetype:pdf</li><li>北京房贷gov</li><li>“软件演化” edu filetype:pdf</li></ul></li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
